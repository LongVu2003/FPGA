-- lab62soc_mm_interconnect_0.vhd

-- This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
-- will probably be lost.
-- 
-- Generated using ACDS version 17.1 590

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lab62soc_mm_interconnect_0 is
	port (
		clk_0_clk_clk                                  : in  std_logic                     := '0';             --                                clk_0_clk.clk
		sdram_pll_c0_clk                               : in  std_logic                     := '0';             --                             sdram_pll_c0.clk
		nios2_gen2_0_reset_reset_bridge_in_reset_reset : in  std_logic                     := '0';             -- nios2_gen2_0_reset_reset_bridge_in_reset.reset
		sdram_reset_reset_bridge_in_reset_reset        : in  std_logic                     := '0';             --        sdram_reset_reset_bridge_in_reset.reset
		nios2_gen2_0_data_master_address               : in  std_logic_vector(27 downto 0) := (others => '0'); --                 nios2_gen2_0_data_master.address
		nios2_gen2_0_data_master_waitrequest           : out std_logic;                                        --                                         .waitrequest
		nios2_gen2_0_data_master_byteenable            : in  std_logic_vector(3 downto 0)  := (others => '0'); --                                         .byteenable
		nios2_gen2_0_data_master_read                  : in  std_logic                     := '0';             --                                         .read
		nios2_gen2_0_data_master_readdata              : out std_logic_vector(31 downto 0);                    --                                         .readdata
		nios2_gen2_0_data_master_write                 : in  std_logic                     := '0';             --                                         .write
		nios2_gen2_0_data_master_writedata             : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .writedata
		nios2_gen2_0_data_master_debugaccess           : in  std_logic                     := '0';             --                                         .debugaccess
		nios2_gen2_0_instruction_master_address        : in  std_logic_vector(27 downto 0) := (others => '0'); --          nios2_gen2_0_instruction_master.address
		nios2_gen2_0_instruction_master_waitrequest    : out std_logic;                                        --                                         .waitrequest
		nios2_gen2_0_instruction_master_read           : in  std_logic                     := '0';             --                                         .read
		nios2_gen2_0_instruction_master_readdata       : out std_logic_vector(31 downto 0);                    --                                         .readdata
		hex_digits_pio_s1_address                      : out std_logic_vector(1 downto 0);                     --                        hex_digits_pio_s1.address
		hex_digits_pio_s1_write                        : out std_logic;                                        --                                         .write
		hex_digits_pio_s1_readdata                     : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		hex_digits_pio_s1_writedata                    : out std_logic_vector(31 downto 0);                    --                                         .writedata
		hex_digits_pio_s1_chipselect                   : out std_logic;                                        --                                         .chipselect
		jtag_uart_0_avalon_jtag_slave_address          : out std_logic_vector(0 downto 0);                     --            jtag_uart_0_avalon_jtag_slave.address
		jtag_uart_0_avalon_jtag_slave_write            : out std_logic;                                        --                                         .write
		jtag_uart_0_avalon_jtag_slave_read             : out std_logic;                                        --                                         .read
		jtag_uart_0_avalon_jtag_slave_readdata         : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		jtag_uart_0_avalon_jtag_slave_writedata        : out std_logic_vector(31 downto 0);                    --                                         .writedata
		jtag_uart_0_avalon_jtag_slave_waitrequest      : in  std_logic                     := '0';             --                                         .waitrequest
		jtag_uart_0_avalon_jtag_slave_chipselect       : out std_logic;                                        --                                         .chipselect
		key_s1_address                                 : out std_logic_vector(1 downto 0);                     --                                   key_s1.address
		key_s1_readdata                                : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		keycode_s1_address                             : out std_logic_vector(1 downto 0);                     --                               keycode_s1.address
		keycode_s1_write                               : out std_logic;                                        --                                         .write
		keycode_s1_readdata                            : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		keycode_s1_writedata                           : out std_logic_vector(31 downto 0);                    --                                         .writedata
		keycode_s1_chipselect                          : out std_logic;                                        --                                         .chipselect
		leds_pio_s1_address                            : out std_logic_vector(1 downto 0);                     --                              leds_pio_s1.address
		leds_pio_s1_write                              : out std_logic;                                        --                                         .write
		leds_pio_s1_readdata                           : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		leds_pio_s1_writedata                          : out std_logic_vector(31 downto 0);                    --                                         .writedata
		leds_pio_s1_chipselect                         : out std_logic;                                        --                                         .chipselect
		nios2_gen2_0_debug_mem_slave_address           : out std_logic_vector(8 downto 0);                     --             nios2_gen2_0_debug_mem_slave.address
		nios2_gen2_0_debug_mem_slave_write             : out std_logic;                                        --                                         .write
		nios2_gen2_0_debug_mem_slave_read              : out std_logic;                                        --                                         .read
		nios2_gen2_0_debug_mem_slave_readdata          : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		nios2_gen2_0_debug_mem_slave_writedata         : out std_logic_vector(31 downto 0);                    --                                         .writedata
		nios2_gen2_0_debug_mem_slave_byteenable        : out std_logic_vector(3 downto 0);                     --                                         .byteenable
		nios2_gen2_0_debug_mem_slave_waitrequest       : in  std_logic                     := '0';             --                                         .waitrequest
		nios2_gen2_0_debug_mem_slave_debugaccess       : out std_logic;                                        --                                         .debugaccess
		onchip_memory2_0_s1_address                    : out std_logic_vector(1 downto 0);                     --                      onchip_memory2_0_s1.address
		onchip_memory2_0_s1_write                      : out std_logic;                                        --                                         .write
		onchip_memory2_0_s1_readdata                   : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		onchip_memory2_0_s1_writedata                  : out std_logic_vector(31 downto 0);                    --                                         .writedata
		onchip_memory2_0_s1_byteenable                 : out std_logic_vector(3 downto 0);                     --                                         .byteenable
		onchip_memory2_0_s1_chipselect                 : out std_logic;                                        --                                         .chipselect
		onchip_memory2_0_s1_clken                      : out std_logic;                                        --                                         .clken
		sdram_s1_address                               : out std_logic_vector(24 downto 0);                    --                                 sdram_s1.address
		sdram_s1_write                                 : out std_logic;                                        --                                         .write
		sdram_s1_read                                  : out std_logic;                                        --                                         .read
		sdram_s1_readdata                              : in  std_logic_vector(15 downto 0) := (others => '0'); --                                         .readdata
		sdram_s1_writedata                             : out std_logic_vector(15 downto 0);                    --                                         .writedata
		sdram_s1_byteenable                            : out std_logic_vector(1 downto 0);                     --                                         .byteenable
		sdram_s1_readdatavalid                         : in  std_logic                     := '0';             --                                         .readdatavalid
		sdram_s1_waitrequest                           : in  std_logic                     := '0';             --                                         .waitrequest
		sdram_s1_chipselect                            : out std_logic;                                        --                                         .chipselect
		sdram_pll_pll_slave_address                    : out std_logic_vector(1 downto 0);                     --                      sdram_pll_pll_slave.address
		sdram_pll_pll_slave_write                      : out std_logic;                                        --                                         .write
		sdram_pll_pll_slave_read                       : out std_logic;                                        --                                         .read
		sdram_pll_pll_slave_readdata                   : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		sdram_pll_pll_slave_writedata                  : out std_logic_vector(31 downto 0);                    --                                         .writedata
		spi_0_spi_control_port_address                 : out std_logic_vector(2 downto 0);                     --                   spi_0_spi_control_port.address
		spi_0_spi_control_port_write                   : out std_logic;                                        --                                         .write
		spi_0_spi_control_port_read                    : out std_logic;                                        --                                         .read
		spi_0_spi_control_port_readdata                : in  std_logic_vector(15 downto 0) := (others => '0'); --                                         .readdata
		spi_0_spi_control_port_writedata               : out std_logic_vector(15 downto 0);                    --                                         .writedata
		spi_0_spi_control_port_chipselect              : out std_logic;                                        --                                         .chipselect
		sysid_qsys_0_control_slave_address             : out std_logic_vector(0 downto 0);                     --               sysid_qsys_0_control_slave.address
		sysid_qsys_0_control_slave_readdata            : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		timer_0_s1_address                             : out std_logic_vector(3 downto 0);                     --                               timer_0_s1.address
		timer_0_s1_write                               : out std_logic;                                        --                                         .write
		timer_0_s1_readdata                            : in  std_logic_vector(15 downto 0) := (others => '0'); --                                         .readdata
		timer_0_s1_writedata                           : out std_logic_vector(15 downto 0);                    --                                         .writedata
		timer_0_s1_chipselect                          : out std_logic;                                        --                                         .chipselect
		usb_gpx_s1_address                             : out std_logic_vector(1 downto 0);                     --                               usb_gpx_s1.address
		usb_gpx_s1_readdata                            : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		usb_irq_s1_address                             : out std_logic_vector(1 downto 0);                     --                               usb_irq_s1.address
		usb_irq_s1_readdata                            : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		usb_rst_s1_address                             : out std_logic_vector(1 downto 0);                     --                               usb_rst_s1.address
		usb_rst_s1_write                               : out std_logic;                                        --                                         .write
		usb_rst_s1_readdata                            : in  std_logic_vector(31 downto 0) := (others => '0'); --                                         .readdata
		usb_rst_s1_writedata                           : out std_logic_vector(31 downto 0);                    --                                         .writedata
		usb_rst_s1_chipselect                          : out std_logic                                         --                                         .chipselect
	);
end entity lab62soc_mm_interconnect_0;

architecture rtl of lab62soc_mm_interconnect_0 is
	component altera_merlin_master_agent is
		generic (
			PKT_ORI_BURST_SIZE_H      : integer := 116;
			PKT_ORI_BURST_SIZE_L      : integer := 114;
			PKT_RESPONSE_STATUS_H     : integer := 113;
			PKT_RESPONSE_STATUS_L     : integer := 112;
			PKT_QOS_H                 : integer := 111;
			PKT_QOS_L                 : integer := 108;
			PKT_DATA_SIDEBAND_H       : integer := 107;
			PKT_DATA_SIDEBAND_L       : integer := 100;
			PKT_ADDR_SIDEBAND_H       : integer := 99;
			PKT_ADDR_SIDEBAND_L       : integer := 95;
			PKT_BURST_TYPE_H          : integer := 94;
			PKT_BURST_TYPE_L          : integer := 93;
			PKT_CACHE_H               : integer := 92;
			PKT_CACHE_L               : integer := 89;
			PKT_THREAD_ID_H           : integer := 88;
			PKT_THREAD_ID_L           : integer := 87;
			PKT_BURST_SIZE_H          : integer := 86;
			PKT_BURST_SIZE_L          : integer := 84;
			PKT_TRANS_EXCLUSIVE       : integer := 83;
			PKT_TRANS_LOCK            : integer := 82;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_PROTECTION_H          : integer := 80;
			PKT_PROTECTION_L          : integer := 80;
			PKT_BURSTWRAP_H           : integer := 79;
			PKT_BURSTWRAP_L           : integer := 77;
			PKT_BYTE_CNT_H            : integer := 76;
			PKT_BYTE_CNT_L            : integer := 74;
			PKT_ADDR_H                : integer := 73;
			PKT_ADDR_L                : integer := 42;
			PKT_TRANS_COMPRESSED_READ : integer := 41;
			PKT_TRANS_POSTED          : integer := 40;
			PKT_TRANS_WRITE           : integer := 39;
			PKT_TRANS_READ            : integer := 38;
			PKT_DATA_H                : integer := 37;
			PKT_DATA_L                : integer := 6;
			PKT_BYTEEN_H              : integer := 5;
			PKT_BYTEEN_L              : integer := 2;
			PKT_SRC_ID_H              : integer := 1;
			PKT_SRC_ID_L              : integer := 1;
			PKT_DEST_ID_H             : integer := 0;
			PKT_DEST_ID_L             : integer := 0;
			ST_DATA_W                 : integer := 115;
			ST_CHANNEL_W              : integer := 1;
			AV_BURSTCOUNT_W           : integer := 3;
			SUPPRESS_0_BYTEEN_RSP     : integer := 1;
			ID                        : integer := 1;
			BURSTWRAP_VALUE           : integer := 4;
			CACHE_VALUE               : integer := 0;
			SECURE_ACCESS_BIT         : integer := 1;
			USE_READRESPONSE          : integer := 0;
			USE_WRITERESPONSE         : integer := 0
		);
		port (
			clk                   : in  std_logic                      := 'X';             -- clk
			reset                 : in  std_logic                      := 'X';             -- reset
			av_address            : in  std_logic_vector(27 downto 0)  := (others => 'X'); -- address
			av_write              : in  std_logic                      := 'X';             -- write
			av_read               : in  std_logic                      := 'X';             -- read
			av_writedata          : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- writedata
			av_readdata           : out std_logic_vector(31 downto 0);                     -- readdata
			av_waitrequest        : out std_logic;                                         -- waitrequest
			av_readdatavalid      : out std_logic;                                         -- readdatavalid
			av_byteenable         : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- byteenable
			av_burstcount         : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- burstcount
			av_debugaccess        : in  std_logic                      := 'X';             -- debugaccess
			av_lock               : in  std_logic                      := 'X';             -- lock
			cp_valid              : out std_logic;                                         -- valid
			cp_data               : out std_logic_vector(105 downto 0);                    -- data
			cp_startofpacket      : out std_logic;                                         -- startofpacket
			cp_endofpacket        : out std_logic;                                         -- endofpacket
			cp_ready              : in  std_logic                      := 'X';             -- ready
			rp_valid              : in  std_logic                      := 'X';             -- valid
			rp_data               : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			rp_channel            : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			rp_startofpacket      : in  std_logic                      := 'X';             -- startofpacket
			rp_endofpacket        : in  std_logic                      := 'X';             -- endofpacket
			rp_ready              : out std_logic;                                         -- ready
			av_response           : out std_logic_vector(1 downto 0);                      -- response
			av_writeresponsevalid : out std_logic                                          -- writeresponsevalid
		);
	end component altera_merlin_master_agent;

	component lab62soc_mm_interconnect_0_router is
		port (
			sink_ready         : out std_logic;                                         -- ready
			sink_valid         : in  std_logic                      := 'X';             -- valid
			sink_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			src_ready          : in  std_logic                      := 'X';             -- ready
			src_valid          : out std_logic;                                         -- valid
			src_data           : out std_logic_vector(105 downto 0);                    -- data
			src_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src_startofpacket  : out std_logic;                                         -- startofpacket
			src_endofpacket    : out std_logic                                          -- endofpacket
		);
	end component lab62soc_mm_interconnect_0_router;

	component lab62soc_mm_interconnect_0_router_002 is
		port (
			sink_ready         : out std_logic;                                         -- ready
			sink_valid         : in  std_logic                      := 'X';             -- valid
			sink_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			src_ready          : in  std_logic                      := 'X';             -- ready
			src_valid          : out std_logic;                                         -- valid
			src_data           : out std_logic_vector(105 downto 0);                    -- data
			src_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src_startofpacket  : out std_logic;                                         -- startofpacket
			src_endofpacket    : out std_logic                                          -- endofpacket
		);
	end component lab62soc_mm_interconnect_0_router_002;

	component lab62soc_mm_interconnect_0_router_007 is
		port (
			sink_ready         : out std_logic;                                        -- ready
			sink_valid         : in  std_logic                     := 'X';             -- valid
			sink_data          : in  std_logic_vector(87 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                     := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                     := 'X';             -- endofpacket
			clk                : in  std_logic                     := 'X';             -- clk
			reset              : in  std_logic                     := 'X';             -- reset
			src_ready          : in  std_logic                     := 'X';             -- ready
			src_valid          : out std_logic;                                        -- valid
			src_data           : out std_logic_vector(87 downto 0);                    -- data
			src_channel        : out std_logic_vector(14 downto 0);                    -- channel
			src_startofpacket  : out std_logic;                                        -- startofpacket
			src_endofpacket    : out std_logic                                         -- endofpacket
		);
	end component lab62soc_mm_interconnect_0_router_007;

	component altera_merlin_burst_adapter is
		generic (
			PKT_ADDR_H                : integer := 79;
			PKT_ADDR_L                : integer := 48;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_BYTE_CNT_H            : integer := 5;
			PKT_BYTE_CNT_L            : integer := 0;
			PKT_BYTEEN_H              : integer := 83;
			PKT_BYTEEN_L              : integer := 80;
			PKT_BURST_SIZE_H          : integer := 86;
			PKT_BURST_SIZE_L          : integer := 84;
			PKT_BURST_TYPE_H          : integer := 88;
			PKT_BURST_TYPE_L          : integer := 87;
			PKT_BURSTWRAP_H           : integer := 11;
			PKT_BURSTWRAP_L           : integer := 6;
			PKT_TRANS_COMPRESSED_READ : integer := 14;
			PKT_TRANS_WRITE           : integer := 13;
			PKT_TRANS_READ            : integer := 12;
			OUT_NARROW_SIZE           : integer := 0;
			IN_NARROW_SIZE            : integer := 0;
			OUT_FIXED                 : integer := 0;
			OUT_COMPLETE_WRAP         : integer := 0;
			ST_DATA_W                 : integer := 89;
			ST_CHANNEL_W              : integer := 8;
			OUT_BYTE_CNT_H            : integer := 5;
			OUT_BURSTWRAP_H           : integer := 11;
			COMPRESSED_READ_SUPPORT   : integer := 1;
			BYTEENABLE_SYNTHESIS      : integer := 0;
			PIPE_INPUTS               : integer := 0;
			NO_WRAP_SUPPORT           : integer := 0;
			INCOMPLETE_WRAP_SUPPORT   : integer := 1;
			BURSTWRAP_CONST_MASK      : integer := 0;
			BURSTWRAP_CONST_VALUE     : integer := -1;
			ADAPTER_VERSION           : string  := "13.1"
		);
		port (
			clk                   : in  std_logic                     := 'X';             -- clk
			reset                 : in  std_logic                     := 'X';             -- reset
			sink0_valid           : in  std_logic                     := 'X';             -- valid
			sink0_data            : in  std_logic_vector(87 downto 0) := (others => 'X'); -- data
			sink0_channel         : in  std_logic_vector(14 downto 0) := (others => 'X'); -- channel
			sink0_startofpacket   : in  std_logic                     := 'X';             -- startofpacket
			sink0_endofpacket     : in  std_logic                     := 'X';             -- endofpacket
			sink0_ready           : out std_logic;                                        -- ready
			source0_valid         : out std_logic;                                        -- valid
			source0_data          : out std_logic_vector(87 downto 0);                    -- data
			source0_channel       : out std_logic_vector(14 downto 0);                    -- channel
			source0_startofpacket : out std_logic;                                        -- startofpacket
			source0_endofpacket   : out std_logic;                                        -- endofpacket
			source0_ready         : in  std_logic                     := 'X'              -- ready
		);
	end component altera_merlin_burst_adapter;

	component lab62soc_mm_interconnect_0_cmd_demux is
		port (
			clk                 : in  std_logic                      := 'X';             -- clk
			reset               : in  std_logic                      := 'X';             -- reset
			sink_ready          : out std_logic;                                         -- ready
			sink_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink_valid          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- valid
			src0_ready          : in  std_logic                      := 'X';             -- ready
			src0_valid          : out std_logic;                                         -- valid
			src0_data           : out std_logic_vector(105 downto 0);                    -- data
			src0_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src0_startofpacket  : out std_logic;                                         -- startofpacket
			src0_endofpacket    : out std_logic;                                         -- endofpacket
			src1_ready          : in  std_logic                      := 'X';             -- ready
			src1_valid          : out std_logic;                                         -- valid
			src1_data           : out std_logic_vector(105 downto 0);                    -- data
			src1_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src1_startofpacket  : out std_logic;                                         -- startofpacket
			src1_endofpacket    : out std_logic;                                         -- endofpacket
			src2_ready          : in  std_logic                      := 'X';             -- ready
			src2_valid          : out std_logic;                                         -- valid
			src2_data           : out std_logic_vector(105 downto 0);                    -- data
			src2_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src2_startofpacket  : out std_logic;                                         -- startofpacket
			src2_endofpacket    : out std_logic;                                         -- endofpacket
			src3_ready          : in  std_logic                      := 'X';             -- ready
			src3_valid          : out std_logic;                                         -- valid
			src3_data           : out std_logic_vector(105 downto 0);                    -- data
			src3_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src3_startofpacket  : out std_logic;                                         -- startofpacket
			src3_endofpacket    : out std_logic;                                         -- endofpacket
			src4_ready          : in  std_logic                      := 'X';             -- ready
			src4_valid          : out std_logic;                                         -- valid
			src4_data           : out std_logic_vector(105 downto 0);                    -- data
			src4_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src4_startofpacket  : out std_logic;                                         -- startofpacket
			src4_endofpacket    : out std_logic;                                         -- endofpacket
			src5_ready          : in  std_logic                      := 'X';             -- ready
			src5_valid          : out std_logic;                                         -- valid
			src5_data           : out std_logic_vector(105 downto 0);                    -- data
			src5_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src5_startofpacket  : out std_logic;                                         -- startofpacket
			src5_endofpacket    : out std_logic;                                         -- endofpacket
			src6_ready          : in  std_logic                      := 'X';             -- ready
			src6_valid          : out std_logic;                                         -- valid
			src6_data           : out std_logic_vector(105 downto 0);                    -- data
			src6_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src6_startofpacket  : out std_logic;                                         -- startofpacket
			src6_endofpacket    : out std_logic;                                         -- endofpacket
			src7_ready          : in  std_logic                      := 'X';             -- ready
			src7_valid          : out std_logic;                                         -- valid
			src7_data           : out std_logic_vector(105 downto 0);                    -- data
			src7_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src7_startofpacket  : out std_logic;                                         -- startofpacket
			src7_endofpacket    : out std_logic;                                         -- endofpacket
			src8_ready          : in  std_logic                      := 'X';             -- ready
			src8_valid          : out std_logic;                                         -- valid
			src8_data           : out std_logic_vector(105 downto 0);                    -- data
			src8_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src8_startofpacket  : out std_logic;                                         -- startofpacket
			src8_endofpacket    : out std_logic;                                         -- endofpacket
			src9_ready          : in  std_logic                      := 'X';             -- ready
			src9_valid          : out std_logic;                                         -- valid
			src9_data           : out std_logic_vector(105 downto 0);                    -- data
			src9_channel        : out std_logic_vector(14 downto 0);                     -- channel
			src9_startofpacket  : out std_logic;                                         -- startofpacket
			src9_endofpacket    : out std_logic;                                         -- endofpacket
			src10_ready         : in  std_logic                      := 'X';             -- ready
			src10_valid         : out std_logic;                                         -- valid
			src10_data          : out std_logic_vector(105 downto 0);                    -- data
			src10_channel       : out std_logic_vector(14 downto 0);                     -- channel
			src10_startofpacket : out std_logic;                                         -- startofpacket
			src10_endofpacket   : out std_logic;                                         -- endofpacket
			src11_ready         : in  std_logic                      := 'X';             -- ready
			src11_valid         : out std_logic;                                         -- valid
			src11_data          : out std_logic_vector(105 downto 0);                    -- data
			src11_channel       : out std_logic_vector(14 downto 0);                     -- channel
			src11_startofpacket : out std_logic;                                         -- startofpacket
			src11_endofpacket   : out std_logic;                                         -- endofpacket
			src12_ready         : in  std_logic                      := 'X';             -- ready
			src12_valid         : out std_logic;                                         -- valid
			src12_data          : out std_logic_vector(105 downto 0);                    -- data
			src12_channel       : out std_logic_vector(14 downto 0);                     -- channel
			src12_startofpacket : out std_logic;                                         -- startofpacket
			src12_endofpacket   : out std_logic;                                         -- endofpacket
			src13_ready         : in  std_logic                      := 'X';             -- ready
			src13_valid         : out std_logic;                                         -- valid
			src13_data          : out std_logic_vector(105 downto 0);                    -- data
			src13_channel       : out std_logic_vector(14 downto 0);                     -- channel
			src13_startofpacket : out std_logic;                                         -- startofpacket
			src13_endofpacket   : out std_logic;                                         -- endofpacket
			src14_ready         : in  std_logic                      := 'X';             -- ready
			src14_valid         : out std_logic;                                         -- valid
			src14_data          : out std_logic_vector(105 downto 0);                    -- data
			src14_channel       : out std_logic_vector(14 downto 0);                     -- channel
			src14_startofpacket : out std_logic;                                         -- startofpacket
			src14_endofpacket   : out std_logic                                          -- endofpacket
		);
	end component lab62soc_mm_interconnect_0_cmd_demux;

	component lab62soc_mm_interconnect_0_cmd_mux is
		port (
			clk                 : in  std_logic                      := 'X';             -- clk
			reset               : in  std_logic                      := 'X';             -- reset
			src_ready           : in  std_logic                      := 'X';             -- ready
			src_valid           : out std_logic;                                         -- valid
			src_data            : out std_logic_vector(105 downto 0);                    -- data
			src_channel         : out std_logic_vector(14 downto 0);                     -- channel
			src_startofpacket   : out std_logic;                                         -- startofpacket
			src_endofpacket     : out std_logic;                                         -- endofpacket
			sink0_ready         : out std_logic;                                         -- ready
			sink0_valid         : in  std_logic                      := 'X';             -- valid
			sink0_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink0_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink0_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink0_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink1_ready         : out std_logic;                                         -- ready
			sink1_valid         : in  std_logic                      := 'X';             -- valid
			sink1_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink1_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink1_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink1_endofpacket   : in  std_logic                      := 'X'              -- endofpacket
		);
	end component lab62soc_mm_interconnect_0_cmd_mux;

	component lab62soc_mm_interconnect_0_rsp_demux is
		port (
			clk                : in  std_logic                      := 'X';             -- clk
			reset              : in  std_logic                      := 'X';             -- reset
			sink_ready         : out std_logic;                                         -- ready
			sink_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink_valid         : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- valid
			src0_ready         : in  std_logic                      := 'X';             -- ready
			src0_valid         : out std_logic;                                         -- valid
			src0_data          : out std_logic_vector(105 downto 0);                    -- data
			src0_channel       : out std_logic_vector(14 downto 0);                     -- channel
			src0_startofpacket : out std_logic;                                         -- startofpacket
			src0_endofpacket   : out std_logic;                                         -- endofpacket
			src1_ready         : in  std_logic                      := 'X';             -- ready
			src1_valid         : out std_logic;                                         -- valid
			src1_data          : out std_logic_vector(105 downto 0);                    -- data
			src1_channel       : out std_logic_vector(14 downto 0);                     -- channel
			src1_startofpacket : out std_logic;                                         -- startofpacket
			src1_endofpacket   : out std_logic                                          -- endofpacket
		);
	end component lab62soc_mm_interconnect_0_rsp_demux;

	component lab62soc_mm_interconnect_0_rsp_mux is
		port (
			clk                  : in  std_logic                      := 'X';             -- clk
			reset                : in  std_logic                      := 'X';             -- reset
			src_ready            : in  std_logic                      := 'X';             -- ready
			src_valid            : out std_logic;                                         -- valid
			src_data             : out std_logic_vector(105 downto 0);                    -- data
			src_channel          : out std_logic_vector(14 downto 0);                     -- channel
			src_startofpacket    : out std_logic;                                         -- startofpacket
			src_endofpacket      : out std_logic;                                         -- endofpacket
			sink0_ready          : out std_logic;                                         -- ready
			sink0_valid          : in  std_logic                      := 'X';             -- valid
			sink0_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink0_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink0_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink0_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink1_ready          : out std_logic;                                         -- ready
			sink1_valid          : in  std_logic                      := 'X';             -- valid
			sink1_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink1_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink1_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink1_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink2_ready          : out std_logic;                                         -- ready
			sink2_valid          : in  std_logic                      := 'X';             -- valid
			sink2_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink2_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink2_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink2_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink3_ready          : out std_logic;                                         -- ready
			sink3_valid          : in  std_logic                      := 'X';             -- valid
			sink3_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink3_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink3_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink3_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink4_ready          : out std_logic;                                         -- ready
			sink4_valid          : in  std_logic                      := 'X';             -- valid
			sink4_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink4_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink4_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink4_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink5_ready          : out std_logic;                                         -- ready
			sink5_valid          : in  std_logic                      := 'X';             -- valid
			sink5_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink5_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink5_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink5_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink6_ready          : out std_logic;                                         -- ready
			sink6_valid          : in  std_logic                      := 'X';             -- valid
			sink6_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink6_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink6_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink6_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink7_ready          : out std_logic;                                         -- ready
			sink7_valid          : in  std_logic                      := 'X';             -- valid
			sink7_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink7_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink7_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink7_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink8_ready          : out std_logic;                                         -- ready
			sink8_valid          : in  std_logic                      := 'X';             -- valid
			sink8_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink8_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink8_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink8_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink9_ready          : out std_logic;                                         -- ready
			sink9_valid          : in  std_logic                      := 'X';             -- valid
			sink9_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink9_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink9_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			sink9_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			sink10_ready         : out std_logic;                                         -- ready
			sink10_valid         : in  std_logic                      := 'X';             -- valid
			sink10_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink10_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink10_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink10_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink11_ready         : out std_logic;                                         -- ready
			sink11_valid         : in  std_logic                      := 'X';             -- valid
			sink11_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink11_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink11_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink11_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink12_ready         : out std_logic;                                         -- ready
			sink12_valid         : in  std_logic                      := 'X';             -- valid
			sink12_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink12_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink12_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink12_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink13_ready         : out std_logic;                                         -- ready
			sink13_valid         : in  std_logic                      := 'X';             -- valid
			sink13_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink13_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink13_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink13_endofpacket   : in  std_logic                      := 'X';             -- endofpacket
			sink14_ready         : out std_logic;                                         -- ready
			sink14_valid         : in  std_logic                      := 'X';             -- valid
			sink14_channel       : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			sink14_data          : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			sink14_startofpacket : in  std_logic                      := 'X';             -- startofpacket
			sink14_endofpacket   : in  std_logic                      := 'X'              -- endofpacket
		);
	end component lab62soc_mm_interconnect_0_rsp_mux;

	component altera_avalon_st_handshake_clock_crosser is
		generic (
			DATA_WIDTH          : integer := 8;
			BITS_PER_SYMBOL     : integer := 8;
			USE_PACKETS         : integer := 0;
			USE_CHANNEL         : integer := 0;
			CHANNEL_WIDTH       : integer := 1;
			USE_ERROR           : integer := 0;
			ERROR_WIDTH         : integer := 1;
			VALID_SYNC_DEPTH    : integer := 2;
			READY_SYNC_DEPTH    : integer := 2;
			USE_OUTPUT_PIPELINE : integer := 1
		);
		port (
			in_clk            : in  std_logic                      := 'X';             -- clk
			in_reset          : in  std_logic                      := 'X';             -- reset
			out_clk           : in  std_logic                      := 'X';             -- clk
			out_reset         : in  std_logic                      := 'X';             -- reset
			in_ready          : out std_logic;                                         -- ready
			in_valid          : in  std_logic                      := 'X';             -- valid
			in_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			in_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			in_channel        : in  std_logic_vector(14 downto 0)  := (others => 'X'); -- channel
			in_data           : in  std_logic_vector(105 downto 0) := (others => 'X'); -- data
			out_ready         : in  std_logic                      := 'X';             -- ready
			out_valid         : out std_logic;                                         -- valid
			out_startofpacket : out std_logic;                                         -- startofpacket
			out_endofpacket   : out std_logic;                                         -- endofpacket
			out_channel       : out std_logic_vector(14 downto 0);                     -- channel
			out_data          : out std_logic_vector(105 downto 0);                    -- data
			in_empty          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- empty
			in_error          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- error
			out_empty         : out std_logic_vector(0 downto 0);                      -- empty
			out_error         : out std_logic_vector(0 downto 0)                       -- error
		);
	end component altera_avalon_st_handshake_clock_crosser;

	component lab62soc_mm_interconnect_0_avalon_st_adapter is
		generic (
			inBitsPerSymbol : integer := 8;
			inUsePackets    : integer := 0;
			inDataWidth     : integer := 8;
			inChannelWidth  : integer := 3;
			inErrorWidth    : integer := 2;
			inUseEmptyPort  : integer := 0;
			inUseValid      : integer := 1;
			inUseReady      : integer := 1;
			inReadyLatency  : integer := 0;
			outDataWidth    : integer := 32;
			outChannelWidth : integer := 3;
			outErrorWidth   : integer := 2;
			outUseEmptyPort : integer := 0;
			outUseValid     : integer := 1;
			outUseReady     : integer := 1;
			outReadyLatency : integer := 0
		);
		port (
			in_clk_0_clk   : in  std_logic                     := 'X';             -- clk
			in_rst_0_reset : in  std_logic                     := 'X';             -- reset
			in_0_data      : in  std_logic_vector(33 downto 0) := (others => 'X'); -- data
			in_0_valid     : in  std_logic                     := 'X';             -- valid
			in_0_ready     : out std_logic;                                        -- ready
			out_0_data     : out std_logic_vector(33 downto 0);                    -- data
			out_0_valid    : out std_logic;                                        -- valid
			out_0_ready    : in  std_logic                     := 'X';             -- ready
			out_0_error    : out std_logic_vector(0 downto 0)                      -- error
		);
	end component lab62soc_mm_interconnect_0_avalon_st_adapter;

	component lab62soc_mm_interconnect_0_avalon_st_adapter_005 is
		generic (
			inBitsPerSymbol : integer := 8;
			inUsePackets    : integer := 0;
			inDataWidth     : integer := 8;
			inChannelWidth  : integer := 3;
			inErrorWidth    : integer := 2;
			inUseEmptyPort  : integer := 0;
			inUseValid      : integer := 1;
			inUseReady      : integer := 1;
			inReadyLatency  : integer := 0;
			outDataWidth    : integer := 32;
			outChannelWidth : integer := 3;
			outErrorWidth   : integer := 2;
			outUseEmptyPort : integer := 0;
			outUseValid     : integer := 1;
			outUseReady     : integer := 1;
			outReadyLatency : integer := 0
		);
		port (
			in_clk_0_clk   : in  std_logic                     := 'X';             -- clk
			in_rst_0_reset : in  std_logic                     := 'X';             -- reset
			in_0_data      : in  std_logic_vector(17 downto 0) := (others => 'X'); -- data
			in_0_valid     : in  std_logic                     := 'X';             -- valid
			in_0_ready     : out std_logic;                                        -- ready
			out_0_data     : out std_logic_vector(17 downto 0);                    -- data
			out_0_valid    : out std_logic;                                        -- valid
			out_0_ready    : in  std_logic                     := 'X';             -- ready
			out_0_error    : out std_logic_vector(0 downto 0)                      -- error
		);
	end component lab62soc_mm_interconnect_0_avalon_st_adapter_005;

	component lab62soc_mm_interconnect_0_sdram_s1_rsp_width_adapter is
		generic (
			IN_PKT_ADDR_H                 : integer := 60;
			IN_PKT_ADDR_L                 : integer := 36;
			IN_PKT_DATA_H                 : integer := 31;
			IN_PKT_DATA_L                 : integer := 0;
			IN_PKT_BYTEEN_H               : integer := 35;
			IN_PKT_BYTEEN_L               : integer := 32;
			IN_PKT_BYTE_CNT_H             : integer := 63;
			IN_PKT_BYTE_CNT_L             : integer := 61;
			IN_PKT_TRANS_COMPRESSED_READ  : integer := 65;
			IN_PKT_TRANS_WRITE            : integer := 64;
			IN_PKT_BURSTWRAP_H            : integer := 67;
			IN_PKT_BURSTWRAP_L            : integer := 66;
			IN_PKT_BURST_SIZE_H           : integer := 70;
			IN_PKT_BURST_SIZE_L           : integer := 68;
			IN_PKT_RESPONSE_STATUS_H      : integer := 72;
			IN_PKT_RESPONSE_STATUS_L      : integer := 71;
			IN_PKT_TRANS_EXCLUSIVE        : integer := 73;
			IN_PKT_BURST_TYPE_H           : integer := 75;
			IN_PKT_BURST_TYPE_L           : integer := 74;
			IN_PKT_ORI_BURST_SIZE_L       : integer := 110;
			IN_PKT_ORI_BURST_SIZE_H       : integer := 113;
			IN_ST_DATA_W                  : integer := 76;
			OUT_PKT_ADDR_H                : integer := 60;
			OUT_PKT_ADDR_L                : integer := 36;
			OUT_PKT_DATA_H                : integer := 31;
			OUT_PKT_DATA_L                : integer := 0;
			OUT_PKT_BYTEEN_H              : integer := 35;
			OUT_PKT_BYTEEN_L              : integer := 32;
			OUT_PKT_BYTE_CNT_H            : integer := 63;
			OUT_PKT_BYTE_CNT_L            : integer := 61;
			OUT_PKT_TRANS_COMPRESSED_READ : integer := 65;
			OUT_PKT_BURST_SIZE_H          : integer := 68;
			OUT_PKT_BURST_SIZE_L          : integer := 66;
			OUT_PKT_RESPONSE_STATUS_H     : integer := 70;
			OUT_PKT_RESPONSE_STATUS_L     : integer := 69;
			OUT_PKT_TRANS_EXCLUSIVE       : integer := 71;
			OUT_PKT_BURST_TYPE_H          : integer := 73;
			OUT_PKT_BURST_TYPE_L          : integer := 72;
			OUT_PKT_ORI_BURST_SIZE_L      : integer := 110;
			OUT_PKT_ORI_BURST_SIZE_H      : integer := 113;
			OUT_ST_DATA_W                 : integer := 74;
			ST_CHANNEL_W                  : integer := 32;
			OPTIMIZE_FOR_RSP              : integer := 0;
			RESPONSE_PATH                 : integer := 0;
			CONSTANT_BURST_SIZE           : integer := 1;
			PACKING                       : integer := 1;
			ENABLE_ADDRESS_ALIGNMENT      : integer := 1
		);
		port (
			clk                  : in  std_logic                      := 'X';             --       clk.clk
			reset                : in  std_logic                      := 'X';             -- clk_reset.reset
			in_valid             : in  std_logic                      := 'X';             --      sink.valid
			in_channel           : in  std_logic_vector(14 downto 0)  := (others => 'X'); --          .channel
			in_startofpacket     : in  std_logic                      := 'X';             --          .startofpacket
			in_endofpacket       : in  std_logic                      := 'X';             --          .endofpacket
			in_ready             : out std_logic;                                         --          .ready
			in_data              : in  std_logic_vector(87 downto 0)  := (others => 'X'); --          .data
			out_endofpacket      : out std_logic;                                         --       src.endofpacket
			out_data             : out std_logic_vector(105 downto 0);                    --          .data
			out_channel          : out std_logic_vector(14 downto 0);                     --          .channel
			out_valid            : out std_logic;                                         --          .valid
			out_ready            : in  std_logic                      := 'X';             --          .ready
			out_startofpacket    : out std_logic;                                         --          .startofpacket
			in_command_size_data : in  std_logic_vector(2 downto 0)   := (others => 'X')
		);
	end component lab62soc_mm_interconnect_0_sdram_s1_rsp_width_adapter;

	component lab62soc_mm_interconnect_0_sdram_s1_cmd_width_adapter is
		generic (
			IN_PKT_ADDR_H                 : integer := 60;
			IN_PKT_ADDR_L                 : integer := 36;
			IN_PKT_DATA_H                 : integer := 31;
			IN_PKT_DATA_L                 : integer := 0;
			IN_PKT_BYTEEN_H               : integer := 35;
			IN_PKT_BYTEEN_L               : integer := 32;
			IN_PKT_BYTE_CNT_H             : integer := 63;
			IN_PKT_BYTE_CNT_L             : integer := 61;
			IN_PKT_TRANS_COMPRESSED_READ  : integer := 65;
			IN_PKT_TRANS_WRITE            : integer := 64;
			IN_PKT_BURSTWRAP_H            : integer := 67;
			IN_PKT_BURSTWRAP_L            : integer := 66;
			IN_PKT_BURST_SIZE_H           : integer := 70;
			IN_PKT_BURST_SIZE_L           : integer := 68;
			IN_PKT_RESPONSE_STATUS_H      : integer := 72;
			IN_PKT_RESPONSE_STATUS_L      : integer := 71;
			IN_PKT_TRANS_EXCLUSIVE        : integer := 73;
			IN_PKT_BURST_TYPE_H           : integer := 75;
			IN_PKT_BURST_TYPE_L           : integer := 74;
			IN_PKT_ORI_BURST_SIZE_L       : integer := 110;
			IN_PKT_ORI_BURST_SIZE_H       : integer := 113;
			IN_ST_DATA_W                  : integer := 76;
			OUT_PKT_ADDR_H                : integer := 60;
			OUT_PKT_ADDR_L                : integer := 36;
			OUT_PKT_DATA_H                : integer := 31;
			OUT_PKT_DATA_L                : integer := 0;
			OUT_PKT_BYTEEN_H              : integer := 35;
			OUT_PKT_BYTEEN_L              : integer := 32;
			OUT_PKT_BYTE_CNT_H            : integer := 63;
			OUT_PKT_BYTE_CNT_L            : integer := 61;
			OUT_PKT_TRANS_COMPRESSED_READ : integer := 65;
			OUT_PKT_BURST_SIZE_H          : integer := 68;
			OUT_PKT_BURST_SIZE_L          : integer := 66;
			OUT_PKT_RESPONSE_STATUS_H     : integer := 70;
			OUT_PKT_RESPONSE_STATUS_L     : integer := 69;
			OUT_PKT_TRANS_EXCLUSIVE       : integer := 71;
			OUT_PKT_BURST_TYPE_H          : integer := 73;
			OUT_PKT_BURST_TYPE_L          : integer := 72;
			OUT_PKT_ORI_BURST_SIZE_L      : integer := 110;
			OUT_PKT_ORI_BURST_SIZE_H      : integer := 113;
			OUT_ST_DATA_W                 : integer := 74;
			ST_CHANNEL_W                  : integer := 32;
			OPTIMIZE_FOR_RSP              : integer := 0;
			RESPONSE_PATH                 : integer := 0;
			CONSTANT_BURST_SIZE           : integer := 1;
			PACKING                       : integer := 1;
			ENABLE_ADDRESS_ALIGNMENT      : integer := 1
		);
		port (
			clk                  : in  std_logic                      := 'X';             --       clk.clk
			reset                : in  std_logic                      := 'X';             -- clk_reset.reset
			in_valid             : in  std_logic                      := 'X';             --      sink.valid
			in_channel           : in  std_logic_vector(14 downto 0)  := (others => 'X'); --          .channel
			in_startofpacket     : in  std_logic                      := 'X';             --          .startofpacket
			in_endofpacket       : in  std_logic                      := 'X';             --          .endofpacket
			in_ready             : out std_logic;                                         --          .ready
			in_data              : in  std_logic_vector(105 downto 0) := (others => 'X'); --          .data
			out_endofpacket      : out std_logic;                                         --       src.endofpacket
			out_data             : out std_logic_vector(87 downto 0);                     --          .data
			out_channel          : out std_logic_vector(14 downto 0);                     --          .channel
			out_valid            : out std_logic;                                         --          .valid
			out_ready            : in  std_logic                      := 'X';             --          .ready
			out_startofpacket    : out std_logic;                                         --          .startofpacket
			in_command_size_data : in  std_logic_vector(2 downto 0)   := (others => 'X')
		);
	end component lab62soc_mm_interconnect_0_sdram_s1_cmd_width_adapter;

	component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(0 downto 0);                     --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_read                : out std_logic;                                        --                         .read
			av_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(31 downto 0);                    --                         .writedata
			av_waitrequest         : in  std_logic                     := 'X';             --                         .waitrequest
			av_chipselect          : out std_logic;                                        --                         .chipselect
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_byteenable          : out std_logic_vector(0 downto 0);
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_writebyteenable     : out std_logic_vector(0 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_translator;

	component lab62soc_mm_interconnect_0_sysid_qsys_0_control_slave_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(0 downto 0);                     --      avalon_anti_slave_0.address
			av_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .readdata
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_byteenable          : out std_logic_vector(3 downto 0);
			av_chipselect          : out std_logic;
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_read                : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_waitrequest         : in  std_logic                     := 'X';
			av_write               : out std_logic;
			av_writebyteenable     : out std_logic_vector(3 downto 0);
			av_writedata           : out std_logic_vector(31 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_sysid_qsys_0_control_slave_translator;

	component lab62soc_mm_interconnect_0_nios2_gen2_0_debug_mem_slave_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(8 downto 0);                     --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_read                : out std_logic;                                        --                         .read
			av_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(31 downto 0);                    --                         .writedata
			av_byteenable          : out std_logic_vector(3 downto 0);                     --                         .byteenable
			av_waitrequest         : in  std_logic                     := 'X';             --                         .waitrequest
			av_debugaccess         : out std_logic;                                        --                         .debugaccess
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_chipselect          : out std_logic;
			av_clken               : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_writebyteenable     : out std_logic_vector(3 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_nios2_gen2_0_debug_mem_slave_translator;

	component lab62soc_mm_interconnect_0_sdram_pll_pll_slave_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(1 downto 0);                     --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_read                : out std_logic;                                        --                         .read
			av_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(31 downto 0);                    --                         .writedata
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_byteenable          : out std_logic_vector(3 downto 0);
			av_chipselect          : out std_logic;
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_waitrequest         : in  std_logic                     := 'X';
			av_writebyteenable     : out std_logic_vector(3 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_sdram_pll_pll_slave_translator;

	component lab62soc_mm_interconnect_0_onchip_memory2_0_s1_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(1 downto 0);                     --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(31 downto 0);                    --                         .writedata
			av_byteenable          : out std_logic_vector(3 downto 0);                     --                         .byteenable
			av_chipselect          : out std_logic;                                        --                         .chipselect
			av_clken               : out std_logic;                                        --                         .clken
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_read                : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_waitrequest         : in  std_logic                     := 'X';
			av_writebyteenable     : out std_logic_vector(3 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_onchip_memory2_0_s1_translator;

	component lab62soc_mm_interconnect_0_sdram_s1_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(1 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(1 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(15 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(15 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(24 downto 0);                    --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_read                : out std_logic;                                        --                         .read
			av_readdata            : in  std_logic_vector(15 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(15 downto 0);                    --                         .writedata
			av_byteenable          : out std_logic_vector(1 downto 0);                     --                         .byteenable
			av_readdatavalid       : in  std_logic                     := 'X';             --                         .readdatavalid
			av_waitrequest         : in  std_logic                     := 'X';             --                         .waitrequest
			av_chipselect          : out std_logic;                                        --                         .chipselect
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_writebyteenable     : out std_logic_vector(1 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_sdram_s1_translator;

	component lab62soc_mm_interconnect_0_keycode_s1_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(1 downto 0);                     --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(31 downto 0);                    --                         .writedata
			av_chipselect          : out std_logic;                                        --                         .chipselect
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_byteenable          : out std_logic_vector(0 downto 0);
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_read                : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_waitrequest         : in  std_logic                     := 'X';
			av_writebyteenable     : out std_logic_vector(0 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_keycode_s1_translator;

	component lab62soc_mm_interconnect_0_usb_irq_s1_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(1 downto 0);                     --      avalon_anti_slave_0.address
			av_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .readdata
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_byteenable          : out std_logic_vector(0 downto 0);
			av_chipselect          : out std_logic;
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_read                : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_waitrequest         : in  std_logic                     := 'X';
			av_write               : out std_logic;
			av_writebyteenable     : out std_logic_vector(0 downto 0);
			av_writedata           : out std_logic_vector(31 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_usb_irq_s1_translator;

	component lab62soc_mm_interconnect_0_timer_0_s1_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(3 downto 0);                     --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_readdata            : in  std_logic_vector(15 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(15 downto 0);                    --                         .writedata
			av_chipselect          : out std_logic;                                        --                         .chipselect
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_byteenable          : out std_logic_vector(0 downto 0);
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_read                : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_waitrequest         : in  std_logic                     := 'X';
			av_writebyteenable     : out std_logic_vector(0 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_timer_0_s1_translator;

	component lab62soc_mm_interconnect_0_spi_0_spi_control_port_translator is
		generic (
			AV_ADDRESS_W                   : integer := 30;
			AV_DATA_W                      : integer := 32;
			UAV_DATA_W                     : integer := 32;
			AV_BURSTCOUNT_W                : integer := 4;
			AV_BYTEENABLE_W                : integer := 4;
			UAV_BYTEENABLE_W               : integer := 4;
			UAV_ADDRESS_W                  : integer := 32;
			UAV_BURSTCOUNT_W               : integer := 4;
			AV_READLATENCY                 : integer := 0;
			USE_READDATAVALID              : integer := 1;
			USE_WAITREQUEST                : integer := 1;
			USE_UAV_CLKEN                  : integer := 0;
			USE_READRESPONSE               : integer := 0;
			USE_WRITERESPONSE              : integer := 0;
			AV_SYMBOLS_PER_WORD            : integer := 4;
			AV_ADDRESS_SYMBOLS             : integer := 0;
			AV_BURSTCOUNT_SYMBOLS          : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR     : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR    : integer := 0;
			AV_REQUIRE_UNALIGNED_ADDRESSES : integer := 0;
			CHIPSELECT_THROUGH_READLATENCY : integer := 0;
			AV_READ_WAIT_CYCLES            : integer := 0;
			AV_WRITE_WAIT_CYCLES           : integer := 0;
			AV_SETUP_WAIT_CYCLES           : integer := 0;
			AV_DATA_HOLD_CYCLES            : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                      clk.clk
			reset                  : in  std_logic                     := 'X';             --                    reset.reset
			uav_address            : in  std_logic_vector(27 downto 0) := (others => 'X'); -- avalon_universal_slave_0.address
			uav_burstcount         : in  std_logic_vector(2 downto 0)  := (others => 'X'); --                         .burstcount
			uav_read               : in  std_logic                     := 'X';             --                         .read
			uav_write              : in  std_logic                     := 'X';             --                         .write
			uav_waitrequest        : out std_logic;                                        --                         .waitrequest
			uav_readdatavalid      : out std_logic;                                        --                         .readdatavalid
			uav_byteenable         : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                         .byteenable
			uav_readdata           : out std_logic_vector(31 downto 0);                    --                         .readdata
			uav_writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); --                         .writedata
			uav_lock               : in  std_logic                     := 'X';             --                         .lock
			uav_debugaccess        : in  std_logic                     := 'X';             --                         .debugaccess
			av_address             : out std_logic_vector(2 downto 0);                     --      avalon_anti_slave_0.address
			av_write               : out std_logic;                                        --                         .write
			av_read                : out std_logic;                                        --                         .read
			av_readdata            : in  std_logic_vector(15 downto 0) := (others => 'X'); --                         .readdata
			av_writedata           : out std_logic_vector(15 downto 0);                    --                         .writedata
			av_chipselect          : out std_logic;                                        --                         .chipselect
			av_beginbursttransfer  : out std_logic;
			av_begintransfer       : out std_logic;
			av_burstcount          : out std_logic_vector(0 downto 0);
			av_byteenable          : out std_logic_vector(0 downto 0);
			av_clken               : out std_logic;
			av_debugaccess         : out std_logic;
			av_lock                : out std_logic;
			av_outputenable        : out std_logic;
			av_readdatavalid       : in  std_logic                     := 'X';
			av_response            : in  std_logic_vector(1 downto 0)  := (others => 'X');
			av_waitrequest         : in  std_logic                     := 'X';
			av_writebyteenable     : out std_logic_vector(0 downto 0);
			av_writeresponsevalid  : in  std_logic                     := 'X';
			uav_clken              : in  std_logic                     := 'X';
			uav_response           : out std_logic_vector(1 downto 0);
			uav_writeresponsevalid : out std_logic
		);
	end component lab62soc_mm_interconnect_0_spi_0_spi_control_port_translator;

	component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo is
		generic (
			SYMBOLS_PER_BEAT    : integer := 1;
			BITS_PER_SYMBOL     : integer := 8;
			FIFO_DEPTH          : integer := 16;
			CHANNEL_WIDTH       : integer := 0;
			ERROR_WIDTH         : integer := 0;
			USE_PACKETS         : integer := 0;
			USE_FILL_LEVEL      : integer := 0;
			EMPTY_LATENCY       : integer := 3;
			USE_MEMORY_BLOCKS   : integer := 1;
			USE_STORE_FORWARD   : integer := 0;
			USE_ALMOST_FULL_IF  : integer := 0;
			USE_ALMOST_EMPTY_IF : integer := 0
		);
		port (
			clk               : in  std_logic                      := 'X';             --       clk.clk
			reset             : in  std_logic                      := 'X';             -- clk_reset.reset
			in_data           : in  std_logic_vector(106 downto 0) := (others => 'X'); --        in.data
			in_valid          : in  std_logic                      := 'X';             --          .valid
			in_ready          : out std_logic;                                         --          .ready
			in_startofpacket  : in  std_logic                      := 'X';             --          .startofpacket
			in_endofpacket    : in  std_logic                      := 'X';             --          .endofpacket
			out_data          : out std_logic_vector(106 downto 0);                    --       out.data
			out_valid         : out std_logic;                                         --          .valid
			out_ready         : in  std_logic                      := 'X';             --          .ready
			out_startofpacket : out std_logic;                                         --          .startofpacket
			out_endofpacket   : out std_logic;                                         --          .endofpacket
			almost_empty_data : out std_logic;
			almost_full_data  : out std_logic;
			csr_address       : in  std_logic_vector(1 downto 0)   := (others => 'X');
			csr_read          : in  std_logic                      := 'X';
			csr_readdata      : out std_logic_vector(31 downto 0);
			csr_write         : in  std_logic                      := 'X';
			csr_writedata     : in  std_logic_vector(31 downto 0)  := (others => 'X');
			in_channel        : in  std_logic_vector(0 downto 0)   := (others => 'X');
			in_empty          : in  std_logic_vector(0 downto 0)   := (others => 'X');
			in_error          : in  std_logic_vector(0 downto 0)   := (others => 'X');
			out_channel       : out std_logic_vector(0 downto 0);
			out_empty         : out std_logic_vector(0 downto 0);
			out_error         : out std_logic_vector(0 downto 0)
		);
	end component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo;

	component lab62soc_mm_interconnect_0_sdram_s1_agent_rsp_fifo is
		generic (
			SYMBOLS_PER_BEAT    : integer := 1;
			BITS_PER_SYMBOL     : integer := 8;
			FIFO_DEPTH          : integer := 16;
			CHANNEL_WIDTH       : integer := 0;
			ERROR_WIDTH         : integer := 0;
			USE_PACKETS         : integer := 0;
			USE_FILL_LEVEL      : integer := 0;
			EMPTY_LATENCY       : integer := 3;
			USE_MEMORY_BLOCKS   : integer := 1;
			USE_STORE_FORWARD   : integer := 0;
			USE_ALMOST_FULL_IF  : integer := 0;
			USE_ALMOST_EMPTY_IF : integer := 0
		);
		port (
			clk               : in  std_logic                     := 'X';             --       clk.clk
			reset             : in  std_logic                     := 'X';             -- clk_reset.reset
			in_data           : in  std_logic_vector(88 downto 0) := (others => 'X'); --        in.data
			in_valid          : in  std_logic                     := 'X';             --          .valid
			in_ready          : out std_logic;                                        --          .ready
			in_startofpacket  : in  std_logic                     := 'X';             --          .startofpacket
			in_endofpacket    : in  std_logic                     := 'X';             --          .endofpacket
			out_data          : out std_logic_vector(88 downto 0);                    --       out.data
			out_valid         : out std_logic;                                        --          .valid
			out_ready         : in  std_logic                     := 'X';             --          .ready
			out_startofpacket : out std_logic;                                        --          .startofpacket
			out_endofpacket   : out std_logic;                                        --          .endofpacket
			almost_empty_data : out std_logic;
			almost_full_data  : out std_logic;
			csr_address       : in  std_logic_vector(1 downto 0)  := (others => 'X');
			csr_read          : in  std_logic                     := 'X';
			csr_readdata      : out std_logic_vector(31 downto 0);
			csr_write         : in  std_logic                     := 'X';
			csr_writedata     : in  std_logic_vector(31 downto 0) := (others => 'X');
			in_channel        : in  std_logic_vector(0 downto 0)  := (others => 'X');
			in_empty          : in  std_logic_vector(0 downto 0)  := (others => 'X');
			in_error          : in  std_logic_vector(0 downto 0)  := (others => 'X');
			out_channel       : out std_logic_vector(0 downto 0);
			out_empty         : out std_logic_vector(0 downto 0);
			out_error         : out std_logic_vector(0 downto 0)
		);
	end component lab62soc_mm_interconnect_0_sdram_s1_agent_rsp_fifo;

	component lab62soc_mm_interconnect_0_sdram_s1_agent_rdata_fifo is
		generic (
			SYMBOLS_PER_BEAT    : integer := 1;
			BITS_PER_SYMBOL     : integer := 8;
			FIFO_DEPTH          : integer := 16;
			CHANNEL_WIDTH       : integer := 0;
			ERROR_WIDTH         : integer := 0;
			USE_PACKETS         : integer := 0;
			USE_FILL_LEVEL      : integer := 0;
			EMPTY_LATENCY       : integer := 3;
			USE_MEMORY_BLOCKS   : integer := 1;
			USE_STORE_FORWARD   : integer := 0;
			USE_ALMOST_FULL_IF  : integer := 0;
			USE_ALMOST_EMPTY_IF : integer := 0
		);
		port (
			clk               : in  std_logic                     := 'X';             --       clk.clk
			reset             : in  std_logic                     := 'X';             -- clk_reset.reset
			in_data           : in  std_logic_vector(17 downto 0) := (others => 'X'); --        in.data
			in_valid          : in  std_logic                     := 'X';             --          .valid
			in_ready          : out std_logic;                                        --          .ready
			out_data          : out std_logic_vector(17 downto 0);                    --       out.data
			out_valid         : out std_logic;                                        --          .valid
			out_ready         : in  std_logic                     := 'X';             --          .ready
			almost_empty_data : out std_logic;
			almost_full_data  : out std_logic;
			csr_address       : in  std_logic_vector(1 downto 0)  := (others => 'X');
			csr_read          : in  std_logic                     := 'X';
			csr_readdata      : out std_logic_vector(31 downto 0);
			csr_write         : in  std_logic                     := 'X';
			csr_writedata     : in  std_logic_vector(31 downto 0) := (others => 'X');
			in_channel        : in  std_logic_vector(0 downto 0)  := (others => 'X');
			in_empty          : in  std_logic_vector(0 downto 0)  := (others => 'X');
			in_endofpacket    : in  std_logic                     := 'X';
			in_error          : in  std_logic_vector(0 downto 0)  := (others => 'X');
			in_startofpacket  : in  std_logic                     := 'X';
			out_channel       : out std_logic_vector(0 downto 0);
			out_empty         : out std_logic_vector(0 downto 0);
			out_endofpacket   : out std_logic;
			out_error         : out std_logic_vector(0 downto 0);
			out_startofpacket : out std_logic
		);
	end component lab62soc_mm_interconnect_0_sdram_s1_agent_rdata_fifo;

	component lab62soc_mm_interconnect_0_nios2_gen2_0_data_master_translator is
		generic (
			AV_ADDRESS_W                : integer := 32;
			AV_DATA_W                   : integer := 32;
			AV_BURSTCOUNT_W             : integer := 4;
			AV_BYTEENABLE_W             : integer := 4;
			UAV_ADDRESS_W               : integer := 38;
			UAV_BURSTCOUNT_W            : integer := 10;
			USE_READ                    : integer := 1;
			USE_WRITE                   : integer := 1;
			USE_BEGINBURSTTRANSFER      : integer := 0;
			USE_BEGINTRANSFER           : integer := 0;
			USE_CHIPSELECT              : integer := 0;
			USE_BURSTCOUNT              : integer := 1;
			USE_READDATAVALID           : integer := 1;
			USE_WAITREQUEST             : integer := 1;
			USE_READRESPONSE            : integer := 0;
			USE_WRITERESPONSE           : integer := 0;
			AV_SYMBOLS_PER_WORD         : integer := 4;
			AV_ADDRESS_SYMBOLS          : integer := 0;
			AV_BURSTCOUNT_SYMBOLS       : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR  : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR : integer := 0;
			AV_LINEWRAPBURSTS           : integer := 0;
			AV_REGISTERINCOMINGSIGNALS  : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                       clk.clk
			reset                  : in  std_logic                     := 'X';             --                     reset.reset
			uav_address            : out std_logic_vector(27 downto 0);                    -- avalon_universal_master_0.address
			uav_burstcount         : out std_logic_vector(2 downto 0);                     --                          .burstcount
			uav_read               : out std_logic;                                        --                          .read
			uav_write              : out std_logic;                                        --                          .write
			uav_waitrequest        : in  std_logic                     := 'X';             --                          .waitrequest
			uav_readdatavalid      : in  std_logic                     := 'X';             --                          .readdatavalid
			uav_byteenable         : out std_logic_vector(3 downto 0);                     --                          .byteenable
			uav_readdata           : in  std_logic_vector(31 downto 0) := (others => 'X'); --                          .readdata
			uav_writedata          : out std_logic_vector(31 downto 0);                    --                          .writedata
			uav_lock               : out std_logic;                                        --                          .lock
			uav_debugaccess        : out std_logic;                                        --                          .debugaccess
			av_address             : in  std_logic_vector(27 downto 0) := (others => 'X'); --      avalon_anti_master_0.address
			av_waitrequest         : out std_logic;                                        --                          .waitrequest
			av_byteenable          : in  std_logic_vector(3 downto 0)  := (others => 'X'); --                          .byteenable
			av_read                : in  std_logic                     := 'X';             --                          .read
			av_readdata            : out std_logic_vector(31 downto 0);                    --                          .readdata
			av_write               : in  std_logic                     := 'X';             --                          .write
			av_writedata           : in  std_logic_vector(31 downto 0) := (others => 'X'); --                          .writedata
			av_debugaccess         : in  std_logic                     := 'X';             --                          .debugaccess
			av_beginbursttransfer  : in  std_logic                     := 'X';
			av_begintransfer       : in  std_logic                     := 'X';
			av_burstcount          : in  std_logic_vector(0 downto 0)  := (others => 'X');
			av_chipselect          : in  std_logic                     := 'X';
			av_clken               : in  std_logic                     := 'X';
			av_lock                : in  std_logic                     := 'X';
			av_readdatavalid       : out std_logic;
			av_response            : out std_logic_vector(1 downto 0);
			av_writeresponsevalid  : out std_logic;
			uav_clken              : out std_logic;
			uav_response           : in  std_logic_vector(1 downto 0)  := (others => 'X');
			uav_writeresponsevalid : in  std_logic                     := 'X'
		);
	end component lab62soc_mm_interconnect_0_nios2_gen2_0_data_master_translator;

	component lab62soc_mm_interconnect_0_nios2_gen2_0_instruction_master_translator is
		generic (
			AV_ADDRESS_W                : integer := 32;
			AV_DATA_W                   : integer := 32;
			AV_BURSTCOUNT_W             : integer := 4;
			AV_BYTEENABLE_W             : integer := 4;
			UAV_ADDRESS_W               : integer := 38;
			UAV_BURSTCOUNT_W            : integer := 10;
			USE_READ                    : integer := 1;
			USE_WRITE                   : integer := 1;
			USE_BEGINBURSTTRANSFER      : integer := 0;
			USE_BEGINTRANSFER           : integer := 0;
			USE_CHIPSELECT              : integer := 0;
			USE_BURSTCOUNT              : integer := 1;
			USE_READDATAVALID           : integer := 1;
			USE_WAITREQUEST             : integer := 1;
			USE_READRESPONSE            : integer := 0;
			USE_WRITERESPONSE           : integer := 0;
			AV_SYMBOLS_PER_WORD         : integer := 4;
			AV_ADDRESS_SYMBOLS          : integer := 0;
			AV_BURSTCOUNT_SYMBOLS       : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR  : integer := 0;
			UAV_CONSTANT_BURST_BEHAVIOR : integer := 0;
			AV_LINEWRAPBURSTS           : integer := 0;
			AV_REGISTERINCOMINGSIGNALS  : integer := 0
		);
		port (
			clk                    : in  std_logic                     := 'X';             --                       clk.clk
			reset                  : in  std_logic                     := 'X';             --                     reset.reset
			uav_address            : out std_logic_vector(27 downto 0);                    -- avalon_universal_master_0.address
			uav_burstcount         : out std_logic_vector(2 downto 0);                     --                          .burstcount
			uav_read               : out std_logic;                                        --                          .read
			uav_write              : out std_logic;                                        --                          .write
			uav_waitrequest        : in  std_logic                     := 'X';             --                          .waitrequest
			uav_readdatavalid      : in  std_logic                     := 'X';             --                          .readdatavalid
			uav_byteenable         : out std_logic_vector(3 downto 0);                     --                          .byteenable
			uav_readdata           : in  std_logic_vector(31 downto 0) := (others => 'X'); --                          .readdata
			uav_writedata          : out std_logic_vector(31 downto 0);                    --                          .writedata
			uav_lock               : out std_logic;                                        --                          .lock
			uav_debugaccess        : out std_logic;                                        --                          .debugaccess
			av_address             : in  std_logic_vector(27 downto 0) := (others => 'X'); --      avalon_anti_master_0.address
			av_waitrequest         : out std_logic;                                        --                          .waitrequest
			av_read                : in  std_logic                     := 'X';             --                          .read
			av_readdata            : out std_logic_vector(31 downto 0);                    --                          .readdata
			av_beginbursttransfer  : in  std_logic                     := 'X';
			av_begintransfer       : in  std_logic                     := 'X';
			av_burstcount          : in  std_logic_vector(0 downto 0)  := (others => 'X');
			av_byteenable          : in  std_logic_vector(3 downto 0)  := (others => 'X');
			av_chipselect          : in  std_logic                     := 'X';
			av_clken               : in  std_logic                     := 'X';
			av_debugaccess         : in  std_logic                     := 'X';
			av_lock                : in  std_logic                     := 'X';
			av_readdatavalid       : out std_logic;
			av_response            : out std_logic_vector(1 downto 0);
			av_write               : in  std_logic                     := 'X';
			av_writedata           : in  std_logic_vector(31 downto 0) := (others => 'X');
			av_writeresponsevalid  : out std_logic;
			uav_clken              : out std_logic;
			uav_response           : in  std_logic_vector(1 downto 0)  := (others => 'X');
			uav_writeresponsevalid : in  std_logic                     := 'X'
		);
	end component lab62soc_mm_interconnect_0_nios2_gen2_0_instruction_master_translator;

	component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent is
		generic (
			PKT_ORI_BURST_SIZE_H      : integer := 90;
			PKT_ORI_BURST_SIZE_L      : integer := 88;
			PKT_RESPONSE_STATUS_H     : integer := 87;
			PKT_RESPONSE_STATUS_L     : integer := 86;
			PKT_BURST_SIZE_H          : integer := 85;
			PKT_BURST_SIZE_L          : integer := 83;
			PKT_TRANS_LOCK            : integer := 82;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_PROTECTION_H          : integer := 80;
			PKT_PROTECTION_L          : integer := 80;
			PKT_BURSTWRAP_H           : integer := 79;
			PKT_BURSTWRAP_L           : integer := 77;
			PKT_BYTE_CNT_H            : integer := 76;
			PKT_BYTE_CNT_L            : integer := 74;
			PKT_ADDR_H                : integer := 73;
			PKT_ADDR_L                : integer := 42;
			PKT_TRANS_COMPRESSED_READ : integer := 41;
			PKT_TRANS_POSTED          : integer := 40;
			PKT_TRANS_WRITE           : integer := 39;
			PKT_TRANS_READ            : integer := 38;
			PKT_DATA_H                : integer := 37;
			PKT_DATA_L                : integer := 6;
			PKT_BYTEEN_H              : integer := 5;
			PKT_BYTEEN_L              : integer := 2;
			PKT_SRC_ID_H              : integer := 1;
			PKT_SRC_ID_L              : integer := 1;
			PKT_DEST_ID_H             : integer := 0;
			PKT_DEST_ID_L             : integer := 0;
			PKT_SYMBOL_W              : integer := 8;
			ST_CHANNEL_W              : integer := 8;
			ST_DATA_W                 : integer := 96;
			AVS_BURSTCOUNT_W          : integer := 4;
			SUPPRESS_0_BYTEEN_CMD     : integer := 1;
			PREVENT_FIFO_OVERFLOW     : integer := 0;
			USE_READRESPONSE          : integer := 0;
			USE_WRITERESPONSE         : integer := 0;
			ECC_ENABLE                : integer := 0
		);
		port (
			clk                     : in  std_logic                      := 'X';             --             clk.clk
			reset                   : in  std_logic                      := 'X';             --       clk_reset.reset
			m0_address              : out std_logic_vector(27 downto 0);                     --              m0.address
			m0_burstcount           : out std_logic_vector(2 downto 0);                      --                .burstcount
			m0_byteenable           : out std_logic_vector(3 downto 0);                      --                .byteenable
			m0_debugaccess          : out std_logic;                                         --                .debugaccess
			m0_lock                 : out std_logic;                                         --                .lock
			m0_readdata             : in  std_logic_vector(31 downto 0)  := (others => 'X'); --                .readdata
			m0_readdatavalid        : in  std_logic                      := 'X';             --                .readdatavalid
			m0_read                 : out std_logic;                                         --                .read
			m0_waitrequest          : in  std_logic                      := 'X';             --                .waitrequest
			m0_writedata            : out std_logic_vector(31 downto 0);                     --                .writedata
			m0_write                : out std_logic;                                         --                .write
			rp_endofpacket          : out std_logic;                                         --              rp.endofpacket
			rp_ready                : in  std_logic                      := 'X';             --                .ready
			rp_valid                : out std_logic;                                         --                .valid
			rp_data                 : out std_logic_vector(105 downto 0);                    --                .data
			rp_startofpacket        : out std_logic;                                         --                .startofpacket
			cp_ready                : out std_logic;                                         --              cp.ready
			cp_valid                : in  std_logic                      := 'X';             --                .valid
			cp_data                 : in  std_logic_vector(105 downto 0) := (others => 'X'); --                .data
			cp_startofpacket        : in  std_logic                      := 'X';             --                .startofpacket
			cp_endofpacket          : in  std_logic                      := 'X';             --                .endofpacket
			cp_channel              : in  std_logic_vector(14 downto 0)  := (others => 'X'); --                .channel
			rf_sink_ready           : out std_logic;                                         --         rf_sink.ready
			rf_sink_valid           : in  std_logic                      := 'X';             --                .valid
			rf_sink_startofpacket   : in  std_logic                      := 'X';             --                .startofpacket
			rf_sink_endofpacket     : in  std_logic                      := 'X';             --                .endofpacket
			rf_sink_data            : in  std_logic_vector(106 downto 0) := (others => 'X'); --                .data
			rf_source_ready         : in  std_logic                      := 'X';             --       rf_source.ready
			rf_source_valid         : out std_logic;                                         --                .valid
			rf_source_startofpacket : out std_logic;                                         --                .startofpacket
			rf_source_endofpacket   : out std_logic;                                         --                .endofpacket
			rf_source_data          : out std_logic_vector(106 downto 0);                    --                .data
			rdata_fifo_sink_ready   : out std_logic;                                         -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   : in  std_logic                      := 'X';             --                .valid
			rdata_fifo_sink_data    : in  std_logic_vector(33 downto 0)  := (others => 'X'); --                .data
			rdata_fifo_sink_error   : in  std_logic                      := 'X';             --                .error
			rdata_fifo_src_ready    : in  std_logic                      := 'X';             --  rdata_fifo_src.ready
			rdata_fifo_src_valid    : out std_logic;                                         --                .valid
			rdata_fifo_src_data     : out std_logic_vector(33 downto 0);                     --                .data
			m0_response             : in  std_logic_vector(1 downto 0)   := (others => 'X');
			m0_writeresponsevalid   : in  std_logic                      := 'X'
		);
	end component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent;

	component lab62soc_mm_interconnect_0_sdram_s1_agent is
		generic (
			PKT_ORI_BURST_SIZE_H      : integer := 90;
			PKT_ORI_BURST_SIZE_L      : integer := 88;
			PKT_RESPONSE_STATUS_H     : integer := 87;
			PKT_RESPONSE_STATUS_L     : integer := 86;
			PKT_BURST_SIZE_H          : integer := 85;
			PKT_BURST_SIZE_L          : integer := 83;
			PKT_TRANS_LOCK            : integer := 82;
			PKT_BEGIN_BURST           : integer := 81;
			PKT_PROTECTION_H          : integer := 80;
			PKT_PROTECTION_L          : integer := 80;
			PKT_BURSTWRAP_H           : integer := 79;
			PKT_BURSTWRAP_L           : integer := 77;
			PKT_BYTE_CNT_H            : integer := 76;
			PKT_BYTE_CNT_L            : integer := 74;
			PKT_ADDR_H                : integer := 73;
			PKT_ADDR_L                : integer := 42;
			PKT_TRANS_COMPRESSED_READ : integer := 41;
			PKT_TRANS_POSTED          : integer := 40;
			PKT_TRANS_WRITE           : integer := 39;
			PKT_TRANS_READ            : integer := 38;
			PKT_DATA_H                : integer := 37;
			PKT_DATA_L                : integer := 6;
			PKT_BYTEEN_H              : integer := 5;
			PKT_BYTEEN_L              : integer := 2;
			PKT_SRC_ID_H              : integer := 1;
			PKT_SRC_ID_L              : integer := 1;
			PKT_DEST_ID_H             : integer := 0;
			PKT_DEST_ID_L             : integer := 0;
			PKT_SYMBOL_W              : integer := 8;
			ST_CHANNEL_W              : integer := 8;
			ST_DATA_W                 : integer := 96;
			AVS_BURSTCOUNT_W          : integer := 4;
			SUPPRESS_0_BYTEEN_CMD     : integer := 1;
			PREVENT_FIFO_OVERFLOW     : integer := 0;
			USE_READRESPONSE          : integer := 0;
			USE_WRITERESPONSE         : integer := 0;
			ECC_ENABLE                : integer := 0
		);
		port (
			clk                     : in  std_logic                     := 'X';             --             clk.clk
			reset                   : in  std_logic                     := 'X';             --       clk_reset.reset
			m0_address              : out std_logic_vector(27 downto 0);                    --              m0.address
			m0_burstcount           : out std_logic_vector(1 downto 0);                     --                .burstcount
			m0_byteenable           : out std_logic_vector(1 downto 0);                     --                .byteenable
			m0_debugaccess          : out std_logic;                                        --                .debugaccess
			m0_lock                 : out std_logic;                                        --                .lock
			m0_readdata             : in  std_logic_vector(15 downto 0) := (others => 'X'); --                .readdata
			m0_readdatavalid        : in  std_logic                     := 'X';             --                .readdatavalid
			m0_read                 : out std_logic;                                        --                .read
			m0_waitrequest          : in  std_logic                     := 'X';             --                .waitrequest
			m0_writedata            : out std_logic_vector(15 downto 0);                    --                .writedata
			m0_write                : out std_logic;                                        --                .write
			rp_endofpacket          : out std_logic;                                        --              rp.endofpacket
			rp_ready                : in  std_logic                     := 'X';             --                .ready
			rp_valid                : out std_logic;                                        --                .valid
			rp_data                 : out std_logic_vector(87 downto 0);                    --                .data
			rp_startofpacket        : out std_logic;                                        --                .startofpacket
			cp_ready                : out std_logic;                                        --              cp.ready
			cp_valid                : in  std_logic                     := 'X';             --                .valid
			cp_data                 : in  std_logic_vector(87 downto 0) := (others => 'X'); --                .data
			cp_startofpacket        : in  std_logic                     := 'X';             --                .startofpacket
			cp_endofpacket          : in  std_logic                     := 'X';             --                .endofpacket
			cp_channel              : in  std_logic_vector(14 downto 0) := (others => 'X'); --                .channel
			rf_sink_ready           : out std_logic;                                        --         rf_sink.ready
			rf_sink_valid           : in  std_logic                     := 'X';             --                .valid
			rf_sink_startofpacket   : in  std_logic                     := 'X';             --                .startofpacket
			rf_sink_endofpacket     : in  std_logic                     := 'X';             --                .endofpacket
			rf_sink_data            : in  std_logic_vector(88 downto 0) := (others => 'X'); --                .data
			rf_source_ready         : in  std_logic                     := 'X';             --       rf_source.ready
			rf_source_valid         : out std_logic;                                        --                .valid
			rf_source_startofpacket : out std_logic;                                        --                .startofpacket
			rf_source_endofpacket   : out std_logic;                                        --                .endofpacket
			rf_source_data          : out std_logic_vector(88 downto 0);                    --                .data
			rdata_fifo_sink_ready   : out std_logic;                                        -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   : in  std_logic                     := 'X';             --                .valid
			rdata_fifo_sink_data    : in  std_logic_vector(17 downto 0) := (others => 'X'); --                .data
			rdata_fifo_sink_error   : in  std_logic                     := 'X';             --                .error
			rdata_fifo_src_ready    : in  std_logic                     := 'X';             --  rdata_fifo_src.ready
			rdata_fifo_src_valid    : out std_logic;                                        --                .valid
			rdata_fifo_src_data     : out std_logic_vector(17 downto 0);                    --                .data
			m0_response             : in  std_logic_vector(1 downto 0)  := (others => 'X');
			m0_writeresponsevalid   : in  std_logic                     := 'X'
		);
	end component lab62soc_mm_interconnect_0_sdram_s1_agent;

	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_waitrequest          : std_logic;                      -- nios2_gen2_0_data_master_agent:av_waitrequest -> nios2_gen2_0_data_master_translator:uav_waitrequest
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_readdata             : std_logic_vector(31 downto 0);  -- nios2_gen2_0_data_master_agent:av_readdata -> nios2_gen2_0_data_master_translator:uav_readdata
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_debugaccess          : std_logic;                      -- nios2_gen2_0_data_master_translator:uav_debugaccess -> nios2_gen2_0_data_master_agent:av_debugaccess
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_address              : std_logic_vector(27 downto 0);  -- nios2_gen2_0_data_master_translator:uav_address -> nios2_gen2_0_data_master_agent:av_address
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_read                 : std_logic;                      -- nios2_gen2_0_data_master_translator:uav_read -> nios2_gen2_0_data_master_agent:av_read
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_byteenable           : std_logic_vector(3 downto 0);   -- nios2_gen2_0_data_master_translator:uav_byteenable -> nios2_gen2_0_data_master_agent:av_byteenable
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_readdatavalid        : std_logic;                      -- nios2_gen2_0_data_master_agent:av_readdatavalid -> nios2_gen2_0_data_master_translator:uav_readdatavalid
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_lock                 : std_logic;                      -- nios2_gen2_0_data_master_translator:uav_lock -> nios2_gen2_0_data_master_agent:av_lock
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_write                : std_logic;                      -- nios2_gen2_0_data_master_translator:uav_write -> nios2_gen2_0_data_master_agent:av_write
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_writedata            : std_logic_vector(31 downto 0);  -- nios2_gen2_0_data_master_translator:uav_writedata -> nios2_gen2_0_data_master_agent:av_writedata
	signal nios2_gen2_0_data_master_translator_avalon_universal_master_0_burstcount           : std_logic_vector(2 downto 0);   -- nios2_gen2_0_data_master_translator:uav_burstcount -> nios2_gen2_0_data_master_agent:av_burstcount
	signal rsp_mux_src_valid                                                                  : std_logic;                      -- rsp_mux:src_valid -> nios2_gen2_0_data_master_agent:rp_valid
	signal rsp_mux_src_data                                                                   : std_logic_vector(105 downto 0); -- rsp_mux:src_data -> nios2_gen2_0_data_master_agent:rp_data
	signal rsp_mux_src_ready                                                                  : std_logic;                      -- nios2_gen2_0_data_master_agent:rp_ready -> rsp_mux:src_ready
	signal rsp_mux_src_channel                                                                : std_logic_vector(14 downto 0);  -- rsp_mux:src_channel -> nios2_gen2_0_data_master_agent:rp_channel
	signal rsp_mux_src_startofpacket                                                          : std_logic;                      -- rsp_mux:src_startofpacket -> nios2_gen2_0_data_master_agent:rp_startofpacket
	signal rsp_mux_src_endofpacket                                                            : std_logic;                      -- rsp_mux:src_endofpacket -> nios2_gen2_0_data_master_agent:rp_endofpacket
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_waitrequest   : std_logic;                      -- nios2_gen2_0_instruction_master_agent:av_waitrequest -> nios2_gen2_0_instruction_master_translator:uav_waitrequest
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_readdata      : std_logic_vector(31 downto 0);  -- nios2_gen2_0_instruction_master_agent:av_readdata -> nios2_gen2_0_instruction_master_translator:uav_readdata
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_debugaccess   : std_logic;                      -- nios2_gen2_0_instruction_master_translator:uav_debugaccess -> nios2_gen2_0_instruction_master_agent:av_debugaccess
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_address       : std_logic_vector(27 downto 0);  -- nios2_gen2_0_instruction_master_translator:uav_address -> nios2_gen2_0_instruction_master_agent:av_address
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_read          : std_logic;                      -- nios2_gen2_0_instruction_master_translator:uav_read -> nios2_gen2_0_instruction_master_agent:av_read
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_byteenable    : std_logic_vector(3 downto 0);   -- nios2_gen2_0_instruction_master_translator:uav_byteenable -> nios2_gen2_0_instruction_master_agent:av_byteenable
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_readdatavalid : std_logic;                      -- nios2_gen2_0_instruction_master_agent:av_readdatavalid -> nios2_gen2_0_instruction_master_translator:uav_readdatavalid
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_lock          : std_logic;                      -- nios2_gen2_0_instruction_master_translator:uav_lock -> nios2_gen2_0_instruction_master_agent:av_lock
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_write         : std_logic;                      -- nios2_gen2_0_instruction_master_translator:uav_write -> nios2_gen2_0_instruction_master_agent:av_write
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_writedata     : std_logic_vector(31 downto 0);  -- nios2_gen2_0_instruction_master_translator:uav_writedata -> nios2_gen2_0_instruction_master_agent:av_writedata
	signal nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_burstcount    : std_logic_vector(2 downto 0);   -- nios2_gen2_0_instruction_master_translator:uav_burstcount -> nios2_gen2_0_instruction_master_agent:av_burstcount
	signal rsp_mux_001_src_valid                                                              : std_logic;                      -- rsp_mux_001:src_valid -> nios2_gen2_0_instruction_master_agent:rp_valid
	signal rsp_mux_001_src_data                                                               : std_logic_vector(105 downto 0); -- rsp_mux_001:src_data -> nios2_gen2_0_instruction_master_agent:rp_data
	signal rsp_mux_001_src_ready                                                              : std_logic;                      -- nios2_gen2_0_instruction_master_agent:rp_ready -> rsp_mux_001:src_ready
	signal rsp_mux_001_src_channel                                                            : std_logic_vector(14 downto 0);  -- rsp_mux_001:src_channel -> nios2_gen2_0_instruction_master_agent:rp_channel
	signal rsp_mux_001_src_startofpacket                                                      : std_logic;                      -- rsp_mux_001:src_startofpacket -> nios2_gen2_0_instruction_master_agent:rp_startofpacket
	signal rsp_mux_001_src_endofpacket                                                        : std_logic;                      -- rsp_mux_001:src_endofpacket -> nios2_gen2_0_instruction_master_agent:rp_endofpacket
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_readdata                                    : std_logic_vector(31 downto 0);  -- jtag_uart_0_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_0_avalon_jtag_slave_agent:m0_readdata
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest                                 : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_0_avalon_jtag_slave_agent:m0_waitrequest
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess                                 : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:m0_debugaccess -> jtag_uart_0_avalon_jtag_slave_translator:uav_debugaccess
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_address                                     : std_logic_vector(27 downto 0);  -- jtag_uart_0_avalon_jtag_slave_agent:m0_address -> jtag_uart_0_avalon_jtag_slave_translator:uav_address
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable                                  : std_logic_vector(3 downto 0);   -- jtag_uart_0_avalon_jtag_slave_agent:m0_byteenable -> jtag_uart_0_avalon_jtag_slave_translator:uav_byteenable
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_read                                        : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:m0_read -> jtag_uart_0_avalon_jtag_slave_translator:uav_read
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid                               : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_0_avalon_jtag_slave_agent:m0_readdatavalid
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_lock                                        : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:m0_lock -> jtag_uart_0_avalon_jtag_slave_translator:uav_lock
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_writedata                                   : std_logic_vector(31 downto 0);  -- jtag_uart_0_avalon_jtag_slave_agent:m0_writedata -> jtag_uart_0_avalon_jtag_slave_translator:uav_writedata
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_write                                       : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:m0_write -> jtag_uart_0_avalon_jtag_slave_translator:uav_write
	signal jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount                                  : std_logic_vector(2 downto 0);   -- jtag_uart_0_avalon_jtag_slave_agent:m0_burstcount -> jtag_uart_0_avalon_jtag_slave_translator:uav_burstcount
	signal jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid                                : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rf_source_valid -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_valid
	signal jtag_uart_0_avalon_jtag_slave_agent_rf_source_data                                 : std_logic_vector(106 downto 0); -- jtag_uart_0_avalon_jtag_slave_agent:rf_source_data -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_data
	signal jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready                                : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_ready -> jtag_uart_0_avalon_jtag_slave_agent:rf_source_ready
	signal jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket                        : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rf_source_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_startofpacket
	signal jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket                          : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rf_source_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_endofpacket
	signal jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid                             : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_valid -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_valid
	signal jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data                              : std_logic_vector(106 downto 0); -- jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_data -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_data
	signal jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready                             : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rf_sink_ready -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_ready
	signal jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket                     : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_startofpacket
	signal jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket                       : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_endofpacket
	signal cmd_mux_src_valid                                                                  : std_logic;                      -- cmd_mux:src_valid -> jtag_uart_0_avalon_jtag_slave_agent:cp_valid
	signal cmd_mux_src_data                                                                   : std_logic_vector(105 downto 0); -- cmd_mux:src_data -> jtag_uart_0_avalon_jtag_slave_agent:cp_data
	signal cmd_mux_src_ready                                                                  : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:cp_ready -> cmd_mux:src_ready
	signal cmd_mux_src_channel                                                                : std_logic_vector(14 downto 0);  -- cmd_mux:src_channel -> jtag_uart_0_avalon_jtag_slave_agent:cp_channel
	signal cmd_mux_src_startofpacket                                                          : std_logic;                      -- cmd_mux:src_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent:cp_startofpacket
	signal cmd_mux_src_endofpacket                                                            : std_logic;                      -- cmd_mux:src_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent:cp_endofpacket
	signal sysid_qsys_0_control_slave_agent_m0_readdata                                       : std_logic_vector(31 downto 0);  -- sysid_qsys_0_control_slave_translator:uav_readdata -> sysid_qsys_0_control_slave_agent:m0_readdata
	signal sysid_qsys_0_control_slave_agent_m0_waitrequest                                    : std_logic;                      -- sysid_qsys_0_control_slave_translator:uav_waitrequest -> sysid_qsys_0_control_slave_agent:m0_waitrequest
	signal sysid_qsys_0_control_slave_agent_m0_debugaccess                                    : std_logic;                      -- sysid_qsys_0_control_slave_agent:m0_debugaccess -> sysid_qsys_0_control_slave_translator:uav_debugaccess
	signal sysid_qsys_0_control_slave_agent_m0_address                                        : std_logic_vector(27 downto 0);  -- sysid_qsys_0_control_slave_agent:m0_address -> sysid_qsys_0_control_slave_translator:uav_address
	signal sysid_qsys_0_control_slave_agent_m0_byteenable                                     : std_logic_vector(3 downto 0);   -- sysid_qsys_0_control_slave_agent:m0_byteenable -> sysid_qsys_0_control_slave_translator:uav_byteenable
	signal sysid_qsys_0_control_slave_agent_m0_read                                           : std_logic;                      -- sysid_qsys_0_control_slave_agent:m0_read -> sysid_qsys_0_control_slave_translator:uav_read
	signal sysid_qsys_0_control_slave_agent_m0_readdatavalid                                  : std_logic;                      -- sysid_qsys_0_control_slave_translator:uav_readdatavalid -> sysid_qsys_0_control_slave_agent:m0_readdatavalid
	signal sysid_qsys_0_control_slave_agent_m0_lock                                           : std_logic;                      -- sysid_qsys_0_control_slave_agent:m0_lock -> sysid_qsys_0_control_slave_translator:uav_lock
	signal sysid_qsys_0_control_slave_agent_m0_writedata                                      : std_logic_vector(31 downto 0);  -- sysid_qsys_0_control_slave_agent:m0_writedata -> sysid_qsys_0_control_slave_translator:uav_writedata
	signal sysid_qsys_0_control_slave_agent_m0_write                                          : std_logic;                      -- sysid_qsys_0_control_slave_agent:m0_write -> sysid_qsys_0_control_slave_translator:uav_write
	signal sysid_qsys_0_control_slave_agent_m0_burstcount                                     : std_logic_vector(2 downto 0);   -- sysid_qsys_0_control_slave_agent:m0_burstcount -> sysid_qsys_0_control_slave_translator:uav_burstcount
	signal sysid_qsys_0_control_slave_agent_rf_source_valid                                   : std_logic;                      -- sysid_qsys_0_control_slave_agent:rf_source_valid -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_valid
	signal sysid_qsys_0_control_slave_agent_rf_source_data                                    : std_logic_vector(106 downto 0); -- sysid_qsys_0_control_slave_agent:rf_source_data -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_data
	signal sysid_qsys_0_control_slave_agent_rf_source_ready                                   : std_logic;                      -- sysid_qsys_0_control_slave_agent_rsp_fifo:in_ready -> sysid_qsys_0_control_slave_agent:rf_source_ready
	signal sysid_qsys_0_control_slave_agent_rf_source_startofpacket                           : std_logic;                      -- sysid_qsys_0_control_slave_agent:rf_source_startofpacket -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_startofpacket
	signal sysid_qsys_0_control_slave_agent_rf_source_endofpacket                             : std_logic;                      -- sysid_qsys_0_control_slave_agent:rf_source_endofpacket -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_endofpacket
	signal sysid_qsys_0_control_slave_agent_rsp_fifo_out_valid                                : std_logic;                      -- sysid_qsys_0_control_slave_agent_rsp_fifo:out_valid -> sysid_qsys_0_control_slave_agent:rf_sink_valid
	signal sysid_qsys_0_control_slave_agent_rsp_fifo_out_data                                 : std_logic_vector(106 downto 0); -- sysid_qsys_0_control_slave_agent_rsp_fifo:out_data -> sysid_qsys_0_control_slave_agent:rf_sink_data
	signal sysid_qsys_0_control_slave_agent_rsp_fifo_out_ready                                : std_logic;                      -- sysid_qsys_0_control_slave_agent:rf_sink_ready -> sysid_qsys_0_control_slave_agent_rsp_fifo:out_ready
	signal sysid_qsys_0_control_slave_agent_rsp_fifo_out_startofpacket                        : std_logic;                      -- sysid_qsys_0_control_slave_agent_rsp_fifo:out_startofpacket -> sysid_qsys_0_control_slave_agent:rf_sink_startofpacket
	signal sysid_qsys_0_control_slave_agent_rsp_fifo_out_endofpacket                          : std_logic;                      -- sysid_qsys_0_control_slave_agent_rsp_fifo:out_endofpacket -> sysid_qsys_0_control_slave_agent:rf_sink_endofpacket
	signal cmd_mux_001_src_valid                                                              : std_logic;                      -- cmd_mux_001:src_valid -> sysid_qsys_0_control_slave_agent:cp_valid
	signal cmd_mux_001_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_001:src_data -> sysid_qsys_0_control_slave_agent:cp_data
	signal cmd_mux_001_src_ready                                                              : std_logic;                      -- sysid_qsys_0_control_slave_agent:cp_ready -> cmd_mux_001:src_ready
	signal cmd_mux_001_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_001:src_channel -> sysid_qsys_0_control_slave_agent:cp_channel
	signal cmd_mux_001_src_startofpacket                                                      : std_logic;                      -- cmd_mux_001:src_startofpacket -> sysid_qsys_0_control_slave_agent:cp_startofpacket
	signal cmd_mux_001_src_endofpacket                                                        : std_logic;                      -- cmd_mux_001:src_endofpacket -> sysid_qsys_0_control_slave_agent:cp_endofpacket
	signal nios2_gen2_0_debug_mem_slave_agent_m0_readdata                                     : std_logic_vector(31 downto 0);  -- nios2_gen2_0_debug_mem_slave_translator:uav_readdata -> nios2_gen2_0_debug_mem_slave_agent:m0_readdata
	signal nios2_gen2_0_debug_mem_slave_agent_m0_waitrequest                                  : std_logic;                      -- nios2_gen2_0_debug_mem_slave_translator:uav_waitrequest -> nios2_gen2_0_debug_mem_slave_agent:m0_waitrequest
	signal nios2_gen2_0_debug_mem_slave_agent_m0_debugaccess                                  : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:m0_debugaccess -> nios2_gen2_0_debug_mem_slave_translator:uav_debugaccess
	signal nios2_gen2_0_debug_mem_slave_agent_m0_address                                      : std_logic_vector(27 downto 0);  -- nios2_gen2_0_debug_mem_slave_agent:m0_address -> nios2_gen2_0_debug_mem_slave_translator:uav_address
	signal nios2_gen2_0_debug_mem_slave_agent_m0_byteenable                                   : std_logic_vector(3 downto 0);   -- nios2_gen2_0_debug_mem_slave_agent:m0_byteenable -> nios2_gen2_0_debug_mem_slave_translator:uav_byteenable
	signal nios2_gen2_0_debug_mem_slave_agent_m0_read                                         : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:m0_read -> nios2_gen2_0_debug_mem_slave_translator:uav_read
	signal nios2_gen2_0_debug_mem_slave_agent_m0_readdatavalid                                : std_logic;                      -- nios2_gen2_0_debug_mem_slave_translator:uav_readdatavalid -> nios2_gen2_0_debug_mem_slave_agent:m0_readdatavalid
	signal nios2_gen2_0_debug_mem_slave_agent_m0_lock                                         : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:m0_lock -> nios2_gen2_0_debug_mem_slave_translator:uav_lock
	signal nios2_gen2_0_debug_mem_slave_agent_m0_writedata                                    : std_logic_vector(31 downto 0);  -- nios2_gen2_0_debug_mem_slave_agent:m0_writedata -> nios2_gen2_0_debug_mem_slave_translator:uav_writedata
	signal nios2_gen2_0_debug_mem_slave_agent_m0_write                                        : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:m0_write -> nios2_gen2_0_debug_mem_slave_translator:uav_write
	signal nios2_gen2_0_debug_mem_slave_agent_m0_burstcount                                   : std_logic_vector(2 downto 0);   -- nios2_gen2_0_debug_mem_slave_agent:m0_burstcount -> nios2_gen2_0_debug_mem_slave_translator:uav_burstcount
	signal nios2_gen2_0_debug_mem_slave_agent_rf_source_valid                                 : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rf_source_valid -> nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:in_valid
	signal nios2_gen2_0_debug_mem_slave_agent_rf_source_data                                  : std_logic_vector(106 downto 0); -- nios2_gen2_0_debug_mem_slave_agent:rf_source_data -> nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:in_data
	signal nios2_gen2_0_debug_mem_slave_agent_rf_source_ready                                 : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:in_ready -> nios2_gen2_0_debug_mem_slave_agent:rf_source_ready
	signal nios2_gen2_0_debug_mem_slave_agent_rf_source_startofpacket                         : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rf_source_startofpacket -> nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:in_startofpacket
	signal nios2_gen2_0_debug_mem_slave_agent_rf_source_endofpacket                           : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rf_source_endofpacket -> nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:in_endofpacket
	signal nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_valid                              : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:out_valid -> nios2_gen2_0_debug_mem_slave_agent:rf_sink_valid
	signal nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_data                               : std_logic_vector(106 downto 0); -- nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:out_data -> nios2_gen2_0_debug_mem_slave_agent:rf_sink_data
	signal nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_ready                              : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rf_sink_ready -> nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:out_ready
	signal nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_startofpacket                      : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:out_startofpacket -> nios2_gen2_0_debug_mem_slave_agent:rf_sink_startofpacket
	signal nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_endofpacket                        : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent_rsp_fifo:out_endofpacket -> nios2_gen2_0_debug_mem_slave_agent:rf_sink_endofpacket
	signal cmd_mux_002_src_valid                                                              : std_logic;                      -- cmd_mux_002:src_valid -> nios2_gen2_0_debug_mem_slave_agent:cp_valid
	signal cmd_mux_002_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_002:src_data -> nios2_gen2_0_debug_mem_slave_agent:cp_data
	signal cmd_mux_002_src_ready                                                              : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:cp_ready -> cmd_mux_002:src_ready
	signal cmd_mux_002_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_002:src_channel -> nios2_gen2_0_debug_mem_slave_agent:cp_channel
	signal cmd_mux_002_src_startofpacket                                                      : std_logic;                      -- cmd_mux_002:src_startofpacket -> nios2_gen2_0_debug_mem_slave_agent:cp_startofpacket
	signal cmd_mux_002_src_endofpacket                                                        : std_logic;                      -- cmd_mux_002:src_endofpacket -> nios2_gen2_0_debug_mem_slave_agent:cp_endofpacket
	signal sdram_pll_pll_slave_agent_m0_readdata                                              : std_logic_vector(31 downto 0);  -- sdram_pll_pll_slave_translator:uav_readdata -> sdram_pll_pll_slave_agent:m0_readdata
	signal sdram_pll_pll_slave_agent_m0_waitrequest                                           : std_logic;                      -- sdram_pll_pll_slave_translator:uav_waitrequest -> sdram_pll_pll_slave_agent:m0_waitrequest
	signal sdram_pll_pll_slave_agent_m0_debugaccess                                           : std_logic;                      -- sdram_pll_pll_slave_agent:m0_debugaccess -> sdram_pll_pll_slave_translator:uav_debugaccess
	signal sdram_pll_pll_slave_agent_m0_address                                               : std_logic_vector(27 downto 0);  -- sdram_pll_pll_slave_agent:m0_address -> sdram_pll_pll_slave_translator:uav_address
	signal sdram_pll_pll_slave_agent_m0_byteenable                                            : std_logic_vector(3 downto 0);   -- sdram_pll_pll_slave_agent:m0_byteenable -> sdram_pll_pll_slave_translator:uav_byteenable
	signal sdram_pll_pll_slave_agent_m0_read                                                  : std_logic;                      -- sdram_pll_pll_slave_agent:m0_read -> sdram_pll_pll_slave_translator:uav_read
	signal sdram_pll_pll_slave_agent_m0_readdatavalid                                         : std_logic;                      -- sdram_pll_pll_slave_translator:uav_readdatavalid -> sdram_pll_pll_slave_agent:m0_readdatavalid
	signal sdram_pll_pll_slave_agent_m0_lock                                                  : std_logic;                      -- sdram_pll_pll_slave_agent:m0_lock -> sdram_pll_pll_slave_translator:uav_lock
	signal sdram_pll_pll_slave_agent_m0_writedata                                             : std_logic_vector(31 downto 0);  -- sdram_pll_pll_slave_agent:m0_writedata -> sdram_pll_pll_slave_translator:uav_writedata
	signal sdram_pll_pll_slave_agent_m0_write                                                 : std_logic;                      -- sdram_pll_pll_slave_agent:m0_write -> sdram_pll_pll_slave_translator:uav_write
	signal sdram_pll_pll_slave_agent_m0_burstcount                                            : std_logic_vector(2 downto 0);   -- sdram_pll_pll_slave_agent:m0_burstcount -> sdram_pll_pll_slave_translator:uav_burstcount
	signal sdram_pll_pll_slave_agent_rf_source_valid                                          : std_logic;                      -- sdram_pll_pll_slave_agent:rf_source_valid -> sdram_pll_pll_slave_agent_rsp_fifo:in_valid
	signal sdram_pll_pll_slave_agent_rf_source_data                                           : std_logic_vector(106 downto 0); -- sdram_pll_pll_slave_agent:rf_source_data -> sdram_pll_pll_slave_agent_rsp_fifo:in_data
	signal sdram_pll_pll_slave_agent_rf_source_ready                                          : std_logic;                      -- sdram_pll_pll_slave_agent_rsp_fifo:in_ready -> sdram_pll_pll_slave_agent:rf_source_ready
	signal sdram_pll_pll_slave_agent_rf_source_startofpacket                                  : std_logic;                      -- sdram_pll_pll_slave_agent:rf_source_startofpacket -> sdram_pll_pll_slave_agent_rsp_fifo:in_startofpacket
	signal sdram_pll_pll_slave_agent_rf_source_endofpacket                                    : std_logic;                      -- sdram_pll_pll_slave_agent:rf_source_endofpacket -> sdram_pll_pll_slave_agent_rsp_fifo:in_endofpacket
	signal sdram_pll_pll_slave_agent_rsp_fifo_out_valid                                       : std_logic;                      -- sdram_pll_pll_slave_agent_rsp_fifo:out_valid -> sdram_pll_pll_slave_agent:rf_sink_valid
	signal sdram_pll_pll_slave_agent_rsp_fifo_out_data                                        : std_logic_vector(106 downto 0); -- sdram_pll_pll_slave_agent_rsp_fifo:out_data -> sdram_pll_pll_slave_agent:rf_sink_data
	signal sdram_pll_pll_slave_agent_rsp_fifo_out_ready                                       : std_logic;                      -- sdram_pll_pll_slave_agent:rf_sink_ready -> sdram_pll_pll_slave_agent_rsp_fifo:out_ready
	signal sdram_pll_pll_slave_agent_rsp_fifo_out_startofpacket                               : std_logic;                      -- sdram_pll_pll_slave_agent_rsp_fifo:out_startofpacket -> sdram_pll_pll_slave_agent:rf_sink_startofpacket
	signal sdram_pll_pll_slave_agent_rsp_fifo_out_endofpacket                                 : std_logic;                      -- sdram_pll_pll_slave_agent_rsp_fifo:out_endofpacket -> sdram_pll_pll_slave_agent:rf_sink_endofpacket
	signal cmd_mux_003_src_valid                                                              : std_logic;                      -- cmd_mux_003:src_valid -> sdram_pll_pll_slave_agent:cp_valid
	signal cmd_mux_003_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_003:src_data -> sdram_pll_pll_slave_agent:cp_data
	signal cmd_mux_003_src_ready                                                              : std_logic;                      -- sdram_pll_pll_slave_agent:cp_ready -> cmd_mux_003:src_ready
	signal cmd_mux_003_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_003:src_channel -> sdram_pll_pll_slave_agent:cp_channel
	signal cmd_mux_003_src_startofpacket                                                      : std_logic;                      -- cmd_mux_003:src_startofpacket -> sdram_pll_pll_slave_agent:cp_startofpacket
	signal cmd_mux_003_src_endofpacket                                                        : std_logic;                      -- cmd_mux_003:src_endofpacket -> sdram_pll_pll_slave_agent:cp_endofpacket
	signal onchip_memory2_0_s1_agent_m0_readdata                                              : std_logic_vector(31 downto 0);  -- onchip_memory2_0_s1_translator:uav_readdata -> onchip_memory2_0_s1_agent:m0_readdata
	signal onchip_memory2_0_s1_agent_m0_waitrequest                                           : std_logic;                      -- onchip_memory2_0_s1_translator:uav_waitrequest -> onchip_memory2_0_s1_agent:m0_waitrequest
	signal onchip_memory2_0_s1_agent_m0_debugaccess                                           : std_logic;                      -- onchip_memory2_0_s1_agent:m0_debugaccess -> onchip_memory2_0_s1_translator:uav_debugaccess
	signal onchip_memory2_0_s1_agent_m0_address                                               : std_logic_vector(27 downto 0);  -- onchip_memory2_0_s1_agent:m0_address -> onchip_memory2_0_s1_translator:uav_address
	signal onchip_memory2_0_s1_agent_m0_byteenable                                            : std_logic_vector(3 downto 0);   -- onchip_memory2_0_s1_agent:m0_byteenable -> onchip_memory2_0_s1_translator:uav_byteenable
	signal onchip_memory2_0_s1_agent_m0_read                                                  : std_logic;                      -- onchip_memory2_0_s1_agent:m0_read -> onchip_memory2_0_s1_translator:uav_read
	signal onchip_memory2_0_s1_agent_m0_readdatavalid                                         : std_logic;                      -- onchip_memory2_0_s1_translator:uav_readdatavalid -> onchip_memory2_0_s1_agent:m0_readdatavalid
	signal onchip_memory2_0_s1_agent_m0_lock                                                  : std_logic;                      -- onchip_memory2_0_s1_agent:m0_lock -> onchip_memory2_0_s1_translator:uav_lock
	signal onchip_memory2_0_s1_agent_m0_writedata                                             : std_logic_vector(31 downto 0);  -- onchip_memory2_0_s1_agent:m0_writedata -> onchip_memory2_0_s1_translator:uav_writedata
	signal onchip_memory2_0_s1_agent_m0_write                                                 : std_logic;                      -- onchip_memory2_0_s1_agent:m0_write -> onchip_memory2_0_s1_translator:uav_write
	signal onchip_memory2_0_s1_agent_m0_burstcount                                            : std_logic_vector(2 downto 0);   -- onchip_memory2_0_s1_agent:m0_burstcount -> onchip_memory2_0_s1_translator:uav_burstcount
	signal onchip_memory2_0_s1_agent_rf_source_valid                                          : std_logic;                      -- onchip_memory2_0_s1_agent:rf_source_valid -> onchip_memory2_0_s1_agent_rsp_fifo:in_valid
	signal onchip_memory2_0_s1_agent_rf_source_data                                           : std_logic_vector(106 downto 0); -- onchip_memory2_0_s1_agent:rf_source_data -> onchip_memory2_0_s1_agent_rsp_fifo:in_data
	signal onchip_memory2_0_s1_agent_rf_source_ready                                          : std_logic;                      -- onchip_memory2_0_s1_agent_rsp_fifo:in_ready -> onchip_memory2_0_s1_agent:rf_source_ready
	signal onchip_memory2_0_s1_agent_rf_source_startofpacket                                  : std_logic;                      -- onchip_memory2_0_s1_agent:rf_source_startofpacket -> onchip_memory2_0_s1_agent_rsp_fifo:in_startofpacket
	signal onchip_memory2_0_s1_agent_rf_source_endofpacket                                    : std_logic;                      -- onchip_memory2_0_s1_agent:rf_source_endofpacket -> onchip_memory2_0_s1_agent_rsp_fifo:in_endofpacket
	signal onchip_memory2_0_s1_agent_rsp_fifo_out_valid                                       : std_logic;                      -- onchip_memory2_0_s1_agent_rsp_fifo:out_valid -> onchip_memory2_0_s1_agent:rf_sink_valid
	signal onchip_memory2_0_s1_agent_rsp_fifo_out_data                                        : std_logic_vector(106 downto 0); -- onchip_memory2_0_s1_agent_rsp_fifo:out_data -> onchip_memory2_0_s1_agent:rf_sink_data
	signal onchip_memory2_0_s1_agent_rsp_fifo_out_ready                                       : std_logic;                      -- onchip_memory2_0_s1_agent:rf_sink_ready -> onchip_memory2_0_s1_agent_rsp_fifo:out_ready
	signal onchip_memory2_0_s1_agent_rsp_fifo_out_startofpacket                               : std_logic;                      -- onchip_memory2_0_s1_agent_rsp_fifo:out_startofpacket -> onchip_memory2_0_s1_agent:rf_sink_startofpacket
	signal onchip_memory2_0_s1_agent_rsp_fifo_out_endofpacket                                 : std_logic;                      -- onchip_memory2_0_s1_agent_rsp_fifo:out_endofpacket -> onchip_memory2_0_s1_agent:rf_sink_endofpacket
	signal cmd_mux_004_src_valid                                                              : std_logic;                      -- cmd_mux_004:src_valid -> onchip_memory2_0_s1_agent:cp_valid
	signal cmd_mux_004_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_004:src_data -> onchip_memory2_0_s1_agent:cp_data
	signal cmd_mux_004_src_ready                                                              : std_logic;                      -- onchip_memory2_0_s1_agent:cp_ready -> cmd_mux_004:src_ready
	signal cmd_mux_004_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_004:src_channel -> onchip_memory2_0_s1_agent:cp_channel
	signal cmd_mux_004_src_startofpacket                                                      : std_logic;                      -- cmd_mux_004:src_startofpacket -> onchip_memory2_0_s1_agent:cp_startofpacket
	signal cmd_mux_004_src_endofpacket                                                        : std_logic;                      -- cmd_mux_004:src_endofpacket -> onchip_memory2_0_s1_agent:cp_endofpacket
	signal sdram_s1_agent_m0_readdata                                                         : std_logic_vector(15 downto 0);  -- sdram_s1_translator:uav_readdata -> sdram_s1_agent:m0_readdata
	signal sdram_s1_agent_m0_waitrequest                                                      : std_logic;                      -- sdram_s1_translator:uav_waitrequest -> sdram_s1_agent:m0_waitrequest
	signal sdram_s1_agent_m0_debugaccess                                                      : std_logic;                      -- sdram_s1_agent:m0_debugaccess -> sdram_s1_translator:uav_debugaccess
	signal sdram_s1_agent_m0_address                                                          : std_logic_vector(27 downto 0);  -- sdram_s1_agent:m0_address -> sdram_s1_translator:uav_address
	signal sdram_s1_agent_m0_byteenable                                                       : std_logic_vector(1 downto 0);   -- sdram_s1_agent:m0_byteenable -> sdram_s1_translator:uav_byteenable
	signal sdram_s1_agent_m0_read                                                             : std_logic;                      -- sdram_s1_agent:m0_read -> sdram_s1_translator:uav_read
	signal sdram_s1_agent_m0_readdatavalid                                                    : std_logic;                      -- sdram_s1_translator:uav_readdatavalid -> sdram_s1_agent:m0_readdatavalid
	signal sdram_s1_agent_m0_lock                                                             : std_logic;                      -- sdram_s1_agent:m0_lock -> sdram_s1_translator:uav_lock
	signal sdram_s1_agent_m0_writedata                                                        : std_logic_vector(15 downto 0);  -- sdram_s1_agent:m0_writedata -> sdram_s1_translator:uav_writedata
	signal sdram_s1_agent_m0_write                                                            : std_logic;                      -- sdram_s1_agent:m0_write -> sdram_s1_translator:uav_write
	signal sdram_s1_agent_m0_burstcount                                                       : std_logic_vector(1 downto 0);   -- sdram_s1_agent:m0_burstcount -> sdram_s1_translator:uav_burstcount
	signal sdram_s1_agent_rf_source_valid                                                     : std_logic;                      -- sdram_s1_agent:rf_source_valid -> sdram_s1_agent_rsp_fifo:in_valid
	signal sdram_s1_agent_rf_source_data                                                      : std_logic_vector(88 downto 0);  -- sdram_s1_agent:rf_source_data -> sdram_s1_agent_rsp_fifo:in_data
	signal sdram_s1_agent_rf_source_ready                                                     : std_logic;                      -- sdram_s1_agent_rsp_fifo:in_ready -> sdram_s1_agent:rf_source_ready
	signal sdram_s1_agent_rf_source_startofpacket                                             : std_logic;                      -- sdram_s1_agent:rf_source_startofpacket -> sdram_s1_agent_rsp_fifo:in_startofpacket
	signal sdram_s1_agent_rf_source_endofpacket                                               : std_logic;                      -- sdram_s1_agent:rf_source_endofpacket -> sdram_s1_agent_rsp_fifo:in_endofpacket
	signal sdram_s1_agent_rsp_fifo_out_valid                                                  : std_logic;                      -- sdram_s1_agent_rsp_fifo:out_valid -> sdram_s1_agent:rf_sink_valid
	signal sdram_s1_agent_rsp_fifo_out_data                                                   : std_logic_vector(88 downto 0);  -- sdram_s1_agent_rsp_fifo:out_data -> sdram_s1_agent:rf_sink_data
	signal sdram_s1_agent_rsp_fifo_out_ready                                                  : std_logic;                      -- sdram_s1_agent:rf_sink_ready -> sdram_s1_agent_rsp_fifo:out_ready
	signal sdram_s1_agent_rsp_fifo_out_startofpacket                                          : std_logic;                      -- sdram_s1_agent_rsp_fifo:out_startofpacket -> sdram_s1_agent:rf_sink_startofpacket
	signal sdram_s1_agent_rsp_fifo_out_endofpacket                                            : std_logic;                      -- sdram_s1_agent_rsp_fifo:out_endofpacket -> sdram_s1_agent:rf_sink_endofpacket
	signal sdram_s1_agent_rdata_fifo_src_valid                                                : std_logic;                      -- sdram_s1_agent:rdata_fifo_src_valid -> sdram_s1_agent_rdata_fifo:in_valid
	signal sdram_s1_agent_rdata_fifo_src_data                                                 : std_logic_vector(17 downto 0);  -- sdram_s1_agent:rdata_fifo_src_data -> sdram_s1_agent_rdata_fifo:in_data
	signal sdram_s1_agent_rdata_fifo_src_ready                                                : std_logic;                      -- sdram_s1_agent_rdata_fifo:in_ready -> sdram_s1_agent:rdata_fifo_src_ready
	signal keycode_s1_agent_m0_readdata                                                       : std_logic_vector(31 downto 0);  -- keycode_s1_translator:uav_readdata -> keycode_s1_agent:m0_readdata
	signal keycode_s1_agent_m0_waitrequest                                                    : std_logic;                      -- keycode_s1_translator:uav_waitrequest -> keycode_s1_agent:m0_waitrequest
	signal keycode_s1_agent_m0_debugaccess                                                    : std_logic;                      -- keycode_s1_agent:m0_debugaccess -> keycode_s1_translator:uav_debugaccess
	signal keycode_s1_agent_m0_address                                                        : std_logic_vector(27 downto 0);  -- keycode_s1_agent:m0_address -> keycode_s1_translator:uav_address
	signal keycode_s1_agent_m0_byteenable                                                     : std_logic_vector(3 downto 0);   -- keycode_s1_agent:m0_byteenable -> keycode_s1_translator:uav_byteenable
	signal keycode_s1_agent_m0_read                                                           : std_logic;                      -- keycode_s1_agent:m0_read -> keycode_s1_translator:uav_read
	signal keycode_s1_agent_m0_readdatavalid                                                  : std_logic;                      -- keycode_s1_translator:uav_readdatavalid -> keycode_s1_agent:m0_readdatavalid
	signal keycode_s1_agent_m0_lock                                                           : std_logic;                      -- keycode_s1_agent:m0_lock -> keycode_s1_translator:uav_lock
	signal keycode_s1_agent_m0_writedata                                                      : std_logic_vector(31 downto 0);  -- keycode_s1_agent:m0_writedata -> keycode_s1_translator:uav_writedata
	signal keycode_s1_agent_m0_write                                                          : std_logic;                      -- keycode_s1_agent:m0_write -> keycode_s1_translator:uav_write
	signal keycode_s1_agent_m0_burstcount                                                     : std_logic_vector(2 downto 0);   -- keycode_s1_agent:m0_burstcount -> keycode_s1_translator:uav_burstcount
	signal keycode_s1_agent_rf_source_valid                                                   : std_logic;                      -- keycode_s1_agent:rf_source_valid -> keycode_s1_agent_rsp_fifo:in_valid
	signal keycode_s1_agent_rf_source_data                                                    : std_logic_vector(106 downto 0); -- keycode_s1_agent:rf_source_data -> keycode_s1_agent_rsp_fifo:in_data
	signal keycode_s1_agent_rf_source_ready                                                   : std_logic;                      -- keycode_s1_agent_rsp_fifo:in_ready -> keycode_s1_agent:rf_source_ready
	signal keycode_s1_agent_rf_source_startofpacket                                           : std_logic;                      -- keycode_s1_agent:rf_source_startofpacket -> keycode_s1_agent_rsp_fifo:in_startofpacket
	signal keycode_s1_agent_rf_source_endofpacket                                             : std_logic;                      -- keycode_s1_agent:rf_source_endofpacket -> keycode_s1_agent_rsp_fifo:in_endofpacket
	signal keycode_s1_agent_rsp_fifo_out_valid                                                : std_logic;                      -- keycode_s1_agent_rsp_fifo:out_valid -> keycode_s1_agent:rf_sink_valid
	signal keycode_s1_agent_rsp_fifo_out_data                                                 : std_logic_vector(106 downto 0); -- keycode_s1_agent_rsp_fifo:out_data -> keycode_s1_agent:rf_sink_data
	signal keycode_s1_agent_rsp_fifo_out_ready                                                : std_logic;                      -- keycode_s1_agent:rf_sink_ready -> keycode_s1_agent_rsp_fifo:out_ready
	signal keycode_s1_agent_rsp_fifo_out_startofpacket                                        : std_logic;                      -- keycode_s1_agent_rsp_fifo:out_startofpacket -> keycode_s1_agent:rf_sink_startofpacket
	signal keycode_s1_agent_rsp_fifo_out_endofpacket                                          : std_logic;                      -- keycode_s1_agent_rsp_fifo:out_endofpacket -> keycode_s1_agent:rf_sink_endofpacket
	signal cmd_mux_006_src_valid                                                              : std_logic;                      -- cmd_mux_006:src_valid -> keycode_s1_agent:cp_valid
	signal cmd_mux_006_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_006:src_data -> keycode_s1_agent:cp_data
	signal cmd_mux_006_src_ready                                                              : std_logic;                      -- keycode_s1_agent:cp_ready -> cmd_mux_006:src_ready
	signal cmd_mux_006_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_006:src_channel -> keycode_s1_agent:cp_channel
	signal cmd_mux_006_src_startofpacket                                                      : std_logic;                      -- cmd_mux_006:src_startofpacket -> keycode_s1_agent:cp_startofpacket
	signal cmd_mux_006_src_endofpacket                                                        : std_logic;                      -- cmd_mux_006:src_endofpacket -> keycode_s1_agent:cp_endofpacket
	signal usb_irq_s1_agent_m0_readdata                                                       : std_logic_vector(31 downto 0);  -- usb_irq_s1_translator:uav_readdata -> usb_irq_s1_agent:m0_readdata
	signal usb_irq_s1_agent_m0_waitrequest                                                    : std_logic;                      -- usb_irq_s1_translator:uav_waitrequest -> usb_irq_s1_agent:m0_waitrequest
	signal usb_irq_s1_agent_m0_debugaccess                                                    : std_logic;                      -- usb_irq_s1_agent:m0_debugaccess -> usb_irq_s1_translator:uav_debugaccess
	signal usb_irq_s1_agent_m0_address                                                        : std_logic_vector(27 downto 0);  -- usb_irq_s1_agent:m0_address -> usb_irq_s1_translator:uav_address
	signal usb_irq_s1_agent_m0_byteenable                                                     : std_logic_vector(3 downto 0);   -- usb_irq_s1_agent:m0_byteenable -> usb_irq_s1_translator:uav_byteenable
	signal usb_irq_s1_agent_m0_read                                                           : std_logic;                      -- usb_irq_s1_agent:m0_read -> usb_irq_s1_translator:uav_read
	signal usb_irq_s1_agent_m0_readdatavalid                                                  : std_logic;                      -- usb_irq_s1_translator:uav_readdatavalid -> usb_irq_s1_agent:m0_readdatavalid
	signal usb_irq_s1_agent_m0_lock                                                           : std_logic;                      -- usb_irq_s1_agent:m0_lock -> usb_irq_s1_translator:uav_lock
	signal usb_irq_s1_agent_m0_writedata                                                      : std_logic_vector(31 downto 0);  -- usb_irq_s1_agent:m0_writedata -> usb_irq_s1_translator:uav_writedata
	signal usb_irq_s1_agent_m0_write                                                          : std_logic;                      -- usb_irq_s1_agent:m0_write -> usb_irq_s1_translator:uav_write
	signal usb_irq_s1_agent_m0_burstcount                                                     : std_logic_vector(2 downto 0);   -- usb_irq_s1_agent:m0_burstcount -> usb_irq_s1_translator:uav_burstcount
	signal usb_irq_s1_agent_rf_source_valid                                                   : std_logic;                      -- usb_irq_s1_agent:rf_source_valid -> usb_irq_s1_agent_rsp_fifo:in_valid
	signal usb_irq_s1_agent_rf_source_data                                                    : std_logic_vector(106 downto 0); -- usb_irq_s1_agent:rf_source_data -> usb_irq_s1_agent_rsp_fifo:in_data
	signal usb_irq_s1_agent_rf_source_ready                                                   : std_logic;                      -- usb_irq_s1_agent_rsp_fifo:in_ready -> usb_irq_s1_agent:rf_source_ready
	signal usb_irq_s1_agent_rf_source_startofpacket                                           : std_logic;                      -- usb_irq_s1_agent:rf_source_startofpacket -> usb_irq_s1_agent_rsp_fifo:in_startofpacket
	signal usb_irq_s1_agent_rf_source_endofpacket                                             : std_logic;                      -- usb_irq_s1_agent:rf_source_endofpacket -> usb_irq_s1_agent_rsp_fifo:in_endofpacket
	signal usb_irq_s1_agent_rsp_fifo_out_valid                                                : std_logic;                      -- usb_irq_s1_agent_rsp_fifo:out_valid -> usb_irq_s1_agent:rf_sink_valid
	signal usb_irq_s1_agent_rsp_fifo_out_data                                                 : std_logic_vector(106 downto 0); -- usb_irq_s1_agent_rsp_fifo:out_data -> usb_irq_s1_agent:rf_sink_data
	signal usb_irq_s1_agent_rsp_fifo_out_ready                                                : std_logic;                      -- usb_irq_s1_agent:rf_sink_ready -> usb_irq_s1_agent_rsp_fifo:out_ready
	signal usb_irq_s1_agent_rsp_fifo_out_startofpacket                                        : std_logic;                      -- usb_irq_s1_agent_rsp_fifo:out_startofpacket -> usb_irq_s1_agent:rf_sink_startofpacket
	signal usb_irq_s1_agent_rsp_fifo_out_endofpacket                                          : std_logic;                      -- usb_irq_s1_agent_rsp_fifo:out_endofpacket -> usb_irq_s1_agent:rf_sink_endofpacket
	signal cmd_mux_007_src_valid                                                              : std_logic;                      -- cmd_mux_007:src_valid -> usb_irq_s1_agent:cp_valid
	signal cmd_mux_007_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_007:src_data -> usb_irq_s1_agent:cp_data
	signal cmd_mux_007_src_ready                                                              : std_logic;                      -- usb_irq_s1_agent:cp_ready -> cmd_mux_007:src_ready
	signal cmd_mux_007_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_007:src_channel -> usb_irq_s1_agent:cp_channel
	signal cmd_mux_007_src_startofpacket                                                      : std_logic;                      -- cmd_mux_007:src_startofpacket -> usb_irq_s1_agent:cp_startofpacket
	signal cmd_mux_007_src_endofpacket                                                        : std_logic;                      -- cmd_mux_007:src_endofpacket -> usb_irq_s1_agent:cp_endofpacket
	signal usb_gpx_s1_agent_m0_readdata                                                       : std_logic_vector(31 downto 0);  -- usb_gpx_s1_translator:uav_readdata -> usb_gpx_s1_agent:m0_readdata
	signal usb_gpx_s1_agent_m0_waitrequest                                                    : std_logic;                      -- usb_gpx_s1_translator:uav_waitrequest -> usb_gpx_s1_agent:m0_waitrequest
	signal usb_gpx_s1_agent_m0_debugaccess                                                    : std_logic;                      -- usb_gpx_s1_agent:m0_debugaccess -> usb_gpx_s1_translator:uav_debugaccess
	signal usb_gpx_s1_agent_m0_address                                                        : std_logic_vector(27 downto 0);  -- usb_gpx_s1_agent:m0_address -> usb_gpx_s1_translator:uav_address
	signal usb_gpx_s1_agent_m0_byteenable                                                     : std_logic_vector(3 downto 0);   -- usb_gpx_s1_agent:m0_byteenable -> usb_gpx_s1_translator:uav_byteenable
	signal usb_gpx_s1_agent_m0_read                                                           : std_logic;                      -- usb_gpx_s1_agent:m0_read -> usb_gpx_s1_translator:uav_read
	signal usb_gpx_s1_agent_m0_readdatavalid                                                  : std_logic;                      -- usb_gpx_s1_translator:uav_readdatavalid -> usb_gpx_s1_agent:m0_readdatavalid
	signal usb_gpx_s1_agent_m0_lock                                                           : std_logic;                      -- usb_gpx_s1_agent:m0_lock -> usb_gpx_s1_translator:uav_lock
	signal usb_gpx_s1_agent_m0_writedata                                                      : std_logic_vector(31 downto 0);  -- usb_gpx_s1_agent:m0_writedata -> usb_gpx_s1_translator:uav_writedata
	signal usb_gpx_s1_agent_m0_write                                                          : std_logic;                      -- usb_gpx_s1_agent:m0_write -> usb_gpx_s1_translator:uav_write
	signal usb_gpx_s1_agent_m0_burstcount                                                     : std_logic_vector(2 downto 0);   -- usb_gpx_s1_agent:m0_burstcount -> usb_gpx_s1_translator:uav_burstcount
	signal usb_gpx_s1_agent_rf_source_valid                                                   : std_logic;                      -- usb_gpx_s1_agent:rf_source_valid -> usb_gpx_s1_agent_rsp_fifo:in_valid
	signal usb_gpx_s1_agent_rf_source_data                                                    : std_logic_vector(106 downto 0); -- usb_gpx_s1_agent:rf_source_data -> usb_gpx_s1_agent_rsp_fifo:in_data
	signal usb_gpx_s1_agent_rf_source_ready                                                   : std_logic;                      -- usb_gpx_s1_agent_rsp_fifo:in_ready -> usb_gpx_s1_agent:rf_source_ready
	signal usb_gpx_s1_agent_rf_source_startofpacket                                           : std_logic;                      -- usb_gpx_s1_agent:rf_source_startofpacket -> usb_gpx_s1_agent_rsp_fifo:in_startofpacket
	signal usb_gpx_s1_agent_rf_source_endofpacket                                             : std_logic;                      -- usb_gpx_s1_agent:rf_source_endofpacket -> usb_gpx_s1_agent_rsp_fifo:in_endofpacket
	signal usb_gpx_s1_agent_rsp_fifo_out_valid                                                : std_logic;                      -- usb_gpx_s1_agent_rsp_fifo:out_valid -> usb_gpx_s1_agent:rf_sink_valid
	signal usb_gpx_s1_agent_rsp_fifo_out_data                                                 : std_logic_vector(106 downto 0); -- usb_gpx_s1_agent_rsp_fifo:out_data -> usb_gpx_s1_agent:rf_sink_data
	signal usb_gpx_s1_agent_rsp_fifo_out_ready                                                : std_logic;                      -- usb_gpx_s1_agent:rf_sink_ready -> usb_gpx_s1_agent_rsp_fifo:out_ready
	signal usb_gpx_s1_agent_rsp_fifo_out_startofpacket                                        : std_logic;                      -- usb_gpx_s1_agent_rsp_fifo:out_startofpacket -> usb_gpx_s1_agent:rf_sink_startofpacket
	signal usb_gpx_s1_agent_rsp_fifo_out_endofpacket                                          : std_logic;                      -- usb_gpx_s1_agent_rsp_fifo:out_endofpacket -> usb_gpx_s1_agent:rf_sink_endofpacket
	signal cmd_mux_008_src_valid                                                              : std_logic;                      -- cmd_mux_008:src_valid -> usb_gpx_s1_agent:cp_valid
	signal cmd_mux_008_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_008:src_data -> usb_gpx_s1_agent:cp_data
	signal cmd_mux_008_src_ready                                                              : std_logic;                      -- usb_gpx_s1_agent:cp_ready -> cmd_mux_008:src_ready
	signal cmd_mux_008_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_008:src_channel -> usb_gpx_s1_agent:cp_channel
	signal cmd_mux_008_src_startofpacket                                                      : std_logic;                      -- cmd_mux_008:src_startofpacket -> usb_gpx_s1_agent:cp_startofpacket
	signal cmd_mux_008_src_endofpacket                                                        : std_logic;                      -- cmd_mux_008:src_endofpacket -> usb_gpx_s1_agent:cp_endofpacket
	signal usb_rst_s1_agent_m0_readdata                                                       : std_logic_vector(31 downto 0);  -- usb_rst_s1_translator:uav_readdata -> usb_rst_s1_agent:m0_readdata
	signal usb_rst_s1_agent_m0_waitrequest                                                    : std_logic;                      -- usb_rst_s1_translator:uav_waitrequest -> usb_rst_s1_agent:m0_waitrequest
	signal usb_rst_s1_agent_m0_debugaccess                                                    : std_logic;                      -- usb_rst_s1_agent:m0_debugaccess -> usb_rst_s1_translator:uav_debugaccess
	signal usb_rst_s1_agent_m0_address                                                        : std_logic_vector(27 downto 0);  -- usb_rst_s1_agent:m0_address -> usb_rst_s1_translator:uav_address
	signal usb_rst_s1_agent_m0_byteenable                                                     : std_logic_vector(3 downto 0);   -- usb_rst_s1_agent:m0_byteenable -> usb_rst_s1_translator:uav_byteenable
	signal usb_rst_s1_agent_m0_read                                                           : std_logic;                      -- usb_rst_s1_agent:m0_read -> usb_rst_s1_translator:uav_read
	signal usb_rst_s1_agent_m0_readdatavalid                                                  : std_logic;                      -- usb_rst_s1_translator:uav_readdatavalid -> usb_rst_s1_agent:m0_readdatavalid
	signal usb_rst_s1_agent_m0_lock                                                           : std_logic;                      -- usb_rst_s1_agent:m0_lock -> usb_rst_s1_translator:uav_lock
	signal usb_rst_s1_agent_m0_writedata                                                      : std_logic_vector(31 downto 0);  -- usb_rst_s1_agent:m0_writedata -> usb_rst_s1_translator:uav_writedata
	signal usb_rst_s1_agent_m0_write                                                          : std_logic;                      -- usb_rst_s1_agent:m0_write -> usb_rst_s1_translator:uav_write
	signal usb_rst_s1_agent_m0_burstcount                                                     : std_logic_vector(2 downto 0);   -- usb_rst_s1_agent:m0_burstcount -> usb_rst_s1_translator:uav_burstcount
	signal usb_rst_s1_agent_rf_source_valid                                                   : std_logic;                      -- usb_rst_s1_agent:rf_source_valid -> usb_rst_s1_agent_rsp_fifo:in_valid
	signal usb_rst_s1_agent_rf_source_data                                                    : std_logic_vector(106 downto 0); -- usb_rst_s1_agent:rf_source_data -> usb_rst_s1_agent_rsp_fifo:in_data
	signal usb_rst_s1_agent_rf_source_ready                                                   : std_logic;                      -- usb_rst_s1_agent_rsp_fifo:in_ready -> usb_rst_s1_agent:rf_source_ready
	signal usb_rst_s1_agent_rf_source_startofpacket                                           : std_logic;                      -- usb_rst_s1_agent:rf_source_startofpacket -> usb_rst_s1_agent_rsp_fifo:in_startofpacket
	signal usb_rst_s1_agent_rf_source_endofpacket                                             : std_logic;                      -- usb_rst_s1_agent:rf_source_endofpacket -> usb_rst_s1_agent_rsp_fifo:in_endofpacket
	signal usb_rst_s1_agent_rsp_fifo_out_valid                                                : std_logic;                      -- usb_rst_s1_agent_rsp_fifo:out_valid -> usb_rst_s1_agent:rf_sink_valid
	signal usb_rst_s1_agent_rsp_fifo_out_data                                                 : std_logic_vector(106 downto 0); -- usb_rst_s1_agent_rsp_fifo:out_data -> usb_rst_s1_agent:rf_sink_data
	signal usb_rst_s1_agent_rsp_fifo_out_ready                                                : std_logic;                      -- usb_rst_s1_agent:rf_sink_ready -> usb_rst_s1_agent_rsp_fifo:out_ready
	signal usb_rst_s1_agent_rsp_fifo_out_startofpacket                                        : std_logic;                      -- usb_rst_s1_agent_rsp_fifo:out_startofpacket -> usb_rst_s1_agent:rf_sink_startofpacket
	signal usb_rst_s1_agent_rsp_fifo_out_endofpacket                                          : std_logic;                      -- usb_rst_s1_agent_rsp_fifo:out_endofpacket -> usb_rst_s1_agent:rf_sink_endofpacket
	signal cmd_mux_009_src_valid                                                              : std_logic;                      -- cmd_mux_009:src_valid -> usb_rst_s1_agent:cp_valid
	signal cmd_mux_009_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_009:src_data -> usb_rst_s1_agent:cp_data
	signal cmd_mux_009_src_ready                                                              : std_logic;                      -- usb_rst_s1_agent:cp_ready -> cmd_mux_009:src_ready
	signal cmd_mux_009_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_009:src_channel -> usb_rst_s1_agent:cp_channel
	signal cmd_mux_009_src_startofpacket                                                      : std_logic;                      -- cmd_mux_009:src_startofpacket -> usb_rst_s1_agent:cp_startofpacket
	signal cmd_mux_009_src_endofpacket                                                        : std_logic;                      -- cmd_mux_009:src_endofpacket -> usb_rst_s1_agent:cp_endofpacket
	signal hex_digits_pio_s1_agent_m0_readdata                                                : std_logic_vector(31 downto 0);  -- hex_digits_pio_s1_translator:uav_readdata -> hex_digits_pio_s1_agent:m0_readdata
	signal hex_digits_pio_s1_agent_m0_waitrequest                                             : std_logic;                      -- hex_digits_pio_s1_translator:uav_waitrequest -> hex_digits_pio_s1_agent:m0_waitrequest
	signal hex_digits_pio_s1_agent_m0_debugaccess                                             : std_logic;                      -- hex_digits_pio_s1_agent:m0_debugaccess -> hex_digits_pio_s1_translator:uav_debugaccess
	signal hex_digits_pio_s1_agent_m0_address                                                 : std_logic_vector(27 downto 0);  -- hex_digits_pio_s1_agent:m0_address -> hex_digits_pio_s1_translator:uav_address
	signal hex_digits_pio_s1_agent_m0_byteenable                                              : std_logic_vector(3 downto 0);   -- hex_digits_pio_s1_agent:m0_byteenable -> hex_digits_pio_s1_translator:uav_byteenable
	signal hex_digits_pio_s1_agent_m0_read                                                    : std_logic;                      -- hex_digits_pio_s1_agent:m0_read -> hex_digits_pio_s1_translator:uav_read
	signal hex_digits_pio_s1_agent_m0_readdatavalid                                           : std_logic;                      -- hex_digits_pio_s1_translator:uav_readdatavalid -> hex_digits_pio_s1_agent:m0_readdatavalid
	signal hex_digits_pio_s1_agent_m0_lock                                                    : std_logic;                      -- hex_digits_pio_s1_agent:m0_lock -> hex_digits_pio_s1_translator:uav_lock
	signal hex_digits_pio_s1_agent_m0_writedata                                               : std_logic_vector(31 downto 0);  -- hex_digits_pio_s1_agent:m0_writedata -> hex_digits_pio_s1_translator:uav_writedata
	signal hex_digits_pio_s1_agent_m0_write                                                   : std_logic;                      -- hex_digits_pio_s1_agent:m0_write -> hex_digits_pio_s1_translator:uav_write
	signal hex_digits_pio_s1_agent_m0_burstcount                                              : std_logic_vector(2 downto 0);   -- hex_digits_pio_s1_agent:m0_burstcount -> hex_digits_pio_s1_translator:uav_burstcount
	signal hex_digits_pio_s1_agent_rf_source_valid                                            : std_logic;                      -- hex_digits_pio_s1_agent:rf_source_valid -> hex_digits_pio_s1_agent_rsp_fifo:in_valid
	signal hex_digits_pio_s1_agent_rf_source_data                                             : std_logic_vector(106 downto 0); -- hex_digits_pio_s1_agent:rf_source_data -> hex_digits_pio_s1_agent_rsp_fifo:in_data
	signal hex_digits_pio_s1_agent_rf_source_ready                                            : std_logic;                      -- hex_digits_pio_s1_agent_rsp_fifo:in_ready -> hex_digits_pio_s1_agent:rf_source_ready
	signal hex_digits_pio_s1_agent_rf_source_startofpacket                                    : std_logic;                      -- hex_digits_pio_s1_agent:rf_source_startofpacket -> hex_digits_pio_s1_agent_rsp_fifo:in_startofpacket
	signal hex_digits_pio_s1_agent_rf_source_endofpacket                                      : std_logic;                      -- hex_digits_pio_s1_agent:rf_source_endofpacket -> hex_digits_pio_s1_agent_rsp_fifo:in_endofpacket
	signal hex_digits_pio_s1_agent_rsp_fifo_out_valid                                         : std_logic;                      -- hex_digits_pio_s1_agent_rsp_fifo:out_valid -> hex_digits_pio_s1_agent:rf_sink_valid
	signal hex_digits_pio_s1_agent_rsp_fifo_out_data                                          : std_logic_vector(106 downto 0); -- hex_digits_pio_s1_agent_rsp_fifo:out_data -> hex_digits_pio_s1_agent:rf_sink_data
	signal hex_digits_pio_s1_agent_rsp_fifo_out_ready                                         : std_logic;                      -- hex_digits_pio_s1_agent:rf_sink_ready -> hex_digits_pio_s1_agent_rsp_fifo:out_ready
	signal hex_digits_pio_s1_agent_rsp_fifo_out_startofpacket                                 : std_logic;                      -- hex_digits_pio_s1_agent_rsp_fifo:out_startofpacket -> hex_digits_pio_s1_agent:rf_sink_startofpacket
	signal hex_digits_pio_s1_agent_rsp_fifo_out_endofpacket                                   : std_logic;                      -- hex_digits_pio_s1_agent_rsp_fifo:out_endofpacket -> hex_digits_pio_s1_agent:rf_sink_endofpacket
	signal cmd_mux_010_src_valid                                                              : std_logic;                      -- cmd_mux_010:src_valid -> hex_digits_pio_s1_agent:cp_valid
	signal cmd_mux_010_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_010:src_data -> hex_digits_pio_s1_agent:cp_data
	signal cmd_mux_010_src_ready                                                              : std_logic;                      -- hex_digits_pio_s1_agent:cp_ready -> cmd_mux_010:src_ready
	signal cmd_mux_010_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_010:src_channel -> hex_digits_pio_s1_agent:cp_channel
	signal cmd_mux_010_src_startofpacket                                                      : std_logic;                      -- cmd_mux_010:src_startofpacket -> hex_digits_pio_s1_agent:cp_startofpacket
	signal cmd_mux_010_src_endofpacket                                                        : std_logic;                      -- cmd_mux_010:src_endofpacket -> hex_digits_pio_s1_agent:cp_endofpacket
	signal leds_pio_s1_agent_m0_readdata                                                      : std_logic_vector(31 downto 0);  -- leds_pio_s1_translator:uav_readdata -> leds_pio_s1_agent:m0_readdata
	signal leds_pio_s1_agent_m0_waitrequest                                                   : std_logic;                      -- leds_pio_s1_translator:uav_waitrequest -> leds_pio_s1_agent:m0_waitrequest
	signal leds_pio_s1_agent_m0_debugaccess                                                   : std_logic;                      -- leds_pio_s1_agent:m0_debugaccess -> leds_pio_s1_translator:uav_debugaccess
	signal leds_pio_s1_agent_m0_address                                                       : std_logic_vector(27 downto 0);  -- leds_pio_s1_agent:m0_address -> leds_pio_s1_translator:uav_address
	signal leds_pio_s1_agent_m0_byteenable                                                    : std_logic_vector(3 downto 0);   -- leds_pio_s1_agent:m0_byteenable -> leds_pio_s1_translator:uav_byteenable
	signal leds_pio_s1_agent_m0_read                                                          : std_logic;                      -- leds_pio_s1_agent:m0_read -> leds_pio_s1_translator:uav_read
	signal leds_pio_s1_agent_m0_readdatavalid                                                 : std_logic;                      -- leds_pio_s1_translator:uav_readdatavalid -> leds_pio_s1_agent:m0_readdatavalid
	signal leds_pio_s1_agent_m0_lock                                                          : std_logic;                      -- leds_pio_s1_agent:m0_lock -> leds_pio_s1_translator:uav_lock
	signal leds_pio_s1_agent_m0_writedata                                                     : std_logic_vector(31 downto 0);  -- leds_pio_s1_agent:m0_writedata -> leds_pio_s1_translator:uav_writedata
	signal leds_pio_s1_agent_m0_write                                                         : std_logic;                      -- leds_pio_s1_agent:m0_write -> leds_pio_s1_translator:uav_write
	signal leds_pio_s1_agent_m0_burstcount                                                    : std_logic_vector(2 downto 0);   -- leds_pio_s1_agent:m0_burstcount -> leds_pio_s1_translator:uav_burstcount
	signal leds_pio_s1_agent_rf_source_valid                                                  : std_logic;                      -- leds_pio_s1_agent:rf_source_valid -> leds_pio_s1_agent_rsp_fifo:in_valid
	signal leds_pio_s1_agent_rf_source_data                                                   : std_logic_vector(106 downto 0); -- leds_pio_s1_agent:rf_source_data -> leds_pio_s1_agent_rsp_fifo:in_data
	signal leds_pio_s1_agent_rf_source_ready                                                  : std_logic;                      -- leds_pio_s1_agent_rsp_fifo:in_ready -> leds_pio_s1_agent:rf_source_ready
	signal leds_pio_s1_agent_rf_source_startofpacket                                          : std_logic;                      -- leds_pio_s1_agent:rf_source_startofpacket -> leds_pio_s1_agent_rsp_fifo:in_startofpacket
	signal leds_pio_s1_agent_rf_source_endofpacket                                            : std_logic;                      -- leds_pio_s1_agent:rf_source_endofpacket -> leds_pio_s1_agent_rsp_fifo:in_endofpacket
	signal leds_pio_s1_agent_rsp_fifo_out_valid                                               : std_logic;                      -- leds_pio_s1_agent_rsp_fifo:out_valid -> leds_pio_s1_agent:rf_sink_valid
	signal leds_pio_s1_agent_rsp_fifo_out_data                                                : std_logic_vector(106 downto 0); -- leds_pio_s1_agent_rsp_fifo:out_data -> leds_pio_s1_agent:rf_sink_data
	signal leds_pio_s1_agent_rsp_fifo_out_ready                                               : std_logic;                      -- leds_pio_s1_agent:rf_sink_ready -> leds_pio_s1_agent_rsp_fifo:out_ready
	signal leds_pio_s1_agent_rsp_fifo_out_startofpacket                                       : std_logic;                      -- leds_pio_s1_agent_rsp_fifo:out_startofpacket -> leds_pio_s1_agent:rf_sink_startofpacket
	signal leds_pio_s1_agent_rsp_fifo_out_endofpacket                                         : std_logic;                      -- leds_pio_s1_agent_rsp_fifo:out_endofpacket -> leds_pio_s1_agent:rf_sink_endofpacket
	signal cmd_mux_011_src_valid                                                              : std_logic;                      -- cmd_mux_011:src_valid -> leds_pio_s1_agent:cp_valid
	signal cmd_mux_011_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_011:src_data -> leds_pio_s1_agent:cp_data
	signal cmd_mux_011_src_ready                                                              : std_logic;                      -- leds_pio_s1_agent:cp_ready -> cmd_mux_011:src_ready
	signal cmd_mux_011_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_011:src_channel -> leds_pio_s1_agent:cp_channel
	signal cmd_mux_011_src_startofpacket                                                      : std_logic;                      -- cmd_mux_011:src_startofpacket -> leds_pio_s1_agent:cp_startofpacket
	signal cmd_mux_011_src_endofpacket                                                        : std_logic;                      -- cmd_mux_011:src_endofpacket -> leds_pio_s1_agent:cp_endofpacket
	signal key_s1_agent_m0_readdata                                                           : std_logic_vector(31 downto 0);  -- key_s1_translator:uav_readdata -> key_s1_agent:m0_readdata
	signal key_s1_agent_m0_waitrequest                                                        : std_logic;                      -- key_s1_translator:uav_waitrequest -> key_s1_agent:m0_waitrequest
	signal key_s1_agent_m0_debugaccess                                                        : std_logic;                      -- key_s1_agent:m0_debugaccess -> key_s1_translator:uav_debugaccess
	signal key_s1_agent_m0_address                                                            : std_logic_vector(27 downto 0);  -- key_s1_agent:m0_address -> key_s1_translator:uav_address
	signal key_s1_agent_m0_byteenable                                                         : std_logic_vector(3 downto 0);   -- key_s1_agent:m0_byteenable -> key_s1_translator:uav_byteenable
	signal key_s1_agent_m0_read                                                               : std_logic;                      -- key_s1_agent:m0_read -> key_s1_translator:uav_read
	signal key_s1_agent_m0_readdatavalid                                                      : std_logic;                      -- key_s1_translator:uav_readdatavalid -> key_s1_agent:m0_readdatavalid
	signal key_s1_agent_m0_lock                                                               : std_logic;                      -- key_s1_agent:m0_lock -> key_s1_translator:uav_lock
	signal key_s1_agent_m0_writedata                                                          : std_logic_vector(31 downto 0);  -- key_s1_agent:m0_writedata -> key_s1_translator:uav_writedata
	signal key_s1_agent_m0_write                                                              : std_logic;                      -- key_s1_agent:m0_write -> key_s1_translator:uav_write
	signal key_s1_agent_m0_burstcount                                                         : std_logic_vector(2 downto 0);   -- key_s1_agent:m0_burstcount -> key_s1_translator:uav_burstcount
	signal key_s1_agent_rf_source_valid                                                       : std_logic;                      -- key_s1_agent:rf_source_valid -> key_s1_agent_rsp_fifo:in_valid
	signal key_s1_agent_rf_source_data                                                        : std_logic_vector(106 downto 0); -- key_s1_agent:rf_source_data -> key_s1_agent_rsp_fifo:in_data
	signal key_s1_agent_rf_source_ready                                                       : std_logic;                      -- key_s1_agent_rsp_fifo:in_ready -> key_s1_agent:rf_source_ready
	signal key_s1_agent_rf_source_startofpacket                                               : std_logic;                      -- key_s1_agent:rf_source_startofpacket -> key_s1_agent_rsp_fifo:in_startofpacket
	signal key_s1_agent_rf_source_endofpacket                                                 : std_logic;                      -- key_s1_agent:rf_source_endofpacket -> key_s1_agent_rsp_fifo:in_endofpacket
	signal key_s1_agent_rsp_fifo_out_valid                                                    : std_logic;                      -- key_s1_agent_rsp_fifo:out_valid -> key_s1_agent:rf_sink_valid
	signal key_s1_agent_rsp_fifo_out_data                                                     : std_logic_vector(106 downto 0); -- key_s1_agent_rsp_fifo:out_data -> key_s1_agent:rf_sink_data
	signal key_s1_agent_rsp_fifo_out_ready                                                    : std_logic;                      -- key_s1_agent:rf_sink_ready -> key_s1_agent_rsp_fifo:out_ready
	signal key_s1_agent_rsp_fifo_out_startofpacket                                            : std_logic;                      -- key_s1_agent_rsp_fifo:out_startofpacket -> key_s1_agent:rf_sink_startofpacket
	signal key_s1_agent_rsp_fifo_out_endofpacket                                              : std_logic;                      -- key_s1_agent_rsp_fifo:out_endofpacket -> key_s1_agent:rf_sink_endofpacket
	signal cmd_mux_012_src_valid                                                              : std_logic;                      -- cmd_mux_012:src_valid -> key_s1_agent:cp_valid
	signal cmd_mux_012_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_012:src_data -> key_s1_agent:cp_data
	signal cmd_mux_012_src_ready                                                              : std_logic;                      -- key_s1_agent:cp_ready -> cmd_mux_012:src_ready
	signal cmd_mux_012_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_012:src_channel -> key_s1_agent:cp_channel
	signal cmd_mux_012_src_startofpacket                                                      : std_logic;                      -- cmd_mux_012:src_startofpacket -> key_s1_agent:cp_startofpacket
	signal cmd_mux_012_src_endofpacket                                                        : std_logic;                      -- cmd_mux_012:src_endofpacket -> key_s1_agent:cp_endofpacket
	signal timer_0_s1_agent_m0_readdata                                                       : std_logic_vector(31 downto 0);  -- timer_0_s1_translator:uav_readdata -> timer_0_s1_agent:m0_readdata
	signal timer_0_s1_agent_m0_waitrequest                                                    : std_logic;                      -- timer_0_s1_translator:uav_waitrequest -> timer_0_s1_agent:m0_waitrequest
	signal timer_0_s1_agent_m0_debugaccess                                                    : std_logic;                      -- timer_0_s1_agent:m0_debugaccess -> timer_0_s1_translator:uav_debugaccess
	signal timer_0_s1_agent_m0_address                                                        : std_logic_vector(27 downto 0);  -- timer_0_s1_agent:m0_address -> timer_0_s1_translator:uav_address
	signal timer_0_s1_agent_m0_byteenable                                                     : std_logic_vector(3 downto 0);   -- timer_0_s1_agent:m0_byteenable -> timer_0_s1_translator:uav_byteenable
	signal timer_0_s1_agent_m0_read                                                           : std_logic;                      -- timer_0_s1_agent:m0_read -> timer_0_s1_translator:uav_read
	signal timer_0_s1_agent_m0_readdatavalid                                                  : std_logic;                      -- timer_0_s1_translator:uav_readdatavalid -> timer_0_s1_agent:m0_readdatavalid
	signal timer_0_s1_agent_m0_lock                                                           : std_logic;                      -- timer_0_s1_agent:m0_lock -> timer_0_s1_translator:uav_lock
	signal timer_0_s1_agent_m0_writedata                                                      : std_logic_vector(31 downto 0);  -- timer_0_s1_agent:m0_writedata -> timer_0_s1_translator:uav_writedata
	signal timer_0_s1_agent_m0_write                                                          : std_logic;                      -- timer_0_s1_agent:m0_write -> timer_0_s1_translator:uav_write
	signal timer_0_s1_agent_m0_burstcount                                                     : std_logic_vector(2 downto 0);   -- timer_0_s1_agent:m0_burstcount -> timer_0_s1_translator:uav_burstcount
	signal timer_0_s1_agent_rf_source_valid                                                   : std_logic;                      -- timer_0_s1_agent:rf_source_valid -> timer_0_s1_agent_rsp_fifo:in_valid
	signal timer_0_s1_agent_rf_source_data                                                    : std_logic_vector(106 downto 0); -- timer_0_s1_agent:rf_source_data -> timer_0_s1_agent_rsp_fifo:in_data
	signal timer_0_s1_agent_rf_source_ready                                                   : std_logic;                      -- timer_0_s1_agent_rsp_fifo:in_ready -> timer_0_s1_agent:rf_source_ready
	signal timer_0_s1_agent_rf_source_startofpacket                                           : std_logic;                      -- timer_0_s1_agent:rf_source_startofpacket -> timer_0_s1_agent_rsp_fifo:in_startofpacket
	signal timer_0_s1_agent_rf_source_endofpacket                                             : std_logic;                      -- timer_0_s1_agent:rf_source_endofpacket -> timer_0_s1_agent_rsp_fifo:in_endofpacket
	signal timer_0_s1_agent_rsp_fifo_out_valid                                                : std_logic;                      -- timer_0_s1_agent_rsp_fifo:out_valid -> timer_0_s1_agent:rf_sink_valid
	signal timer_0_s1_agent_rsp_fifo_out_data                                                 : std_logic_vector(106 downto 0); -- timer_0_s1_agent_rsp_fifo:out_data -> timer_0_s1_agent:rf_sink_data
	signal timer_0_s1_agent_rsp_fifo_out_ready                                                : std_logic;                      -- timer_0_s1_agent:rf_sink_ready -> timer_0_s1_agent_rsp_fifo:out_ready
	signal timer_0_s1_agent_rsp_fifo_out_startofpacket                                        : std_logic;                      -- timer_0_s1_agent_rsp_fifo:out_startofpacket -> timer_0_s1_agent:rf_sink_startofpacket
	signal timer_0_s1_agent_rsp_fifo_out_endofpacket                                          : std_logic;                      -- timer_0_s1_agent_rsp_fifo:out_endofpacket -> timer_0_s1_agent:rf_sink_endofpacket
	signal cmd_mux_013_src_valid                                                              : std_logic;                      -- cmd_mux_013:src_valid -> timer_0_s1_agent:cp_valid
	signal cmd_mux_013_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_013:src_data -> timer_0_s1_agent:cp_data
	signal cmd_mux_013_src_ready                                                              : std_logic;                      -- timer_0_s1_agent:cp_ready -> cmd_mux_013:src_ready
	signal cmd_mux_013_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_013:src_channel -> timer_0_s1_agent:cp_channel
	signal cmd_mux_013_src_startofpacket                                                      : std_logic;                      -- cmd_mux_013:src_startofpacket -> timer_0_s1_agent:cp_startofpacket
	signal cmd_mux_013_src_endofpacket                                                        : std_logic;                      -- cmd_mux_013:src_endofpacket -> timer_0_s1_agent:cp_endofpacket
	signal spi_0_spi_control_port_agent_m0_readdata                                           : std_logic_vector(31 downto 0);  -- spi_0_spi_control_port_translator:uav_readdata -> spi_0_spi_control_port_agent:m0_readdata
	signal spi_0_spi_control_port_agent_m0_waitrequest                                        : std_logic;                      -- spi_0_spi_control_port_translator:uav_waitrequest -> spi_0_spi_control_port_agent:m0_waitrequest
	signal spi_0_spi_control_port_agent_m0_debugaccess                                        : std_logic;                      -- spi_0_spi_control_port_agent:m0_debugaccess -> spi_0_spi_control_port_translator:uav_debugaccess
	signal spi_0_spi_control_port_agent_m0_address                                            : std_logic_vector(27 downto 0);  -- spi_0_spi_control_port_agent:m0_address -> spi_0_spi_control_port_translator:uav_address
	signal spi_0_spi_control_port_agent_m0_byteenable                                         : std_logic_vector(3 downto 0);   -- spi_0_spi_control_port_agent:m0_byteenable -> spi_0_spi_control_port_translator:uav_byteenable
	signal spi_0_spi_control_port_agent_m0_read                                               : std_logic;                      -- spi_0_spi_control_port_agent:m0_read -> spi_0_spi_control_port_translator:uav_read
	signal spi_0_spi_control_port_agent_m0_readdatavalid                                      : std_logic;                      -- spi_0_spi_control_port_translator:uav_readdatavalid -> spi_0_spi_control_port_agent:m0_readdatavalid
	signal spi_0_spi_control_port_agent_m0_lock                                               : std_logic;                      -- spi_0_spi_control_port_agent:m0_lock -> spi_0_spi_control_port_translator:uav_lock
	signal spi_0_spi_control_port_agent_m0_writedata                                          : std_logic_vector(31 downto 0);  -- spi_0_spi_control_port_agent:m0_writedata -> spi_0_spi_control_port_translator:uav_writedata
	signal spi_0_spi_control_port_agent_m0_write                                              : std_logic;                      -- spi_0_spi_control_port_agent:m0_write -> spi_0_spi_control_port_translator:uav_write
	signal spi_0_spi_control_port_agent_m0_burstcount                                         : std_logic_vector(2 downto 0);   -- spi_0_spi_control_port_agent:m0_burstcount -> spi_0_spi_control_port_translator:uav_burstcount
	signal spi_0_spi_control_port_agent_rf_source_valid                                       : std_logic;                      -- spi_0_spi_control_port_agent:rf_source_valid -> spi_0_spi_control_port_agent_rsp_fifo:in_valid
	signal spi_0_spi_control_port_agent_rf_source_data                                        : std_logic_vector(106 downto 0); -- spi_0_spi_control_port_agent:rf_source_data -> spi_0_spi_control_port_agent_rsp_fifo:in_data
	signal spi_0_spi_control_port_agent_rf_source_ready                                       : std_logic;                      -- spi_0_spi_control_port_agent_rsp_fifo:in_ready -> spi_0_spi_control_port_agent:rf_source_ready
	signal spi_0_spi_control_port_agent_rf_source_startofpacket                               : std_logic;                      -- spi_0_spi_control_port_agent:rf_source_startofpacket -> spi_0_spi_control_port_agent_rsp_fifo:in_startofpacket
	signal spi_0_spi_control_port_agent_rf_source_endofpacket                                 : std_logic;                      -- spi_0_spi_control_port_agent:rf_source_endofpacket -> spi_0_spi_control_port_agent_rsp_fifo:in_endofpacket
	signal spi_0_spi_control_port_agent_rsp_fifo_out_valid                                    : std_logic;                      -- spi_0_spi_control_port_agent_rsp_fifo:out_valid -> spi_0_spi_control_port_agent:rf_sink_valid
	signal spi_0_spi_control_port_agent_rsp_fifo_out_data                                     : std_logic_vector(106 downto 0); -- spi_0_spi_control_port_agent_rsp_fifo:out_data -> spi_0_spi_control_port_agent:rf_sink_data
	signal spi_0_spi_control_port_agent_rsp_fifo_out_ready                                    : std_logic;                      -- spi_0_spi_control_port_agent:rf_sink_ready -> spi_0_spi_control_port_agent_rsp_fifo:out_ready
	signal spi_0_spi_control_port_agent_rsp_fifo_out_startofpacket                            : std_logic;                      -- spi_0_spi_control_port_agent_rsp_fifo:out_startofpacket -> spi_0_spi_control_port_agent:rf_sink_startofpacket
	signal spi_0_spi_control_port_agent_rsp_fifo_out_endofpacket                              : std_logic;                      -- spi_0_spi_control_port_agent_rsp_fifo:out_endofpacket -> spi_0_spi_control_port_agent:rf_sink_endofpacket
	signal cmd_mux_014_src_valid                                                              : std_logic;                      -- cmd_mux_014:src_valid -> spi_0_spi_control_port_agent:cp_valid
	signal cmd_mux_014_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_014:src_data -> spi_0_spi_control_port_agent:cp_data
	signal cmd_mux_014_src_ready                                                              : std_logic;                      -- spi_0_spi_control_port_agent:cp_ready -> cmd_mux_014:src_ready
	signal cmd_mux_014_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_014:src_channel -> spi_0_spi_control_port_agent:cp_channel
	signal cmd_mux_014_src_startofpacket                                                      : std_logic;                      -- cmd_mux_014:src_startofpacket -> spi_0_spi_control_port_agent:cp_startofpacket
	signal cmd_mux_014_src_endofpacket                                                        : std_logic;                      -- cmd_mux_014:src_endofpacket -> spi_0_spi_control_port_agent:cp_endofpacket
	signal nios2_gen2_0_data_master_agent_cp_valid                                            : std_logic;                      -- nios2_gen2_0_data_master_agent:cp_valid -> router:sink_valid
	signal nios2_gen2_0_data_master_agent_cp_data                                             : std_logic_vector(105 downto 0); -- nios2_gen2_0_data_master_agent:cp_data -> router:sink_data
	signal nios2_gen2_0_data_master_agent_cp_ready                                            : std_logic;                      -- router:sink_ready -> nios2_gen2_0_data_master_agent:cp_ready
	signal nios2_gen2_0_data_master_agent_cp_startofpacket                                    : std_logic;                      -- nios2_gen2_0_data_master_agent:cp_startofpacket -> router:sink_startofpacket
	signal nios2_gen2_0_data_master_agent_cp_endofpacket                                      : std_logic;                      -- nios2_gen2_0_data_master_agent:cp_endofpacket -> router:sink_endofpacket
	signal router_src_valid                                                                   : std_logic;                      -- router:src_valid -> cmd_demux:sink_valid
	signal router_src_data                                                                    : std_logic_vector(105 downto 0); -- router:src_data -> cmd_demux:sink_data
	signal router_src_ready                                                                   : std_logic;                      -- cmd_demux:sink_ready -> router:src_ready
	signal router_src_channel                                                                 : std_logic_vector(14 downto 0);  -- router:src_channel -> cmd_demux:sink_channel
	signal router_src_startofpacket                                                           : std_logic;                      -- router:src_startofpacket -> cmd_demux:sink_startofpacket
	signal router_src_endofpacket                                                             : std_logic;                      -- router:src_endofpacket -> cmd_demux:sink_endofpacket
	signal nios2_gen2_0_instruction_master_agent_cp_valid                                     : std_logic;                      -- nios2_gen2_0_instruction_master_agent:cp_valid -> router_001:sink_valid
	signal nios2_gen2_0_instruction_master_agent_cp_data                                      : std_logic_vector(105 downto 0); -- nios2_gen2_0_instruction_master_agent:cp_data -> router_001:sink_data
	signal nios2_gen2_0_instruction_master_agent_cp_ready                                     : std_logic;                      -- router_001:sink_ready -> nios2_gen2_0_instruction_master_agent:cp_ready
	signal nios2_gen2_0_instruction_master_agent_cp_startofpacket                             : std_logic;                      -- nios2_gen2_0_instruction_master_agent:cp_startofpacket -> router_001:sink_startofpacket
	signal nios2_gen2_0_instruction_master_agent_cp_endofpacket                               : std_logic;                      -- nios2_gen2_0_instruction_master_agent:cp_endofpacket -> router_001:sink_endofpacket
	signal router_001_src_valid                                                               : std_logic;                      -- router_001:src_valid -> cmd_demux_001:sink_valid
	signal router_001_src_data                                                                : std_logic_vector(105 downto 0); -- router_001:src_data -> cmd_demux_001:sink_data
	signal router_001_src_ready                                                               : std_logic;                      -- cmd_demux_001:sink_ready -> router_001:src_ready
	signal router_001_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_001:src_channel -> cmd_demux_001:sink_channel
	signal router_001_src_startofpacket                                                       : std_logic;                      -- router_001:src_startofpacket -> cmd_demux_001:sink_startofpacket
	signal router_001_src_endofpacket                                                         : std_logic;                      -- router_001:src_endofpacket -> cmd_demux_001:sink_endofpacket
	signal jtag_uart_0_avalon_jtag_slave_agent_rp_valid                                       : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rp_valid -> router_002:sink_valid
	signal jtag_uart_0_avalon_jtag_slave_agent_rp_data                                        : std_logic_vector(105 downto 0); -- jtag_uart_0_avalon_jtag_slave_agent:rp_data -> router_002:sink_data
	signal jtag_uart_0_avalon_jtag_slave_agent_rp_ready                                       : std_logic;                      -- router_002:sink_ready -> jtag_uart_0_avalon_jtag_slave_agent:rp_ready
	signal jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket                               : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rp_startofpacket -> router_002:sink_startofpacket
	signal jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket                                 : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rp_endofpacket -> router_002:sink_endofpacket
	signal router_002_src_valid                                                               : std_logic;                      -- router_002:src_valid -> rsp_demux:sink_valid
	signal router_002_src_data                                                                : std_logic_vector(105 downto 0); -- router_002:src_data -> rsp_demux:sink_data
	signal router_002_src_ready                                                               : std_logic;                      -- rsp_demux:sink_ready -> router_002:src_ready
	signal router_002_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_002:src_channel -> rsp_demux:sink_channel
	signal router_002_src_startofpacket                                                       : std_logic;                      -- router_002:src_startofpacket -> rsp_demux:sink_startofpacket
	signal router_002_src_endofpacket                                                         : std_logic;                      -- router_002:src_endofpacket -> rsp_demux:sink_endofpacket
	signal sysid_qsys_0_control_slave_agent_rp_valid                                          : std_logic;                      -- sysid_qsys_0_control_slave_agent:rp_valid -> router_003:sink_valid
	signal sysid_qsys_0_control_slave_agent_rp_data                                           : std_logic_vector(105 downto 0); -- sysid_qsys_0_control_slave_agent:rp_data -> router_003:sink_data
	signal sysid_qsys_0_control_slave_agent_rp_ready                                          : std_logic;                      -- router_003:sink_ready -> sysid_qsys_0_control_slave_agent:rp_ready
	signal sysid_qsys_0_control_slave_agent_rp_startofpacket                                  : std_logic;                      -- sysid_qsys_0_control_slave_agent:rp_startofpacket -> router_003:sink_startofpacket
	signal sysid_qsys_0_control_slave_agent_rp_endofpacket                                    : std_logic;                      -- sysid_qsys_0_control_slave_agent:rp_endofpacket -> router_003:sink_endofpacket
	signal router_003_src_valid                                                               : std_logic;                      -- router_003:src_valid -> rsp_demux_001:sink_valid
	signal router_003_src_data                                                                : std_logic_vector(105 downto 0); -- router_003:src_data -> rsp_demux_001:sink_data
	signal router_003_src_ready                                                               : std_logic;                      -- rsp_demux_001:sink_ready -> router_003:src_ready
	signal router_003_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_003:src_channel -> rsp_demux_001:sink_channel
	signal router_003_src_startofpacket                                                       : std_logic;                      -- router_003:src_startofpacket -> rsp_demux_001:sink_startofpacket
	signal router_003_src_endofpacket                                                         : std_logic;                      -- router_003:src_endofpacket -> rsp_demux_001:sink_endofpacket
	signal nios2_gen2_0_debug_mem_slave_agent_rp_valid                                        : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rp_valid -> router_004:sink_valid
	signal nios2_gen2_0_debug_mem_slave_agent_rp_data                                         : std_logic_vector(105 downto 0); -- nios2_gen2_0_debug_mem_slave_agent:rp_data -> router_004:sink_data
	signal nios2_gen2_0_debug_mem_slave_agent_rp_ready                                        : std_logic;                      -- router_004:sink_ready -> nios2_gen2_0_debug_mem_slave_agent:rp_ready
	signal nios2_gen2_0_debug_mem_slave_agent_rp_startofpacket                                : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rp_startofpacket -> router_004:sink_startofpacket
	signal nios2_gen2_0_debug_mem_slave_agent_rp_endofpacket                                  : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rp_endofpacket -> router_004:sink_endofpacket
	signal router_004_src_valid                                                               : std_logic;                      -- router_004:src_valid -> rsp_demux_002:sink_valid
	signal router_004_src_data                                                                : std_logic_vector(105 downto 0); -- router_004:src_data -> rsp_demux_002:sink_data
	signal router_004_src_ready                                                               : std_logic;                      -- rsp_demux_002:sink_ready -> router_004:src_ready
	signal router_004_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_004:src_channel -> rsp_demux_002:sink_channel
	signal router_004_src_startofpacket                                                       : std_logic;                      -- router_004:src_startofpacket -> rsp_demux_002:sink_startofpacket
	signal router_004_src_endofpacket                                                         : std_logic;                      -- router_004:src_endofpacket -> rsp_demux_002:sink_endofpacket
	signal sdram_pll_pll_slave_agent_rp_valid                                                 : std_logic;                      -- sdram_pll_pll_slave_agent:rp_valid -> router_005:sink_valid
	signal sdram_pll_pll_slave_agent_rp_data                                                  : std_logic_vector(105 downto 0); -- sdram_pll_pll_slave_agent:rp_data -> router_005:sink_data
	signal sdram_pll_pll_slave_agent_rp_ready                                                 : std_logic;                      -- router_005:sink_ready -> sdram_pll_pll_slave_agent:rp_ready
	signal sdram_pll_pll_slave_agent_rp_startofpacket                                         : std_logic;                      -- sdram_pll_pll_slave_agent:rp_startofpacket -> router_005:sink_startofpacket
	signal sdram_pll_pll_slave_agent_rp_endofpacket                                           : std_logic;                      -- sdram_pll_pll_slave_agent:rp_endofpacket -> router_005:sink_endofpacket
	signal router_005_src_valid                                                               : std_logic;                      -- router_005:src_valid -> rsp_demux_003:sink_valid
	signal router_005_src_data                                                                : std_logic_vector(105 downto 0); -- router_005:src_data -> rsp_demux_003:sink_data
	signal router_005_src_ready                                                               : std_logic;                      -- rsp_demux_003:sink_ready -> router_005:src_ready
	signal router_005_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_005:src_channel -> rsp_demux_003:sink_channel
	signal router_005_src_startofpacket                                                       : std_logic;                      -- router_005:src_startofpacket -> rsp_demux_003:sink_startofpacket
	signal router_005_src_endofpacket                                                         : std_logic;                      -- router_005:src_endofpacket -> rsp_demux_003:sink_endofpacket
	signal onchip_memory2_0_s1_agent_rp_valid                                                 : std_logic;                      -- onchip_memory2_0_s1_agent:rp_valid -> router_006:sink_valid
	signal onchip_memory2_0_s1_agent_rp_data                                                  : std_logic_vector(105 downto 0); -- onchip_memory2_0_s1_agent:rp_data -> router_006:sink_data
	signal onchip_memory2_0_s1_agent_rp_ready                                                 : std_logic;                      -- router_006:sink_ready -> onchip_memory2_0_s1_agent:rp_ready
	signal onchip_memory2_0_s1_agent_rp_startofpacket                                         : std_logic;                      -- onchip_memory2_0_s1_agent:rp_startofpacket -> router_006:sink_startofpacket
	signal onchip_memory2_0_s1_agent_rp_endofpacket                                           : std_logic;                      -- onchip_memory2_0_s1_agent:rp_endofpacket -> router_006:sink_endofpacket
	signal router_006_src_valid                                                               : std_logic;                      -- router_006:src_valid -> rsp_demux_004:sink_valid
	signal router_006_src_data                                                                : std_logic_vector(105 downto 0); -- router_006:src_data -> rsp_demux_004:sink_data
	signal router_006_src_ready                                                               : std_logic;                      -- rsp_demux_004:sink_ready -> router_006:src_ready
	signal router_006_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_006:src_channel -> rsp_demux_004:sink_channel
	signal router_006_src_startofpacket                                                       : std_logic;                      -- router_006:src_startofpacket -> rsp_demux_004:sink_startofpacket
	signal router_006_src_endofpacket                                                         : std_logic;                      -- router_006:src_endofpacket -> rsp_demux_004:sink_endofpacket
	signal sdram_s1_agent_rp_valid                                                            : std_logic;                      -- sdram_s1_agent:rp_valid -> router_007:sink_valid
	signal sdram_s1_agent_rp_data                                                             : std_logic_vector(87 downto 0);  -- sdram_s1_agent:rp_data -> router_007:sink_data
	signal sdram_s1_agent_rp_ready                                                            : std_logic;                      -- router_007:sink_ready -> sdram_s1_agent:rp_ready
	signal sdram_s1_agent_rp_startofpacket                                                    : std_logic;                      -- sdram_s1_agent:rp_startofpacket -> router_007:sink_startofpacket
	signal sdram_s1_agent_rp_endofpacket                                                      : std_logic;                      -- sdram_s1_agent:rp_endofpacket -> router_007:sink_endofpacket
	signal keycode_s1_agent_rp_valid                                                          : std_logic;                      -- keycode_s1_agent:rp_valid -> router_008:sink_valid
	signal keycode_s1_agent_rp_data                                                           : std_logic_vector(105 downto 0); -- keycode_s1_agent:rp_data -> router_008:sink_data
	signal keycode_s1_agent_rp_ready                                                          : std_logic;                      -- router_008:sink_ready -> keycode_s1_agent:rp_ready
	signal keycode_s1_agent_rp_startofpacket                                                  : std_logic;                      -- keycode_s1_agent:rp_startofpacket -> router_008:sink_startofpacket
	signal keycode_s1_agent_rp_endofpacket                                                    : std_logic;                      -- keycode_s1_agent:rp_endofpacket -> router_008:sink_endofpacket
	signal router_008_src_valid                                                               : std_logic;                      -- router_008:src_valid -> rsp_demux_006:sink_valid
	signal router_008_src_data                                                                : std_logic_vector(105 downto 0); -- router_008:src_data -> rsp_demux_006:sink_data
	signal router_008_src_ready                                                               : std_logic;                      -- rsp_demux_006:sink_ready -> router_008:src_ready
	signal router_008_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_008:src_channel -> rsp_demux_006:sink_channel
	signal router_008_src_startofpacket                                                       : std_logic;                      -- router_008:src_startofpacket -> rsp_demux_006:sink_startofpacket
	signal router_008_src_endofpacket                                                         : std_logic;                      -- router_008:src_endofpacket -> rsp_demux_006:sink_endofpacket
	signal usb_irq_s1_agent_rp_valid                                                          : std_logic;                      -- usb_irq_s1_agent:rp_valid -> router_009:sink_valid
	signal usb_irq_s1_agent_rp_data                                                           : std_logic_vector(105 downto 0); -- usb_irq_s1_agent:rp_data -> router_009:sink_data
	signal usb_irq_s1_agent_rp_ready                                                          : std_logic;                      -- router_009:sink_ready -> usb_irq_s1_agent:rp_ready
	signal usb_irq_s1_agent_rp_startofpacket                                                  : std_logic;                      -- usb_irq_s1_agent:rp_startofpacket -> router_009:sink_startofpacket
	signal usb_irq_s1_agent_rp_endofpacket                                                    : std_logic;                      -- usb_irq_s1_agent:rp_endofpacket -> router_009:sink_endofpacket
	signal router_009_src_valid                                                               : std_logic;                      -- router_009:src_valid -> rsp_demux_007:sink_valid
	signal router_009_src_data                                                                : std_logic_vector(105 downto 0); -- router_009:src_data -> rsp_demux_007:sink_data
	signal router_009_src_ready                                                               : std_logic;                      -- rsp_demux_007:sink_ready -> router_009:src_ready
	signal router_009_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_009:src_channel -> rsp_demux_007:sink_channel
	signal router_009_src_startofpacket                                                       : std_logic;                      -- router_009:src_startofpacket -> rsp_demux_007:sink_startofpacket
	signal router_009_src_endofpacket                                                         : std_logic;                      -- router_009:src_endofpacket -> rsp_demux_007:sink_endofpacket
	signal usb_gpx_s1_agent_rp_valid                                                          : std_logic;                      -- usb_gpx_s1_agent:rp_valid -> router_010:sink_valid
	signal usb_gpx_s1_agent_rp_data                                                           : std_logic_vector(105 downto 0); -- usb_gpx_s1_agent:rp_data -> router_010:sink_data
	signal usb_gpx_s1_agent_rp_ready                                                          : std_logic;                      -- router_010:sink_ready -> usb_gpx_s1_agent:rp_ready
	signal usb_gpx_s1_agent_rp_startofpacket                                                  : std_logic;                      -- usb_gpx_s1_agent:rp_startofpacket -> router_010:sink_startofpacket
	signal usb_gpx_s1_agent_rp_endofpacket                                                    : std_logic;                      -- usb_gpx_s1_agent:rp_endofpacket -> router_010:sink_endofpacket
	signal router_010_src_valid                                                               : std_logic;                      -- router_010:src_valid -> rsp_demux_008:sink_valid
	signal router_010_src_data                                                                : std_logic_vector(105 downto 0); -- router_010:src_data -> rsp_demux_008:sink_data
	signal router_010_src_ready                                                               : std_logic;                      -- rsp_demux_008:sink_ready -> router_010:src_ready
	signal router_010_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_010:src_channel -> rsp_demux_008:sink_channel
	signal router_010_src_startofpacket                                                       : std_logic;                      -- router_010:src_startofpacket -> rsp_demux_008:sink_startofpacket
	signal router_010_src_endofpacket                                                         : std_logic;                      -- router_010:src_endofpacket -> rsp_demux_008:sink_endofpacket
	signal usb_rst_s1_agent_rp_valid                                                          : std_logic;                      -- usb_rst_s1_agent:rp_valid -> router_011:sink_valid
	signal usb_rst_s1_agent_rp_data                                                           : std_logic_vector(105 downto 0); -- usb_rst_s1_agent:rp_data -> router_011:sink_data
	signal usb_rst_s1_agent_rp_ready                                                          : std_logic;                      -- router_011:sink_ready -> usb_rst_s1_agent:rp_ready
	signal usb_rst_s1_agent_rp_startofpacket                                                  : std_logic;                      -- usb_rst_s1_agent:rp_startofpacket -> router_011:sink_startofpacket
	signal usb_rst_s1_agent_rp_endofpacket                                                    : std_logic;                      -- usb_rst_s1_agent:rp_endofpacket -> router_011:sink_endofpacket
	signal router_011_src_valid                                                               : std_logic;                      -- router_011:src_valid -> rsp_demux_009:sink_valid
	signal router_011_src_data                                                                : std_logic_vector(105 downto 0); -- router_011:src_data -> rsp_demux_009:sink_data
	signal router_011_src_ready                                                               : std_logic;                      -- rsp_demux_009:sink_ready -> router_011:src_ready
	signal router_011_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_011:src_channel -> rsp_demux_009:sink_channel
	signal router_011_src_startofpacket                                                       : std_logic;                      -- router_011:src_startofpacket -> rsp_demux_009:sink_startofpacket
	signal router_011_src_endofpacket                                                         : std_logic;                      -- router_011:src_endofpacket -> rsp_demux_009:sink_endofpacket
	signal hex_digits_pio_s1_agent_rp_valid                                                   : std_logic;                      -- hex_digits_pio_s1_agent:rp_valid -> router_012:sink_valid
	signal hex_digits_pio_s1_agent_rp_data                                                    : std_logic_vector(105 downto 0); -- hex_digits_pio_s1_agent:rp_data -> router_012:sink_data
	signal hex_digits_pio_s1_agent_rp_ready                                                   : std_logic;                      -- router_012:sink_ready -> hex_digits_pio_s1_agent:rp_ready
	signal hex_digits_pio_s1_agent_rp_startofpacket                                           : std_logic;                      -- hex_digits_pio_s1_agent:rp_startofpacket -> router_012:sink_startofpacket
	signal hex_digits_pio_s1_agent_rp_endofpacket                                             : std_logic;                      -- hex_digits_pio_s1_agent:rp_endofpacket -> router_012:sink_endofpacket
	signal router_012_src_valid                                                               : std_logic;                      -- router_012:src_valid -> rsp_demux_010:sink_valid
	signal router_012_src_data                                                                : std_logic_vector(105 downto 0); -- router_012:src_data -> rsp_demux_010:sink_data
	signal router_012_src_ready                                                               : std_logic;                      -- rsp_demux_010:sink_ready -> router_012:src_ready
	signal router_012_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_012:src_channel -> rsp_demux_010:sink_channel
	signal router_012_src_startofpacket                                                       : std_logic;                      -- router_012:src_startofpacket -> rsp_demux_010:sink_startofpacket
	signal router_012_src_endofpacket                                                         : std_logic;                      -- router_012:src_endofpacket -> rsp_demux_010:sink_endofpacket
	signal leds_pio_s1_agent_rp_valid                                                         : std_logic;                      -- leds_pio_s1_agent:rp_valid -> router_013:sink_valid
	signal leds_pio_s1_agent_rp_data                                                          : std_logic_vector(105 downto 0); -- leds_pio_s1_agent:rp_data -> router_013:sink_data
	signal leds_pio_s1_agent_rp_ready                                                         : std_logic;                      -- router_013:sink_ready -> leds_pio_s1_agent:rp_ready
	signal leds_pio_s1_agent_rp_startofpacket                                                 : std_logic;                      -- leds_pio_s1_agent:rp_startofpacket -> router_013:sink_startofpacket
	signal leds_pio_s1_agent_rp_endofpacket                                                   : std_logic;                      -- leds_pio_s1_agent:rp_endofpacket -> router_013:sink_endofpacket
	signal router_013_src_valid                                                               : std_logic;                      -- router_013:src_valid -> rsp_demux_011:sink_valid
	signal router_013_src_data                                                                : std_logic_vector(105 downto 0); -- router_013:src_data -> rsp_demux_011:sink_data
	signal router_013_src_ready                                                               : std_logic;                      -- rsp_demux_011:sink_ready -> router_013:src_ready
	signal router_013_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_013:src_channel -> rsp_demux_011:sink_channel
	signal router_013_src_startofpacket                                                       : std_logic;                      -- router_013:src_startofpacket -> rsp_demux_011:sink_startofpacket
	signal router_013_src_endofpacket                                                         : std_logic;                      -- router_013:src_endofpacket -> rsp_demux_011:sink_endofpacket
	signal key_s1_agent_rp_valid                                                              : std_logic;                      -- key_s1_agent:rp_valid -> router_014:sink_valid
	signal key_s1_agent_rp_data                                                               : std_logic_vector(105 downto 0); -- key_s1_agent:rp_data -> router_014:sink_data
	signal key_s1_agent_rp_ready                                                              : std_logic;                      -- router_014:sink_ready -> key_s1_agent:rp_ready
	signal key_s1_agent_rp_startofpacket                                                      : std_logic;                      -- key_s1_agent:rp_startofpacket -> router_014:sink_startofpacket
	signal key_s1_agent_rp_endofpacket                                                        : std_logic;                      -- key_s1_agent:rp_endofpacket -> router_014:sink_endofpacket
	signal router_014_src_valid                                                               : std_logic;                      -- router_014:src_valid -> rsp_demux_012:sink_valid
	signal router_014_src_data                                                                : std_logic_vector(105 downto 0); -- router_014:src_data -> rsp_demux_012:sink_data
	signal router_014_src_ready                                                               : std_logic;                      -- rsp_demux_012:sink_ready -> router_014:src_ready
	signal router_014_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_014:src_channel -> rsp_demux_012:sink_channel
	signal router_014_src_startofpacket                                                       : std_logic;                      -- router_014:src_startofpacket -> rsp_demux_012:sink_startofpacket
	signal router_014_src_endofpacket                                                         : std_logic;                      -- router_014:src_endofpacket -> rsp_demux_012:sink_endofpacket
	signal timer_0_s1_agent_rp_valid                                                          : std_logic;                      -- timer_0_s1_agent:rp_valid -> router_015:sink_valid
	signal timer_0_s1_agent_rp_data                                                           : std_logic_vector(105 downto 0); -- timer_0_s1_agent:rp_data -> router_015:sink_data
	signal timer_0_s1_agent_rp_ready                                                          : std_logic;                      -- router_015:sink_ready -> timer_0_s1_agent:rp_ready
	signal timer_0_s1_agent_rp_startofpacket                                                  : std_logic;                      -- timer_0_s1_agent:rp_startofpacket -> router_015:sink_startofpacket
	signal timer_0_s1_agent_rp_endofpacket                                                    : std_logic;                      -- timer_0_s1_agent:rp_endofpacket -> router_015:sink_endofpacket
	signal router_015_src_valid                                                               : std_logic;                      -- router_015:src_valid -> rsp_demux_013:sink_valid
	signal router_015_src_data                                                                : std_logic_vector(105 downto 0); -- router_015:src_data -> rsp_demux_013:sink_data
	signal router_015_src_ready                                                               : std_logic;                      -- rsp_demux_013:sink_ready -> router_015:src_ready
	signal router_015_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_015:src_channel -> rsp_demux_013:sink_channel
	signal router_015_src_startofpacket                                                       : std_logic;                      -- router_015:src_startofpacket -> rsp_demux_013:sink_startofpacket
	signal router_015_src_endofpacket                                                         : std_logic;                      -- router_015:src_endofpacket -> rsp_demux_013:sink_endofpacket
	signal spi_0_spi_control_port_agent_rp_valid                                              : std_logic;                      -- spi_0_spi_control_port_agent:rp_valid -> router_016:sink_valid
	signal spi_0_spi_control_port_agent_rp_data                                               : std_logic_vector(105 downto 0); -- spi_0_spi_control_port_agent:rp_data -> router_016:sink_data
	signal spi_0_spi_control_port_agent_rp_ready                                              : std_logic;                      -- router_016:sink_ready -> spi_0_spi_control_port_agent:rp_ready
	signal spi_0_spi_control_port_agent_rp_startofpacket                                      : std_logic;                      -- spi_0_spi_control_port_agent:rp_startofpacket -> router_016:sink_startofpacket
	signal spi_0_spi_control_port_agent_rp_endofpacket                                        : std_logic;                      -- spi_0_spi_control_port_agent:rp_endofpacket -> router_016:sink_endofpacket
	signal router_016_src_valid                                                               : std_logic;                      -- router_016:src_valid -> rsp_demux_014:sink_valid
	signal router_016_src_data                                                                : std_logic_vector(105 downto 0); -- router_016:src_data -> rsp_demux_014:sink_data
	signal router_016_src_ready                                                               : std_logic;                      -- rsp_demux_014:sink_ready -> router_016:src_ready
	signal router_016_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_016:src_channel -> rsp_demux_014:sink_channel
	signal router_016_src_startofpacket                                                       : std_logic;                      -- router_016:src_startofpacket -> rsp_demux_014:sink_startofpacket
	signal router_016_src_endofpacket                                                         : std_logic;                      -- router_016:src_endofpacket -> rsp_demux_014:sink_endofpacket
	signal sdram_s1_burst_adapter_source0_valid                                               : std_logic;                      -- sdram_s1_burst_adapter:source0_valid -> sdram_s1_agent:cp_valid
	signal sdram_s1_burst_adapter_source0_data                                                : std_logic_vector(87 downto 0);  -- sdram_s1_burst_adapter:source0_data -> sdram_s1_agent:cp_data
	signal sdram_s1_burst_adapter_source0_ready                                               : std_logic;                      -- sdram_s1_agent:cp_ready -> sdram_s1_burst_adapter:source0_ready
	signal sdram_s1_burst_adapter_source0_channel                                             : std_logic_vector(14 downto 0);  -- sdram_s1_burst_adapter:source0_channel -> sdram_s1_agent:cp_channel
	signal sdram_s1_burst_adapter_source0_startofpacket                                       : std_logic;                      -- sdram_s1_burst_adapter:source0_startofpacket -> sdram_s1_agent:cp_startofpacket
	signal sdram_s1_burst_adapter_source0_endofpacket                                         : std_logic;                      -- sdram_s1_burst_adapter:source0_endofpacket -> sdram_s1_agent:cp_endofpacket
	signal cmd_demux_src0_valid                                                               : std_logic;                      -- cmd_demux:src0_valid -> cmd_mux:sink0_valid
	signal cmd_demux_src0_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src0_data -> cmd_mux:sink0_data
	signal cmd_demux_src0_ready                                                               : std_logic;                      -- cmd_mux:sink0_ready -> cmd_demux:src0_ready
	signal cmd_demux_src0_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src0_channel -> cmd_mux:sink0_channel
	signal cmd_demux_src0_startofpacket                                                       : std_logic;                      -- cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	signal cmd_demux_src0_endofpacket                                                         : std_logic;                      -- cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	signal cmd_demux_src1_valid                                                               : std_logic;                      -- cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
	signal cmd_demux_src1_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src1_data -> cmd_mux_001:sink0_data
	signal cmd_demux_src1_ready                                                               : std_logic;                      -- cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
	signal cmd_demux_src1_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
	signal cmd_demux_src1_startofpacket                                                       : std_logic;                      -- cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
	signal cmd_demux_src1_endofpacket                                                         : std_logic;                      -- cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
	signal cmd_demux_src2_valid                                                               : std_logic;                      -- cmd_demux:src2_valid -> cmd_mux_002:sink0_valid
	signal cmd_demux_src2_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src2_data -> cmd_mux_002:sink0_data
	signal cmd_demux_src2_ready                                                               : std_logic;                      -- cmd_mux_002:sink0_ready -> cmd_demux:src2_ready
	signal cmd_demux_src2_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src2_channel -> cmd_mux_002:sink0_channel
	signal cmd_demux_src2_startofpacket                                                       : std_logic;                      -- cmd_demux:src2_startofpacket -> cmd_mux_002:sink0_startofpacket
	signal cmd_demux_src2_endofpacket                                                         : std_logic;                      -- cmd_demux:src2_endofpacket -> cmd_mux_002:sink0_endofpacket
	signal cmd_demux_src3_valid                                                               : std_logic;                      -- cmd_demux:src3_valid -> cmd_mux_003:sink0_valid
	signal cmd_demux_src3_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src3_data -> cmd_mux_003:sink0_data
	signal cmd_demux_src3_ready                                                               : std_logic;                      -- cmd_mux_003:sink0_ready -> cmd_demux:src3_ready
	signal cmd_demux_src3_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src3_channel -> cmd_mux_003:sink0_channel
	signal cmd_demux_src3_startofpacket                                                       : std_logic;                      -- cmd_demux:src3_startofpacket -> cmd_mux_003:sink0_startofpacket
	signal cmd_demux_src3_endofpacket                                                         : std_logic;                      -- cmd_demux:src3_endofpacket -> cmd_mux_003:sink0_endofpacket
	signal cmd_demux_src4_valid                                                               : std_logic;                      -- cmd_demux:src4_valid -> cmd_mux_004:sink0_valid
	signal cmd_demux_src4_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src4_data -> cmd_mux_004:sink0_data
	signal cmd_demux_src4_ready                                                               : std_logic;                      -- cmd_mux_004:sink0_ready -> cmd_demux:src4_ready
	signal cmd_demux_src4_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src4_channel -> cmd_mux_004:sink0_channel
	signal cmd_demux_src4_startofpacket                                                       : std_logic;                      -- cmd_demux:src4_startofpacket -> cmd_mux_004:sink0_startofpacket
	signal cmd_demux_src4_endofpacket                                                         : std_logic;                      -- cmd_demux:src4_endofpacket -> cmd_mux_004:sink0_endofpacket
	signal cmd_demux_src6_valid                                                               : std_logic;                      -- cmd_demux:src6_valid -> cmd_mux_006:sink0_valid
	signal cmd_demux_src6_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src6_data -> cmd_mux_006:sink0_data
	signal cmd_demux_src6_ready                                                               : std_logic;                      -- cmd_mux_006:sink0_ready -> cmd_demux:src6_ready
	signal cmd_demux_src6_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src6_channel -> cmd_mux_006:sink0_channel
	signal cmd_demux_src6_startofpacket                                                       : std_logic;                      -- cmd_demux:src6_startofpacket -> cmd_mux_006:sink0_startofpacket
	signal cmd_demux_src6_endofpacket                                                         : std_logic;                      -- cmd_demux:src6_endofpacket -> cmd_mux_006:sink0_endofpacket
	signal cmd_demux_src7_valid                                                               : std_logic;                      -- cmd_demux:src7_valid -> cmd_mux_007:sink0_valid
	signal cmd_demux_src7_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src7_data -> cmd_mux_007:sink0_data
	signal cmd_demux_src7_ready                                                               : std_logic;                      -- cmd_mux_007:sink0_ready -> cmd_demux:src7_ready
	signal cmd_demux_src7_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src7_channel -> cmd_mux_007:sink0_channel
	signal cmd_demux_src7_startofpacket                                                       : std_logic;                      -- cmd_demux:src7_startofpacket -> cmd_mux_007:sink0_startofpacket
	signal cmd_demux_src7_endofpacket                                                         : std_logic;                      -- cmd_demux:src7_endofpacket -> cmd_mux_007:sink0_endofpacket
	signal cmd_demux_src8_valid                                                               : std_logic;                      -- cmd_demux:src8_valid -> cmd_mux_008:sink0_valid
	signal cmd_demux_src8_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src8_data -> cmd_mux_008:sink0_data
	signal cmd_demux_src8_ready                                                               : std_logic;                      -- cmd_mux_008:sink0_ready -> cmd_demux:src8_ready
	signal cmd_demux_src8_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src8_channel -> cmd_mux_008:sink0_channel
	signal cmd_demux_src8_startofpacket                                                       : std_logic;                      -- cmd_demux:src8_startofpacket -> cmd_mux_008:sink0_startofpacket
	signal cmd_demux_src8_endofpacket                                                         : std_logic;                      -- cmd_demux:src8_endofpacket -> cmd_mux_008:sink0_endofpacket
	signal cmd_demux_src9_valid                                                               : std_logic;                      -- cmd_demux:src9_valid -> cmd_mux_009:sink0_valid
	signal cmd_demux_src9_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src9_data -> cmd_mux_009:sink0_data
	signal cmd_demux_src9_ready                                                               : std_logic;                      -- cmd_mux_009:sink0_ready -> cmd_demux:src9_ready
	signal cmd_demux_src9_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src9_channel -> cmd_mux_009:sink0_channel
	signal cmd_demux_src9_startofpacket                                                       : std_logic;                      -- cmd_demux:src9_startofpacket -> cmd_mux_009:sink0_startofpacket
	signal cmd_demux_src9_endofpacket                                                         : std_logic;                      -- cmd_demux:src9_endofpacket -> cmd_mux_009:sink0_endofpacket
	signal cmd_demux_src10_valid                                                              : std_logic;                      -- cmd_demux:src10_valid -> cmd_mux_010:sink0_valid
	signal cmd_demux_src10_data                                                               : std_logic_vector(105 downto 0); -- cmd_demux:src10_data -> cmd_mux_010:sink0_data
	signal cmd_demux_src10_ready                                                              : std_logic;                      -- cmd_mux_010:sink0_ready -> cmd_demux:src10_ready
	signal cmd_demux_src10_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_demux:src10_channel -> cmd_mux_010:sink0_channel
	signal cmd_demux_src10_startofpacket                                                      : std_logic;                      -- cmd_demux:src10_startofpacket -> cmd_mux_010:sink0_startofpacket
	signal cmd_demux_src10_endofpacket                                                        : std_logic;                      -- cmd_demux:src10_endofpacket -> cmd_mux_010:sink0_endofpacket
	signal cmd_demux_src11_valid                                                              : std_logic;                      -- cmd_demux:src11_valid -> cmd_mux_011:sink0_valid
	signal cmd_demux_src11_data                                                               : std_logic_vector(105 downto 0); -- cmd_demux:src11_data -> cmd_mux_011:sink0_data
	signal cmd_demux_src11_ready                                                              : std_logic;                      -- cmd_mux_011:sink0_ready -> cmd_demux:src11_ready
	signal cmd_demux_src11_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_demux:src11_channel -> cmd_mux_011:sink0_channel
	signal cmd_demux_src11_startofpacket                                                      : std_logic;                      -- cmd_demux:src11_startofpacket -> cmd_mux_011:sink0_startofpacket
	signal cmd_demux_src11_endofpacket                                                        : std_logic;                      -- cmd_demux:src11_endofpacket -> cmd_mux_011:sink0_endofpacket
	signal cmd_demux_src12_valid                                                              : std_logic;                      -- cmd_demux:src12_valid -> cmd_mux_012:sink0_valid
	signal cmd_demux_src12_data                                                               : std_logic_vector(105 downto 0); -- cmd_demux:src12_data -> cmd_mux_012:sink0_data
	signal cmd_demux_src12_ready                                                              : std_logic;                      -- cmd_mux_012:sink0_ready -> cmd_demux:src12_ready
	signal cmd_demux_src12_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_demux:src12_channel -> cmd_mux_012:sink0_channel
	signal cmd_demux_src12_startofpacket                                                      : std_logic;                      -- cmd_demux:src12_startofpacket -> cmd_mux_012:sink0_startofpacket
	signal cmd_demux_src12_endofpacket                                                        : std_logic;                      -- cmd_demux:src12_endofpacket -> cmd_mux_012:sink0_endofpacket
	signal cmd_demux_src13_valid                                                              : std_logic;                      -- cmd_demux:src13_valid -> cmd_mux_013:sink0_valid
	signal cmd_demux_src13_data                                                               : std_logic_vector(105 downto 0); -- cmd_demux:src13_data -> cmd_mux_013:sink0_data
	signal cmd_demux_src13_ready                                                              : std_logic;                      -- cmd_mux_013:sink0_ready -> cmd_demux:src13_ready
	signal cmd_demux_src13_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_demux:src13_channel -> cmd_mux_013:sink0_channel
	signal cmd_demux_src13_startofpacket                                                      : std_logic;                      -- cmd_demux:src13_startofpacket -> cmd_mux_013:sink0_startofpacket
	signal cmd_demux_src13_endofpacket                                                        : std_logic;                      -- cmd_demux:src13_endofpacket -> cmd_mux_013:sink0_endofpacket
	signal cmd_demux_src14_valid                                                              : std_logic;                      -- cmd_demux:src14_valid -> cmd_mux_014:sink0_valid
	signal cmd_demux_src14_data                                                               : std_logic_vector(105 downto 0); -- cmd_demux:src14_data -> cmd_mux_014:sink0_data
	signal cmd_demux_src14_ready                                                              : std_logic;                      -- cmd_mux_014:sink0_ready -> cmd_demux:src14_ready
	signal cmd_demux_src14_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_demux:src14_channel -> cmd_mux_014:sink0_channel
	signal cmd_demux_src14_startofpacket                                                      : std_logic;                      -- cmd_demux:src14_startofpacket -> cmd_mux_014:sink0_startofpacket
	signal cmd_demux_src14_endofpacket                                                        : std_logic;                      -- cmd_demux:src14_endofpacket -> cmd_mux_014:sink0_endofpacket
	signal cmd_demux_001_src0_valid                                                           : std_logic;                      -- cmd_demux_001:src0_valid -> cmd_mux:sink1_valid
	signal cmd_demux_001_src0_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src0_data -> cmd_mux:sink1_data
	signal cmd_demux_001_src0_ready                                                           : std_logic;                      -- cmd_mux:sink1_ready -> cmd_demux_001:src0_ready
	signal cmd_demux_001_src0_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src0_channel -> cmd_mux:sink1_channel
	signal cmd_demux_001_src0_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src0_startofpacket -> cmd_mux:sink1_startofpacket
	signal cmd_demux_001_src0_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src0_endofpacket -> cmd_mux:sink1_endofpacket
	signal cmd_demux_001_src1_valid                                                           : std_logic;                      -- cmd_demux_001:src1_valid -> cmd_mux_001:sink1_valid
	signal cmd_demux_001_src1_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src1_data -> cmd_mux_001:sink1_data
	signal cmd_demux_001_src1_ready                                                           : std_logic;                      -- cmd_mux_001:sink1_ready -> cmd_demux_001:src1_ready
	signal cmd_demux_001_src1_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src1_channel -> cmd_mux_001:sink1_channel
	signal cmd_demux_001_src1_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src1_startofpacket -> cmd_mux_001:sink1_startofpacket
	signal cmd_demux_001_src1_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src1_endofpacket -> cmd_mux_001:sink1_endofpacket
	signal cmd_demux_001_src2_valid                                                           : std_logic;                      -- cmd_demux_001:src2_valid -> cmd_mux_002:sink1_valid
	signal cmd_demux_001_src2_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src2_data -> cmd_mux_002:sink1_data
	signal cmd_demux_001_src2_ready                                                           : std_logic;                      -- cmd_mux_002:sink1_ready -> cmd_demux_001:src2_ready
	signal cmd_demux_001_src2_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src2_channel -> cmd_mux_002:sink1_channel
	signal cmd_demux_001_src2_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src2_startofpacket -> cmd_mux_002:sink1_startofpacket
	signal cmd_demux_001_src2_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src2_endofpacket -> cmd_mux_002:sink1_endofpacket
	signal cmd_demux_001_src3_valid                                                           : std_logic;                      -- cmd_demux_001:src3_valid -> cmd_mux_003:sink1_valid
	signal cmd_demux_001_src3_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src3_data -> cmd_mux_003:sink1_data
	signal cmd_demux_001_src3_ready                                                           : std_logic;                      -- cmd_mux_003:sink1_ready -> cmd_demux_001:src3_ready
	signal cmd_demux_001_src3_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src3_channel -> cmd_mux_003:sink1_channel
	signal cmd_demux_001_src3_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src3_startofpacket -> cmd_mux_003:sink1_startofpacket
	signal cmd_demux_001_src3_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src3_endofpacket -> cmd_mux_003:sink1_endofpacket
	signal cmd_demux_001_src4_valid                                                           : std_logic;                      -- cmd_demux_001:src4_valid -> cmd_mux_004:sink1_valid
	signal cmd_demux_001_src4_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src4_data -> cmd_mux_004:sink1_data
	signal cmd_demux_001_src4_ready                                                           : std_logic;                      -- cmd_mux_004:sink1_ready -> cmd_demux_001:src4_ready
	signal cmd_demux_001_src4_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src4_channel -> cmd_mux_004:sink1_channel
	signal cmd_demux_001_src4_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src4_startofpacket -> cmd_mux_004:sink1_startofpacket
	signal cmd_demux_001_src4_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src4_endofpacket -> cmd_mux_004:sink1_endofpacket
	signal cmd_demux_001_src6_valid                                                           : std_logic;                      -- cmd_demux_001:src6_valid -> cmd_mux_006:sink1_valid
	signal cmd_demux_001_src6_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src6_data -> cmd_mux_006:sink1_data
	signal cmd_demux_001_src6_ready                                                           : std_logic;                      -- cmd_mux_006:sink1_ready -> cmd_demux_001:src6_ready
	signal cmd_demux_001_src6_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src6_channel -> cmd_mux_006:sink1_channel
	signal cmd_demux_001_src6_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src6_startofpacket -> cmd_mux_006:sink1_startofpacket
	signal cmd_demux_001_src6_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src6_endofpacket -> cmd_mux_006:sink1_endofpacket
	signal cmd_demux_001_src7_valid                                                           : std_logic;                      -- cmd_demux_001:src7_valid -> cmd_mux_007:sink1_valid
	signal cmd_demux_001_src7_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src7_data -> cmd_mux_007:sink1_data
	signal cmd_demux_001_src7_ready                                                           : std_logic;                      -- cmd_mux_007:sink1_ready -> cmd_demux_001:src7_ready
	signal cmd_demux_001_src7_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src7_channel -> cmd_mux_007:sink1_channel
	signal cmd_demux_001_src7_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src7_startofpacket -> cmd_mux_007:sink1_startofpacket
	signal cmd_demux_001_src7_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src7_endofpacket -> cmd_mux_007:sink1_endofpacket
	signal cmd_demux_001_src8_valid                                                           : std_logic;                      -- cmd_demux_001:src8_valid -> cmd_mux_008:sink1_valid
	signal cmd_demux_001_src8_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src8_data -> cmd_mux_008:sink1_data
	signal cmd_demux_001_src8_ready                                                           : std_logic;                      -- cmd_mux_008:sink1_ready -> cmd_demux_001:src8_ready
	signal cmd_demux_001_src8_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src8_channel -> cmd_mux_008:sink1_channel
	signal cmd_demux_001_src8_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src8_startofpacket -> cmd_mux_008:sink1_startofpacket
	signal cmd_demux_001_src8_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src8_endofpacket -> cmd_mux_008:sink1_endofpacket
	signal cmd_demux_001_src9_valid                                                           : std_logic;                      -- cmd_demux_001:src9_valid -> cmd_mux_009:sink1_valid
	signal cmd_demux_001_src9_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src9_data -> cmd_mux_009:sink1_data
	signal cmd_demux_001_src9_ready                                                           : std_logic;                      -- cmd_mux_009:sink1_ready -> cmd_demux_001:src9_ready
	signal cmd_demux_001_src9_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src9_channel -> cmd_mux_009:sink1_channel
	signal cmd_demux_001_src9_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src9_startofpacket -> cmd_mux_009:sink1_startofpacket
	signal cmd_demux_001_src9_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src9_endofpacket -> cmd_mux_009:sink1_endofpacket
	signal cmd_demux_001_src10_valid                                                          : std_logic;                      -- cmd_demux_001:src10_valid -> cmd_mux_010:sink1_valid
	signal cmd_demux_001_src10_data                                                           : std_logic_vector(105 downto 0); -- cmd_demux_001:src10_data -> cmd_mux_010:sink1_data
	signal cmd_demux_001_src10_ready                                                          : std_logic;                      -- cmd_mux_010:sink1_ready -> cmd_demux_001:src10_ready
	signal cmd_demux_001_src10_channel                                                        : std_logic_vector(14 downto 0);  -- cmd_demux_001:src10_channel -> cmd_mux_010:sink1_channel
	signal cmd_demux_001_src10_startofpacket                                                  : std_logic;                      -- cmd_demux_001:src10_startofpacket -> cmd_mux_010:sink1_startofpacket
	signal cmd_demux_001_src10_endofpacket                                                    : std_logic;                      -- cmd_demux_001:src10_endofpacket -> cmd_mux_010:sink1_endofpacket
	signal cmd_demux_001_src11_valid                                                          : std_logic;                      -- cmd_demux_001:src11_valid -> cmd_mux_011:sink1_valid
	signal cmd_demux_001_src11_data                                                           : std_logic_vector(105 downto 0); -- cmd_demux_001:src11_data -> cmd_mux_011:sink1_data
	signal cmd_demux_001_src11_ready                                                          : std_logic;                      -- cmd_mux_011:sink1_ready -> cmd_demux_001:src11_ready
	signal cmd_demux_001_src11_channel                                                        : std_logic_vector(14 downto 0);  -- cmd_demux_001:src11_channel -> cmd_mux_011:sink1_channel
	signal cmd_demux_001_src11_startofpacket                                                  : std_logic;                      -- cmd_demux_001:src11_startofpacket -> cmd_mux_011:sink1_startofpacket
	signal cmd_demux_001_src11_endofpacket                                                    : std_logic;                      -- cmd_demux_001:src11_endofpacket -> cmd_mux_011:sink1_endofpacket
	signal cmd_demux_001_src12_valid                                                          : std_logic;                      -- cmd_demux_001:src12_valid -> cmd_mux_012:sink1_valid
	signal cmd_demux_001_src12_data                                                           : std_logic_vector(105 downto 0); -- cmd_demux_001:src12_data -> cmd_mux_012:sink1_data
	signal cmd_demux_001_src12_ready                                                          : std_logic;                      -- cmd_mux_012:sink1_ready -> cmd_demux_001:src12_ready
	signal cmd_demux_001_src12_channel                                                        : std_logic_vector(14 downto 0);  -- cmd_demux_001:src12_channel -> cmd_mux_012:sink1_channel
	signal cmd_demux_001_src12_startofpacket                                                  : std_logic;                      -- cmd_demux_001:src12_startofpacket -> cmd_mux_012:sink1_startofpacket
	signal cmd_demux_001_src12_endofpacket                                                    : std_logic;                      -- cmd_demux_001:src12_endofpacket -> cmd_mux_012:sink1_endofpacket
	signal cmd_demux_001_src13_valid                                                          : std_logic;                      -- cmd_demux_001:src13_valid -> cmd_mux_013:sink1_valid
	signal cmd_demux_001_src13_data                                                           : std_logic_vector(105 downto 0); -- cmd_demux_001:src13_data -> cmd_mux_013:sink1_data
	signal cmd_demux_001_src13_ready                                                          : std_logic;                      -- cmd_mux_013:sink1_ready -> cmd_demux_001:src13_ready
	signal cmd_demux_001_src13_channel                                                        : std_logic_vector(14 downto 0);  -- cmd_demux_001:src13_channel -> cmd_mux_013:sink1_channel
	signal cmd_demux_001_src13_startofpacket                                                  : std_logic;                      -- cmd_demux_001:src13_startofpacket -> cmd_mux_013:sink1_startofpacket
	signal cmd_demux_001_src13_endofpacket                                                    : std_logic;                      -- cmd_demux_001:src13_endofpacket -> cmd_mux_013:sink1_endofpacket
	signal cmd_demux_001_src14_valid                                                          : std_logic;                      -- cmd_demux_001:src14_valid -> cmd_mux_014:sink1_valid
	signal cmd_demux_001_src14_data                                                           : std_logic_vector(105 downto 0); -- cmd_demux_001:src14_data -> cmd_mux_014:sink1_data
	signal cmd_demux_001_src14_ready                                                          : std_logic;                      -- cmd_mux_014:sink1_ready -> cmd_demux_001:src14_ready
	signal cmd_demux_001_src14_channel                                                        : std_logic_vector(14 downto 0);  -- cmd_demux_001:src14_channel -> cmd_mux_014:sink1_channel
	signal cmd_demux_001_src14_startofpacket                                                  : std_logic;                      -- cmd_demux_001:src14_startofpacket -> cmd_mux_014:sink1_startofpacket
	signal cmd_demux_001_src14_endofpacket                                                    : std_logic;                      -- cmd_demux_001:src14_endofpacket -> cmd_mux_014:sink1_endofpacket
	signal rsp_demux_src0_valid                                                               : std_logic;                      -- rsp_demux:src0_valid -> rsp_mux:sink0_valid
	signal rsp_demux_src0_data                                                                : std_logic_vector(105 downto 0); -- rsp_demux:src0_data -> rsp_mux:sink0_data
	signal rsp_demux_src0_ready                                                               : std_logic;                      -- rsp_mux:sink0_ready -> rsp_demux:src0_ready
	signal rsp_demux_src0_channel                                                             : std_logic_vector(14 downto 0);  -- rsp_demux:src0_channel -> rsp_mux:sink0_channel
	signal rsp_demux_src0_startofpacket                                                       : std_logic;                      -- rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	signal rsp_demux_src0_endofpacket                                                         : std_logic;                      -- rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	signal rsp_demux_src1_valid                                                               : std_logic;                      -- rsp_demux:src1_valid -> rsp_mux_001:sink0_valid
	signal rsp_demux_src1_data                                                                : std_logic_vector(105 downto 0); -- rsp_demux:src1_data -> rsp_mux_001:sink0_data
	signal rsp_demux_src1_ready                                                               : std_logic;                      -- rsp_mux_001:sink0_ready -> rsp_demux:src1_ready
	signal rsp_demux_src1_channel                                                             : std_logic_vector(14 downto 0);  -- rsp_demux:src1_channel -> rsp_mux_001:sink0_channel
	signal rsp_demux_src1_startofpacket                                                       : std_logic;                      -- rsp_demux:src1_startofpacket -> rsp_mux_001:sink0_startofpacket
	signal rsp_demux_src1_endofpacket                                                         : std_logic;                      -- rsp_demux:src1_endofpacket -> rsp_mux_001:sink0_endofpacket
	signal rsp_demux_001_src0_valid                                                           : std_logic;                      -- rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
	signal rsp_demux_001_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_001:src0_data -> rsp_mux:sink1_data
	signal rsp_demux_001_src0_ready                                                           : std_logic;                      -- rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
	signal rsp_demux_001_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
	signal rsp_demux_001_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
	signal rsp_demux_001_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
	signal rsp_demux_001_src1_valid                                                           : std_logic;                      -- rsp_demux_001:src1_valid -> rsp_mux_001:sink1_valid
	signal rsp_demux_001_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_001:src1_data -> rsp_mux_001:sink1_data
	signal rsp_demux_001_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink1_ready -> rsp_demux_001:src1_ready
	signal rsp_demux_001_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_001:src1_channel -> rsp_mux_001:sink1_channel
	signal rsp_demux_001_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_001:src1_startofpacket -> rsp_mux_001:sink1_startofpacket
	signal rsp_demux_001_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_001:src1_endofpacket -> rsp_mux_001:sink1_endofpacket
	signal rsp_demux_002_src0_valid                                                           : std_logic;                      -- rsp_demux_002:src0_valid -> rsp_mux:sink2_valid
	signal rsp_demux_002_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_002:src0_data -> rsp_mux:sink2_data
	signal rsp_demux_002_src0_ready                                                           : std_logic;                      -- rsp_mux:sink2_ready -> rsp_demux_002:src0_ready
	signal rsp_demux_002_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_002:src0_channel -> rsp_mux:sink2_channel
	signal rsp_demux_002_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_002:src0_startofpacket -> rsp_mux:sink2_startofpacket
	signal rsp_demux_002_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_002:src0_endofpacket -> rsp_mux:sink2_endofpacket
	signal rsp_demux_002_src1_valid                                                           : std_logic;                      -- rsp_demux_002:src1_valid -> rsp_mux_001:sink2_valid
	signal rsp_demux_002_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_002:src1_data -> rsp_mux_001:sink2_data
	signal rsp_demux_002_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink2_ready -> rsp_demux_002:src1_ready
	signal rsp_demux_002_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_002:src1_channel -> rsp_mux_001:sink2_channel
	signal rsp_demux_002_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_002:src1_startofpacket -> rsp_mux_001:sink2_startofpacket
	signal rsp_demux_002_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_002:src1_endofpacket -> rsp_mux_001:sink2_endofpacket
	signal rsp_demux_003_src0_valid                                                           : std_logic;                      -- rsp_demux_003:src0_valid -> rsp_mux:sink3_valid
	signal rsp_demux_003_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_003:src0_data -> rsp_mux:sink3_data
	signal rsp_demux_003_src0_ready                                                           : std_logic;                      -- rsp_mux:sink3_ready -> rsp_demux_003:src0_ready
	signal rsp_demux_003_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_003:src0_channel -> rsp_mux:sink3_channel
	signal rsp_demux_003_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_003:src0_startofpacket -> rsp_mux:sink3_startofpacket
	signal rsp_demux_003_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_003:src0_endofpacket -> rsp_mux:sink3_endofpacket
	signal rsp_demux_003_src1_valid                                                           : std_logic;                      -- rsp_demux_003:src1_valid -> rsp_mux_001:sink3_valid
	signal rsp_demux_003_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_003:src1_data -> rsp_mux_001:sink3_data
	signal rsp_demux_003_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink3_ready -> rsp_demux_003:src1_ready
	signal rsp_demux_003_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_003:src1_channel -> rsp_mux_001:sink3_channel
	signal rsp_demux_003_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_003:src1_startofpacket -> rsp_mux_001:sink3_startofpacket
	signal rsp_demux_003_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_003:src1_endofpacket -> rsp_mux_001:sink3_endofpacket
	signal rsp_demux_004_src0_valid                                                           : std_logic;                      -- rsp_demux_004:src0_valid -> rsp_mux:sink4_valid
	signal rsp_demux_004_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_004:src0_data -> rsp_mux:sink4_data
	signal rsp_demux_004_src0_ready                                                           : std_logic;                      -- rsp_mux:sink4_ready -> rsp_demux_004:src0_ready
	signal rsp_demux_004_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_004:src0_channel -> rsp_mux:sink4_channel
	signal rsp_demux_004_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_004:src0_startofpacket -> rsp_mux:sink4_startofpacket
	signal rsp_demux_004_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_004:src0_endofpacket -> rsp_mux:sink4_endofpacket
	signal rsp_demux_004_src1_valid                                                           : std_logic;                      -- rsp_demux_004:src1_valid -> rsp_mux_001:sink4_valid
	signal rsp_demux_004_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_004:src1_data -> rsp_mux_001:sink4_data
	signal rsp_demux_004_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink4_ready -> rsp_demux_004:src1_ready
	signal rsp_demux_004_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_004:src1_channel -> rsp_mux_001:sink4_channel
	signal rsp_demux_004_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_004:src1_startofpacket -> rsp_mux_001:sink4_startofpacket
	signal rsp_demux_004_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_004:src1_endofpacket -> rsp_mux_001:sink4_endofpacket
	signal rsp_demux_006_src0_valid                                                           : std_logic;                      -- rsp_demux_006:src0_valid -> rsp_mux:sink6_valid
	signal rsp_demux_006_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_006:src0_data -> rsp_mux:sink6_data
	signal rsp_demux_006_src0_ready                                                           : std_logic;                      -- rsp_mux:sink6_ready -> rsp_demux_006:src0_ready
	signal rsp_demux_006_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_006:src0_channel -> rsp_mux:sink6_channel
	signal rsp_demux_006_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_006:src0_startofpacket -> rsp_mux:sink6_startofpacket
	signal rsp_demux_006_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_006:src0_endofpacket -> rsp_mux:sink6_endofpacket
	signal rsp_demux_006_src1_valid                                                           : std_logic;                      -- rsp_demux_006:src1_valid -> rsp_mux_001:sink6_valid
	signal rsp_demux_006_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_006:src1_data -> rsp_mux_001:sink6_data
	signal rsp_demux_006_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink6_ready -> rsp_demux_006:src1_ready
	signal rsp_demux_006_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_006:src1_channel -> rsp_mux_001:sink6_channel
	signal rsp_demux_006_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_006:src1_startofpacket -> rsp_mux_001:sink6_startofpacket
	signal rsp_demux_006_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_006:src1_endofpacket -> rsp_mux_001:sink6_endofpacket
	signal rsp_demux_007_src0_valid                                                           : std_logic;                      -- rsp_demux_007:src0_valid -> rsp_mux:sink7_valid
	signal rsp_demux_007_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_007:src0_data -> rsp_mux:sink7_data
	signal rsp_demux_007_src0_ready                                                           : std_logic;                      -- rsp_mux:sink7_ready -> rsp_demux_007:src0_ready
	signal rsp_demux_007_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_007:src0_channel -> rsp_mux:sink7_channel
	signal rsp_demux_007_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_007:src0_startofpacket -> rsp_mux:sink7_startofpacket
	signal rsp_demux_007_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_007:src0_endofpacket -> rsp_mux:sink7_endofpacket
	signal rsp_demux_007_src1_valid                                                           : std_logic;                      -- rsp_demux_007:src1_valid -> rsp_mux_001:sink7_valid
	signal rsp_demux_007_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_007:src1_data -> rsp_mux_001:sink7_data
	signal rsp_demux_007_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink7_ready -> rsp_demux_007:src1_ready
	signal rsp_demux_007_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_007:src1_channel -> rsp_mux_001:sink7_channel
	signal rsp_demux_007_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_007:src1_startofpacket -> rsp_mux_001:sink7_startofpacket
	signal rsp_demux_007_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_007:src1_endofpacket -> rsp_mux_001:sink7_endofpacket
	signal rsp_demux_008_src0_valid                                                           : std_logic;                      -- rsp_demux_008:src0_valid -> rsp_mux:sink8_valid
	signal rsp_demux_008_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_008:src0_data -> rsp_mux:sink8_data
	signal rsp_demux_008_src0_ready                                                           : std_logic;                      -- rsp_mux:sink8_ready -> rsp_demux_008:src0_ready
	signal rsp_demux_008_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_008:src0_channel -> rsp_mux:sink8_channel
	signal rsp_demux_008_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_008:src0_startofpacket -> rsp_mux:sink8_startofpacket
	signal rsp_demux_008_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_008:src0_endofpacket -> rsp_mux:sink8_endofpacket
	signal rsp_demux_008_src1_valid                                                           : std_logic;                      -- rsp_demux_008:src1_valid -> rsp_mux_001:sink8_valid
	signal rsp_demux_008_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_008:src1_data -> rsp_mux_001:sink8_data
	signal rsp_demux_008_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink8_ready -> rsp_demux_008:src1_ready
	signal rsp_demux_008_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_008:src1_channel -> rsp_mux_001:sink8_channel
	signal rsp_demux_008_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_008:src1_startofpacket -> rsp_mux_001:sink8_startofpacket
	signal rsp_demux_008_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_008:src1_endofpacket -> rsp_mux_001:sink8_endofpacket
	signal rsp_demux_009_src0_valid                                                           : std_logic;                      -- rsp_demux_009:src0_valid -> rsp_mux:sink9_valid
	signal rsp_demux_009_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_009:src0_data -> rsp_mux:sink9_data
	signal rsp_demux_009_src0_ready                                                           : std_logic;                      -- rsp_mux:sink9_ready -> rsp_demux_009:src0_ready
	signal rsp_demux_009_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_009:src0_channel -> rsp_mux:sink9_channel
	signal rsp_demux_009_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_009:src0_startofpacket -> rsp_mux:sink9_startofpacket
	signal rsp_demux_009_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_009:src0_endofpacket -> rsp_mux:sink9_endofpacket
	signal rsp_demux_009_src1_valid                                                           : std_logic;                      -- rsp_demux_009:src1_valid -> rsp_mux_001:sink9_valid
	signal rsp_demux_009_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_009:src1_data -> rsp_mux_001:sink9_data
	signal rsp_demux_009_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink9_ready -> rsp_demux_009:src1_ready
	signal rsp_demux_009_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_009:src1_channel -> rsp_mux_001:sink9_channel
	signal rsp_demux_009_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_009:src1_startofpacket -> rsp_mux_001:sink9_startofpacket
	signal rsp_demux_009_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_009:src1_endofpacket -> rsp_mux_001:sink9_endofpacket
	signal rsp_demux_010_src0_valid                                                           : std_logic;                      -- rsp_demux_010:src0_valid -> rsp_mux:sink10_valid
	signal rsp_demux_010_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_010:src0_data -> rsp_mux:sink10_data
	signal rsp_demux_010_src0_ready                                                           : std_logic;                      -- rsp_mux:sink10_ready -> rsp_demux_010:src0_ready
	signal rsp_demux_010_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_010:src0_channel -> rsp_mux:sink10_channel
	signal rsp_demux_010_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_010:src0_startofpacket -> rsp_mux:sink10_startofpacket
	signal rsp_demux_010_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_010:src0_endofpacket -> rsp_mux:sink10_endofpacket
	signal rsp_demux_010_src1_valid                                                           : std_logic;                      -- rsp_demux_010:src1_valid -> rsp_mux_001:sink10_valid
	signal rsp_demux_010_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_010:src1_data -> rsp_mux_001:sink10_data
	signal rsp_demux_010_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink10_ready -> rsp_demux_010:src1_ready
	signal rsp_demux_010_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_010:src1_channel -> rsp_mux_001:sink10_channel
	signal rsp_demux_010_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_010:src1_startofpacket -> rsp_mux_001:sink10_startofpacket
	signal rsp_demux_010_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_010:src1_endofpacket -> rsp_mux_001:sink10_endofpacket
	signal rsp_demux_011_src0_valid                                                           : std_logic;                      -- rsp_demux_011:src0_valid -> rsp_mux:sink11_valid
	signal rsp_demux_011_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_011:src0_data -> rsp_mux:sink11_data
	signal rsp_demux_011_src0_ready                                                           : std_logic;                      -- rsp_mux:sink11_ready -> rsp_demux_011:src0_ready
	signal rsp_demux_011_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_011:src0_channel -> rsp_mux:sink11_channel
	signal rsp_demux_011_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_011:src0_startofpacket -> rsp_mux:sink11_startofpacket
	signal rsp_demux_011_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_011:src0_endofpacket -> rsp_mux:sink11_endofpacket
	signal rsp_demux_011_src1_valid                                                           : std_logic;                      -- rsp_demux_011:src1_valid -> rsp_mux_001:sink11_valid
	signal rsp_demux_011_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_011:src1_data -> rsp_mux_001:sink11_data
	signal rsp_demux_011_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink11_ready -> rsp_demux_011:src1_ready
	signal rsp_demux_011_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_011:src1_channel -> rsp_mux_001:sink11_channel
	signal rsp_demux_011_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_011:src1_startofpacket -> rsp_mux_001:sink11_startofpacket
	signal rsp_demux_011_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_011:src1_endofpacket -> rsp_mux_001:sink11_endofpacket
	signal rsp_demux_012_src0_valid                                                           : std_logic;                      -- rsp_demux_012:src0_valid -> rsp_mux:sink12_valid
	signal rsp_demux_012_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_012:src0_data -> rsp_mux:sink12_data
	signal rsp_demux_012_src0_ready                                                           : std_logic;                      -- rsp_mux:sink12_ready -> rsp_demux_012:src0_ready
	signal rsp_demux_012_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_012:src0_channel -> rsp_mux:sink12_channel
	signal rsp_demux_012_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_012:src0_startofpacket -> rsp_mux:sink12_startofpacket
	signal rsp_demux_012_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_012:src0_endofpacket -> rsp_mux:sink12_endofpacket
	signal rsp_demux_012_src1_valid                                                           : std_logic;                      -- rsp_demux_012:src1_valid -> rsp_mux_001:sink12_valid
	signal rsp_demux_012_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_012:src1_data -> rsp_mux_001:sink12_data
	signal rsp_demux_012_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink12_ready -> rsp_demux_012:src1_ready
	signal rsp_demux_012_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_012:src1_channel -> rsp_mux_001:sink12_channel
	signal rsp_demux_012_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_012:src1_startofpacket -> rsp_mux_001:sink12_startofpacket
	signal rsp_demux_012_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_012:src1_endofpacket -> rsp_mux_001:sink12_endofpacket
	signal rsp_demux_013_src0_valid                                                           : std_logic;                      -- rsp_demux_013:src0_valid -> rsp_mux:sink13_valid
	signal rsp_demux_013_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_013:src0_data -> rsp_mux:sink13_data
	signal rsp_demux_013_src0_ready                                                           : std_logic;                      -- rsp_mux:sink13_ready -> rsp_demux_013:src0_ready
	signal rsp_demux_013_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_013:src0_channel -> rsp_mux:sink13_channel
	signal rsp_demux_013_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_013:src0_startofpacket -> rsp_mux:sink13_startofpacket
	signal rsp_demux_013_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_013:src0_endofpacket -> rsp_mux:sink13_endofpacket
	signal rsp_demux_013_src1_valid                                                           : std_logic;                      -- rsp_demux_013:src1_valid -> rsp_mux_001:sink13_valid
	signal rsp_demux_013_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_013:src1_data -> rsp_mux_001:sink13_data
	signal rsp_demux_013_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink13_ready -> rsp_demux_013:src1_ready
	signal rsp_demux_013_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_013:src1_channel -> rsp_mux_001:sink13_channel
	signal rsp_demux_013_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_013:src1_startofpacket -> rsp_mux_001:sink13_startofpacket
	signal rsp_demux_013_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_013:src1_endofpacket -> rsp_mux_001:sink13_endofpacket
	signal rsp_demux_014_src0_valid                                                           : std_logic;                      -- rsp_demux_014:src0_valid -> rsp_mux:sink14_valid
	signal rsp_demux_014_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_014:src0_data -> rsp_mux:sink14_data
	signal rsp_demux_014_src0_ready                                                           : std_logic;                      -- rsp_mux:sink14_ready -> rsp_demux_014:src0_ready
	signal rsp_demux_014_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_014:src0_channel -> rsp_mux:sink14_channel
	signal rsp_demux_014_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_014:src0_startofpacket -> rsp_mux:sink14_startofpacket
	signal rsp_demux_014_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_014:src0_endofpacket -> rsp_mux:sink14_endofpacket
	signal rsp_demux_014_src1_valid                                                           : std_logic;                      -- rsp_demux_014:src1_valid -> rsp_mux_001:sink14_valid
	signal rsp_demux_014_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_014:src1_data -> rsp_mux_001:sink14_data
	signal rsp_demux_014_src1_ready                                                           : std_logic;                      -- rsp_mux_001:sink14_ready -> rsp_demux_014:src1_ready
	signal rsp_demux_014_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_014:src1_channel -> rsp_mux_001:sink14_channel
	signal rsp_demux_014_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_014:src1_startofpacket -> rsp_mux_001:sink14_startofpacket
	signal rsp_demux_014_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_014:src1_endofpacket -> rsp_mux_001:sink14_endofpacket
	signal router_007_src_valid                                                               : std_logic;                      -- router_007:src_valid -> sdram_s1_rsp_width_adapter:in_valid
	signal router_007_src_data                                                                : std_logic_vector(87 downto 0);  -- router_007:src_data -> sdram_s1_rsp_width_adapter:in_data
	signal router_007_src_ready                                                               : std_logic;                      -- sdram_s1_rsp_width_adapter:in_ready -> router_007:src_ready
	signal router_007_src_channel                                                             : std_logic_vector(14 downto 0);  -- router_007:src_channel -> sdram_s1_rsp_width_adapter:in_channel
	signal router_007_src_startofpacket                                                       : std_logic;                      -- router_007:src_startofpacket -> sdram_s1_rsp_width_adapter:in_startofpacket
	signal router_007_src_endofpacket                                                         : std_logic;                      -- router_007:src_endofpacket -> sdram_s1_rsp_width_adapter:in_endofpacket
	signal sdram_s1_rsp_width_adapter_src_valid                                               : std_logic;                      -- sdram_s1_rsp_width_adapter:out_valid -> rsp_demux_005:sink_valid
	signal sdram_s1_rsp_width_adapter_src_data                                                : std_logic_vector(105 downto 0); -- sdram_s1_rsp_width_adapter:out_data -> rsp_demux_005:sink_data
	signal sdram_s1_rsp_width_adapter_src_ready                                               : std_logic;                      -- rsp_demux_005:sink_ready -> sdram_s1_rsp_width_adapter:out_ready
	signal sdram_s1_rsp_width_adapter_src_channel                                             : std_logic_vector(14 downto 0);  -- sdram_s1_rsp_width_adapter:out_channel -> rsp_demux_005:sink_channel
	signal sdram_s1_rsp_width_adapter_src_startofpacket                                       : std_logic;                      -- sdram_s1_rsp_width_adapter:out_startofpacket -> rsp_demux_005:sink_startofpacket
	signal sdram_s1_rsp_width_adapter_src_endofpacket                                         : std_logic;                      -- sdram_s1_rsp_width_adapter:out_endofpacket -> rsp_demux_005:sink_endofpacket
	signal cmd_mux_005_src_valid                                                              : std_logic;                      -- cmd_mux_005:src_valid -> sdram_s1_cmd_width_adapter:in_valid
	signal cmd_mux_005_src_data                                                               : std_logic_vector(105 downto 0); -- cmd_mux_005:src_data -> sdram_s1_cmd_width_adapter:in_data
	signal cmd_mux_005_src_ready                                                              : std_logic;                      -- sdram_s1_cmd_width_adapter:in_ready -> cmd_mux_005:src_ready
	signal cmd_mux_005_src_channel                                                            : std_logic_vector(14 downto 0);  -- cmd_mux_005:src_channel -> sdram_s1_cmd_width_adapter:in_channel
	signal cmd_mux_005_src_startofpacket                                                      : std_logic;                      -- cmd_mux_005:src_startofpacket -> sdram_s1_cmd_width_adapter:in_startofpacket
	signal cmd_mux_005_src_endofpacket                                                        : std_logic;                      -- cmd_mux_005:src_endofpacket -> sdram_s1_cmd_width_adapter:in_endofpacket
	signal sdram_s1_cmd_width_adapter_src_valid                                               : std_logic;                      -- sdram_s1_cmd_width_adapter:out_valid -> sdram_s1_burst_adapter:sink0_valid
	signal sdram_s1_cmd_width_adapter_src_data                                                : std_logic_vector(87 downto 0);  -- sdram_s1_cmd_width_adapter:out_data -> sdram_s1_burst_adapter:sink0_data
	signal sdram_s1_cmd_width_adapter_src_ready                                               : std_logic;                      -- sdram_s1_burst_adapter:sink0_ready -> sdram_s1_cmd_width_adapter:out_ready
	signal sdram_s1_cmd_width_adapter_src_channel                                             : std_logic_vector(14 downto 0);  -- sdram_s1_cmd_width_adapter:out_channel -> sdram_s1_burst_adapter:sink0_channel
	signal sdram_s1_cmd_width_adapter_src_startofpacket                                       : std_logic;                      -- sdram_s1_cmd_width_adapter:out_startofpacket -> sdram_s1_burst_adapter:sink0_startofpacket
	signal sdram_s1_cmd_width_adapter_src_endofpacket                                         : std_logic;                      -- sdram_s1_cmd_width_adapter:out_endofpacket -> sdram_s1_burst_adapter:sink0_endofpacket
	signal cmd_demux_src5_valid                                                               : std_logic;                      -- cmd_demux:src5_valid -> crosser:in_valid
	signal cmd_demux_src5_data                                                                : std_logic_vector(105 downto 0); -- cmd_demux:src5_data -> crosser:in_data
	signal cmd_demux_src5_ready                                                               : std_logic;                      -- crosser:in_ready -> cmd_demux:src5_ready
	signal cmd_demux_src5_channel                                                             : std_logic_vector(14 downto 0);  -- cmd_demux:src5_channel -> crosser:in_channel
	signal cmd_demux_src5_startofpacket                                                       : std_logic;                      -- cmd_demux:src5_startofpacket -> crosser:in_startofpacket
	signal cmd_demux_src5_endofpacket                                                         : std_logic;                      -- cmd_demux:src5_endofpacket -> crosser:in_endofpacket
	signal crosser_out_valid                                                                  : std_logic;                      -- crosser:out_valid -> cmd_mux_005:sink0_valid
	signal crosser_out_data                                                                   : std_logic_vector(105 downto 0); -- crosser:out_data -> cmd_mux_005:sink0_data
	signal crosser_out_ready                                                                  : std_logic;                      -- cmd_mux_005:sink0_ready -> crosser:out_ready
	signal crosser_out_channel                                                                : std_logic_vector(14 downto 0);  -- crosser:out_channel -> cmd_mux_005:sink0_channel
	signal crosser_out_startofpacket                                                          : std_logic;                      -- crosser:out_startofpacket -> cmd_mux_005:sink0_startofpacket
	signal crosser_out_endofpacket                                                            : std_logic;                      -- crosser:out_endofpacket -> cmd_mux_005:sink0_endofpacket
	signal cmd_demux_001_src5_valid                                                           : std_logic;                      -- cmd_demux_001:src5_valid -> crosser_001:in_valid
	signal cmd_demux_001_src5_data                                                            : std_logic_vector(105 downto 0); -- cmd_demux_001:src5_data -> crosser_001:in_data
	signal cmd_demux_001_src5_ready                                                           : std_logic;                      -- crosser_001:in_ready -> cmd_demux_001:src5_ready
	signal cmd_demux_001_src5_channel                                                         : std_logic_vector(14 downto 0);  -- cmd_demux_001:src5_channel -> crosser_001:in_channel
	signal cmd_demux_001_src5_startofpacket                                                   : std_logic;                      -- cmd_demux_001:src5_startofpacket -> crosser_001:in_startofpacket
	signal cmd_demux_001_src5_endofpacket                                                     : std_logic;                      -- cmd_demux_001:src5_endofpacket -> crosser_001:in_endofpacket
	signal crosser_001_out_valid                                                              : std_logic;                      -- crosser_001:out_valid -> cmd_mux_005:sink1_valid
	signal crosser_001_out_data                                                               : std_logic_vector(105 downto 0); -- crosser_001:out_data -> cmd_mux_005:sink1_data
	signal crosser_001_out_ready                                                              : std_logic;                      -- cmd_mux_005:sink1_ready -> crosser_001:out_ready
	signal crosser_001_out_channel                                                            : std_logic_vector(14 downto 0);  -- crosser_001:out_channel -> cmd_mux_005:sink1_channel
	signal crosser_001_out_startofpacket                                                      : std_logic;                      -- crosser_001:out_startofpacket -> cmd_mux_005:sink1_startofpacket
	signal crosser_001_out_endofpacket                                                        : std_logic;                      -- crosser_001:out_endofpacket -> cmd_mux_005:sink1_endofpacket
	signal rsp_demux_005_src0_valid                                                           : std_logic;                      -- rsp_demux_005:src0_valid -> crosser_002:in_valid
	signal rsp_demux_005_src0_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_005:src0_data -> crosser_002:in_data
	signal rsp_demux_005_src0_ready                                                           : std_logic;                      -- crosser_002:in_ready -> rsp_demux_005:src0_ready
	signal rsp_demux_005_src0_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_005:src0_channel -> crosser_002:in_channel
	signal rsp_demux_005_src0_startofpacket                                                   : std_logic;                      -- rsp_demux_005:src0_startofpacket -> crosser_002:in_startofpacket
	signal rsp_demux_005_src0_endofpacket                                                     : std_logic;                      -- rsp_demux_005:src0_endofpacket -> crosser_002:in_endofpacket
	signal crosser_002_out_valid                                                              : std_logic;                      -- crosser_002:out_valid -> rsp_mux:sink5_valid
	signal crosser_002_out_data                                                               : std_logic_vector(105 downto 0); -- crosser_002:out_data -> rsp_mux:sink5_data
	signal crosser_002_out_ready                                                              : std_logic;                      -- rsp_mux:sink5_ready -> crosser_002:out_ready
	signal crosser_002_out_channel                                                            : std_logic_vector(14 downto 0);  -- crosser_002:out_channel -> rsp_mux:sink5_channel
	signal crosser_002_out_startofpacket                                                      : std_logic;                      -- crosser_002:out_startofpacket -> rsp_mux:sink5_startofpacket
	signal crosser_002_out_endofpacket                                                        : std_logic;                      -- crosser_002:out_endofpacket -> rsp_mux:sink5_endofpacket
	signal rsp_demux_005_src1_valid                                                           : std_logic;                      -- rsp_demux_005:src1_valid -> crosser_003:in_valid
	signal rsp_demux_005_src1_data                                                            : std_logic_vector(105 downto 0); -- rsp_demux_005:src1_data -> crosser_003:in_data
	signal rsp_demux_005_src1_ready                                                           : std_logic;                      -- crosser_003:in_ready -> rsp_demux_005:src1_ready
	signal rsp_demux_005_src1_channel                                                         : std_logic_vector(14 downto 0);  -- rsp_demux_005:src1_channel -> crosser_003:in_channel
	signal rsp_demux_005_src1_startofpacket                                                   : std_logic;                      -- rsp_demux_005:src1_startofpacket -> crosser_003:in_startofpacket
	signal rsp_demux_005_src1_endofpacket                                                     : std_logic;                      -- rsp_demux_005:src1_endofpacket -> crosser_003:in_endofpacket
	signal crosser_003_out_valid                                                              : std_logic;                      -- crosser_003:out_valid -> rsp_mux_001:sink5_valid
	signal crosser_003_out_data                                                               : std_logic_vector(105 downto 0); -- crosser_003:out_data -> rsp_mux_001:sink5_data
	signal crosser_003_out_ready                                                              : std_logic;                      -- rsp_mux_001:sink5_ready -> crosser_003:out_ready
	signal crosser_003_out_channel                                                            : std_logic_vector(14 downto 0);  -- crosser_003:out_channel -> rsp_mux_001:sink5_channel
	signal crosser_003_out_startofpacket                                                      : std_logic;                      -- crosser_003:out_startofpacket -> rsp_mux_001:sink5_startofpacket
	signal crosser_003_out_endofpacket                                                        : std_logic;                      -- crosser_003:out_endofpacket -> rsp_mux_001:sink5_endofpacket
	signal jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid                           : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter:in_0_valid
	signal jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data                            : std_logic_vector(33 downto 0);  -- jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_data -> avalon_st_adapter:in_0_data
	signal jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready                           : std_logic;                      -- avalon_st_adapter:in_0_ready -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_out_0_valid                                                      : std_logic;                      -- avalon_st_adapter:out_0_valid -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_out_0_data                                                       : std_logic_vector(33 downto 0);  -- avalon_st_adapter:out_0_data -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_out_0_ready                                                      : std_logic;                      -- jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter:out_0_ready
	signal avalon_st_adapter_out_0_error                                                      : std_logic_vector(0 downto 0);   -- avalon_st_adapter:out_0_error -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_error
	signal sysid_qsys_0_control_slave_agent_rdata_fifo_src_valid                              : std_logic;                      -- sysid_qsys_0_control_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_001:in_0_valid
	signal sysid_qsys_0_control_slave_agent_rdata_fifo_src_data                               : std_logic_vector(33 downto 0);  -- sysid_qsys_0_control_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_001:in_0_data
	signal sysid_qsys_0_control_slave_agent_rdata_fifo_src_ready                              : std_logic;                      -- avalon_st_adapter_001:in_0_ready -> sysid_qsys_0_control_slave_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_001_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_001:out_0_valid -> sysid_qsys_0_control_slave_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_001_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_001:out_0_data -> sysid_qsys_0_control_slave_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_001_out_0_ready                                                  : std_logic;                      -- sysid_qsys_0_control_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_001:out_0_ready
	signal avalon_st_adapter_001_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_001:out_0_error -> sysid_qsys_0_control_slave_agent:rdata_fifo_sink_error
	signal nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_valid                            : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_002:in_0_valid
	signal nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_data                             : std_logic_vector(33 downto 0);  -- nios2_gen2_0_debug_mem_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_002:in_0_data
	signal nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_ready                            : std_logic;                      -- avalon_st_adapter_002:in_0_ready -> nios2_gen2_0_debug_mem_slave_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_002_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_002:out_0_valid -> nios2_gen2_0_debug_mem_slave_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_002_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_002:out_0_data -> nios2_gen2_0_debug_mem_slave_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_002_out_0_ready                                                  : std_logic;                      -- nios2_gen2_0_debug_mem_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_002:out_0_ready
	signal avalon_st_adapter_002_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_002:out_0_error -> nios2_gen2_0_debug_mem_slave_agent:rdata_fifo_sink_error
	signal sdram_pll_pll_slave_agent_rdata_fifo_src_valid                                     : std_logic;                      -- sdram_pll_pll_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_003:in_0_valid
	signal sdram_pll_pll_slave_agent_rdata_fifo_src_data                                      : std_logic_vector(33 downto 0);  -- sdram_pll_pll_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_003:in_0_data
	signal sdram_pll_pll_slave_agent_rdata_fifo_src_ready                                     : std_logic;                      -- avalon_st_adapter_003:in_0_ready -> sdram_pll_pll_slave_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_003_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_003:out_0_valid -> sdram_pll_pll_slave_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_003_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_003:out_0_data -> sdram_pll_pll_slave_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_003_out_0_ready                                                  : std_logic;                      -- sdram_pll_pll_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_003:out_0_ready
	signal avalon_st_adapter_003_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_003:out_0_error -> sdram_pll_pll_slave_agent:rdata_fifo_sink_error
	signal onchip_memory2_0_s1_agent_rdata_fifo_src_valid                                     : std_logic;                      -- onchip_memory2_0_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_004:in_0_valid
	signal onchip_memory2_0_s1_agent_rdata_fifo_src_data                                      : std_logic_vector(33 downto 0);  -- onchip_memory2_0_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_004:in_0_data
	signal onchip_memory2_0_s1_agent_rdata_fifo_src_ready                                     : std_logic;                      -- avalon_st_adapter_004:in_0_ready -> onchip_memory2_0_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_004_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_004:out_0_valid -> onchip_memory2_0_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_004_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_004:out_0_data -> onchip_memory2_0_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_004_out_0_ready                                                  : std_logic;                      -- onchip_memory2_0_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_004:out_0_ready
	signal avalon_st_adapter_004_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_004:out_0_error -> onchip_memory2_0_s1_agent:rdata_fifo_sink_error
	signal sdram_s1_agent_rdata_fifo_out_valid                                                : std_logic;                      -- sdram_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_005:in_0_valid
	signal sdram_s1_agent_rdata_fifo_out_data                                                 : std_logic_vector(17 downto 0);  -- sdram_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_005:in_0_data
	signal sdram_s1_agent_rdata_fifo_out_ready                                                : std_logic;                      -- avalon_st_adapter_005:in_0_ready -> sdram_s1_agent_rdata_fifo:out_ready
	signal avalon_st_adapter_005_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_005:out_0_valid -> sdram_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_005_out_0_data                                                   : std_logic_vector(17 downto 0);  -- avalon_st_adapter_005:out_0_data -> sdram_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_005_out_0_ready                                                  : std_logic;                      -- sdram_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_005:out_0_ready
	signal avalon_st_adapter_005_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_005:out_0_error -> sdram_s1_agent:rdata_fifo_sink_error
	signal keycode_s1_agent_rdata_fifo_src_valid                                              : std_logic;                      -- keycode_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_006:in_0_valid
	signal keycode_s1_agent_rdata_fifo_src_data                                               : std_logic_vector(33 downto 0);  -- keycode_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_006:in_0_data
	signal keycode_s1_agent_rdata_fifo_src_ready                                              : std_logic;                      -- avalon_st_adapter_006:in_0_ready -> keycode_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_006_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_006:out_0_valid -> keycode_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_006_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_006:out_0_data -> keycode_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_006_out_0_ready                                                  : std_logic;                      -- keycode_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_006:out_0_ready
	signal avalon_st_adapter_006_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_006:out_0_error -> keycode_s1_agent:rdata_fifo_sink_error
	signal usb_irq_s1_agent_rdata_fifo_src_valid                                              : std_logic;                      -- usb_irq_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_007:in_0_valid
	signal usb_irq_s1_agent_rdata_fifo_src_data                                               : std_logic_vector(33 downto 0);  -- usb_irq_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_007:in_0_data
	signal usb_irq_s1_agent_rdata_fifo_src_ready                                              : std_logic;                      -- avalon_st_adapter_007:in_0_ready -> usb_irq_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_007_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_007:out_0_valid -> usb_irq_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_007_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_007:out_0_data -> usb_irq_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_007_out_0_ready                                                  : std_logic;                      -- usb_irq_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_007:out_0_ready
	signal avalon_st_adapter_007_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_007:out_0_error -> usb_irq_s1_agent:rdata_fifo_sink_error
	signal usb_gpx_s1_agent_rdata_fifo_src_valid                                              : std_logic;                      -- usb_gpx_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_008:in_0_valid
	signal usb_gpx_s1_agent_rdata_fifo_src_data                                               : std_logic_vector(33 downto 0);  -- usb_gpx_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_008:in_0_data
	signal usb_gpx_s1_agent_rdata_fifo_src_ready                                              : std_logic;                      -- avalon_st_adapter_008:in_0_ready -> usb_gpx_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_008_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_008:out_0_valid -> usb_gpx_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_008_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_008:out_0_data -> usb_gpx_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_008_out_0_ready                                                  : std_logic;                      -- usb_gpx_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_008:out_0_ready
	signal avalon_st_adapter_008_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_008:out_0_error -> usb_gpx_s1_agent:rdata_fifo_sink_error
	signal usb_rst_s1_agent_rdata_fifo_src_valid                                              : std_logic;                      -- usb_rst_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_009:in_0_valid
	signal usb_rst_s1_agent_rdata_fifo_src_data                                               : std_logic_vector(33 downto 0);  -- usb_rst_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_009:in_0_data
	signal usb_rst_s1_agent_rdata_fifo_src_ready                                              : std_logic;                      -- avalon_st_adapter_009:in_0_ready -> usb_rst_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_009_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_009:out_0_valid -> usb_rst_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_009_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_009:out_0_data -> usb_rst_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_009_out_0_ready                                                  : std_logic;                      -- usb_rst_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_009:out_0_ready
	signal avalon_st_adapter_009_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_009:out_0_error -> usb_rst_s1_agent:rdata_fifo_sink_error
	signal hex_digits_pio_s1_agent_rdata_fifo_src_valid                                       : std_logic;                      -- hex_digits_pio_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_010:in_0_valid
	signal hex_digits_pio_s1_agent_rdata_fifo_src_data                                        : std_logic_vector(33 downto 0);  -- hex_digits_pio_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_010:in_0_data
	signal hex_digits_pio_s1_agent_rdata_fifo_src_ready                                       : std_logic;                      -- avalon_st_adapter_010:in_0_ready -> hex_digits_pio_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_010_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_010:out_0_valid -> hex_digits_pio_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_010_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_010:out_0_data -> hex_digits_pio_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_010_out_0_ready                                                  : std_logic;                      -- hex_digits_pio_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_010:out_0_ready
	signal avalon_st_adapter_010_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_010:out_0_error -> hex_digits_pio_s1_agent:rdata_fifo_sink_error
	signal leds_pio_s1_agent_rdata_fifo_src_valid                                             : std_logic;                      -- leds_pio_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_011:in_0_valid
	signal leds_pio_s1_agent_rdata_fifo_src_data                                              : std_logic_vector(33 downto 0);  -- leds_pio_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_011:in_0_data
	signal leds_pio_s1_agent_rdata_fifo_src_ready                                             : std_logic;                      -- avalon_st_adapter_011:in_0_ready -> leds_pio_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_011_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_011:out_0_valid -> leds_pio_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_011_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_011:out_0_data -> leds_pio_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_011_out_0_ready                                                  : std_logic;                      -- leds_pio_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_011:out_0_ready
	signal avalon_st_adapter_011_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_011:out_0_error -> leds_pio_s1_agent:rdata_fifo_sink_error
	signal key_s1_agent_rdata_fifo_src_valid                                                  : std_logic;                      -- key_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_012:in_0_valid
	signal key_s1_agent_rdata_fifo_src_data                                                   : std_logic_vector(33 downto 0);  -- key_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_012:in_0_data
	signal key_s1_agent_rdata_fifo_src_ready                                                  : std_logic;                      -- avalon_st_adapter_012:in_0_ready -> key_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_012_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_012:out_0_valid -> key_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_012_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_012:out_0_data -> key_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_012_out_0_ready                                                  : std_logic;                      -- key_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_012:out_0_ready
	signal avalon_st_adapter_012_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_012:out_0_error -> key_s1_agent:rdata_fifo_sink_error
	signal timer_0_s1_agent_rdata_fifo_src_valid                                              : std_logic;                      -- timer_0_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_013:in_0_valid
	signal timer_0_s1_agent_rdata_fifo_src_data                                               : std_logic_vector(33 downto 0);  -- timer_0_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_013:in_0_data
	signal timer_0_s1_agent_rdata_fifo_src_ready                                              : std_logic;                      -- avalon_st_adapter_013:in_0_ready -> timer_0_s1_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_013_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_013:out_0_valid -> timer_0_s1_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_013_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_013:out_0_data -> timer_0_s1_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_013_out_0_ready                                                  : std_logic;                      -- timer_0_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_013:out_0_ready
	signal avalon_st_adapter_013_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_013:out_0_error -> timer_0_s1_agent:rdata_fifo_sink_error
	signal spi_0_spi_control_port_agent_rdata_fifo_src_valid                                  : std_logic;                      -- spi_0_spi_control_port_agent:rdata_fifo_src_valid -> avalon_st_adapter_014:in_0_valid
	signal spi_0_spi_control_port_agent_rdata_fifo_src_data                                   : std_logic_vector(33 downto 0);  -- spi_0_spi_control_port_agent:rdata_fifo_src_data -> avalon_st_adapter_014:in_0_data
	signal spi_0_spi_control_port_agent_rdata_fifo_src_ready                                  : std_logic;                      -- avalon_st_adapter_014:in_0_ready -> spi_0_spi_control_port_agent:rdata_fifo_src_ready
	signal avalon_st_adapter_014_out_0_valid                                                  : std_logic;                      -- avalon_st_adapter_014:out_0_valid -> spi_0_spi_control_port_agent:rdata_fifo_sink_valid
	signal avalon_st_adapter_014_out_0_data                                                   : std_logic_vector(33 downto 0);  -- avalon_st_adapter_014:out_0_data -> spi_0_spi_control_port_agent:rdata_fifo_sink_data
	signal avalon_st_adapter_014_out_0_ready                                                  : std_logic;                      -- spi_0_spi_control_port_agent:rdata_fifo_sink_ready -> avalon_st_adapter_014:out_0_ready
	signal avalon_st_adapter_014_out_0_error                                                  : std_logic_vector(0 downto 0);   -- avalon_st_adapter_014:out_0_error -> spi_0_spi_control_port_agent:rdata_fifo_sink_error

begin

	nios2_gen2_0_data_master_translator : component lab62soc_mm_interconnect_0_nios2_gen2_0_data_master_translator
		generic map (
			AV_ADDRESS_W                => 28,
			AV_DATA_W                   => 32,
			AV_BURSTCOUNT_W             => 1,
			AV_BYTEENABLE_W             => 4,
			UAV_ADDRESS_W               => 28,
			UAV_BURSTCOUNT_W            => 3,
			USE_READ                    => 1,
			USE_WRITE                   => 1,
			USE_BEGINBURSTTRANSFER      => 0,
			USE_BEGINTRANSFER           => 0,
			USE_CHIPSELECT              => 0,
			USE_BURSTCOUNT              => 0,
			USE_READDATAVALID           => 0,
			USE_WAITREQUEST             => 1,
			USE_READRESPONSE            => 0,
			USE_WRITERESPONSE           => 0,
			AV_SYMBOLS_PER_WORD         => 4,
			AV_ADDRESS_SYMBOLS          => 1,
			AV_BURSTCOUNT_SYMBOLS       => 0,
			AV_CONSTANT_BURST_BEHAVIOR  => 0,
			UAV_CONSTANT_BURST_BEHAVIOR => 0,
			AV_LINEWRAPBURSTS           => 0,
			AV_REGISTERINCOMINGSIGNALS  => 1
		)
		port map (
			clk                    => clk_0_clk_clk,                                                               --                       clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                              --                     reset.reset
			uav_address            => nios2_gen2_0_data_master_translator_avalon_universal_master_0_address,       -- avalon_universal_master_0.address
			uav_burstcount         => nios2_gen2_0_data_master_translator_avalon_universal_master_0_burstcount,    --                          .burstcount
			uav_read               => nios2_gen2_0_data_master_translator_avalon_universal_master_0_read,          --                          .read
			uav_write              => nios2_gen2_0_data_master_translator_avalon_universal_master_0_write,         --                          .write
			uav_waitrequest        => nios2_gen2_0_data_master_translator_avalon_universal_master_0_waitrequest,   --                          .waitrequest
			uav_readdatavalid      => nios2_gen2_0_data_master_translator_avalon_universal_master_0_readdatavalid, --                          .readdatavalid
			uav_byteenable         => nios2_gen2_0_data_master_translator_avalon_universal_master_0_byteenable,    --                          .byteenable
			uav_readdata           => nios2_gen2_0_data_master_translator_avalon_universal_master_0_readdata,      --                          .readdata
			uav_writedata          => nios2_gen2_0_data_master_translator_avalon_universal_master_0_writedata,     --                          .writedata
			uav_lock               => nios2_gen2_0_data_master_translator_avalon_universal_master_0_lock,          --                          .lock
			uav_debugaccess        => nios2_gen2_0_data_master_translator_avalon_universal_master_0_debugaccess,   --                          .debugaccess
			av_address             => nios2_gen2_0_data_master_address,                                            --      avalon_anti_master_0.address
			av_waitrequest         => nios2_gen2_0_data_master_waitrequest,                                        --                          .waitrequest
			av_byteenable          => nios2_gen2_0_data_master_byteenable,                                         --                          .byteenable
			av_read                => nios2_gen2_0_data_master_read,                                               --                          .read
			av_readdata            => nios2_gen2_0_data_master_readdata,                                           --                          .readdata
			av_write               => nios2_gen2_0_data_master_write,                                              --                          .write
			av_writedata           => nios2_gen2_0_data_master_writedata,                                          --                          .writedata
			av_debugaccess         => nios2_gen2_0_data_master_debugaccess,                                        --                          .debugaccess
			av_burstcount          => "1",                                                                         --               (terminated)
			av_beginbursttransfer  => '0',                                                                         --               (terminated)
			av_begintransfer       => '0',                                                                         --               (terminated)
			av_chipselect          => '0',                                                                         --               (terminated)
			av_readdatavalid       => open,                                                                        --               (terminated)
			av_lock                => '0',                                                                         --               (terminated)
			uav_clken              => open,                                                                        --               (terminated)
			av_clken               => '1',                                                                         --               (terminated)
			uav_response           => "00",                                                                        --               (terminated)
			av_response            => open,                                                                        --               (terminated)
			uav_writeresponsevalid => '0',                                                                         --               (terminated)
			av_writeresponsevalid  => open                                                                         --               (terminated)
		);

	nios2_gen2_0_instruction_master_translator : component lab62soc_mm_interconnect_0_nios2_gen2_0_instruction_master_translator
		generic map (
			AV_ADDRESS_W                => 28,
			AV_DATA_W                   => 32,
			AV_BURSTCOUNT_W             => 1,
			AV_BYTEENABLE_W             => 4,
			UAV_ADDRESS_W               => 28,
			UAV_BURSTCOUNT_W            => 3,
			USE_READ                    => 1,
			USE_WRITE                   => 0,
			USE_BEGINBURSTTRANSFER      => 0,
			USE_BEGINTRANSFER           => 0,
			USE_CHIPSELECT              => 0,
			USE_BURSTCOUNT              => 0,
			USE_READDATAVALID           => 0,
			USE_WAITREQUEST             => 1,
			USE_READRESPONSE            => 0,
			USE_WRITERESPONSE           => 0,
			AV_SYMBOLS_PER_WORD         => 4,
			AV_ADDRESS_SYMBOLS          => 1,
			AV_BURSTCOUNT_SYMBOLS       => 0,
			AV_CONSTANT_BURST_BEHAVIOR  => 0,
			UAV_CONSTANT_BURST_BEHAVIOR => 0,
			AV_LINEWRAPBURSTS           => 1,
			AV_REGISTERINCOMINGSIGNALS  => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                                                      --                       clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                                     --                     reset.reset
			uav_address            => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_address,       -- avalon_universal_master_0.address
			uav_burstcount         => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_burstcount,    --                          .burstcount
			uav_read               => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_read,          --                          .read
			uav_write              => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_write,         --                          .write
			uav_waitrequest        => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_waitrequest,   --                          .waitrequest
			uav_readdatavalid      => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_readdatavalid, --                          .readdatavalid
			uav_byteenable         => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_byteenable,    --                          .byteenable
			uav_readdata           => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_readdata,      --                          .readdata
			uav_writedata          => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_writedata,     --                          .writedata
			uav_lock               => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_lock,          --                          .lock
			uav_debugaccess        => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_debugaccess,   --                          .debugaccess
			av_address             => nios2_gen2_0_instruction_master_address,                                            --      avalon_anti_master_0.address
			av_waitrequest         => nios2_gen2_0_instruction_master_waitrequest,                                        --                          .waitrequest
			av_read                => nios2_gen2_0_instruction_master_read,                                               --                          .read
			av_readdata            => nios2_gen2_0_instruction_master_readdata,                                           --                          .readdata
			av_burstcount          => "1",                                                                                --               (terminated)
			av_byteenable          => "1111",                                                                             --               (terminated)
			av_beginbursttransfer  => '0',                                                                                --               (terminated)
			av_begintransfer       => '0',                                                                                --               (terminated)
			av_chipselect          => '0',                                                                                --               (terminated)
			av_readdatavalid       => open,                                                                               --               (terminated)
			av_write               => '0',                                                                                --               (terminated)
			av_writedata           => "00000000000000000000000000000000",                                                 --               (terminated)
			av_lock                => '0',                                                                                --               (terminated)
			av_debugaccess         => '0',                                                                                --               (terminated)
			uav_clken              => open,                                                                               --               (terminated)
			av_clken               => '1',                                                                                --               (terminated)
			uav_response           => "00",                                                                               --               (terminated)
			av_response            => open,                                                                               --               (terminated)
			uav_writeresponsevalid => '0',                                                                                --               (terminated)
			av_writeresponsevalid  => open                                                                                --               (terminated)
		);

	jtag_uart_0_avalon_jtag_slave_translator : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_translator
		generic map (
			AV_ADDRESS_W                   => 1,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                        --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset,       --                    reset.reset
			uav_address            => jtag_uart_0_avalon_jtag_slave_agent_m0_address,       -- avalon_universal_slave_0.address
			uav_burstcount         => jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount,    --                         .burstcount
			uav_read               => jtag_uart_0_avalon_jtag_slave_agent_m0_read,          --                         .read
			uav_write              => jtag_uart_0_avalon_jtag_slave_agent_m0_write,         --                         .write
			uav_waitrequest        => jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest,   --                         .waitrequest
			uav_readdatavalid      => jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid, --                         .readdatavalid
			uav_byteenable         => jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable,    --                         .byteenable
			uav_readdata           => jtag_uart_0_avalon_jtag_slave_agent_m0_readdata,      --                         .readdata
			uav_writedata          => jtag_uart_0_avalon_jtag_slave_agent_m0_writedata,     --                         .writedata
			uav_lock               => jtag_uart_0_avalon_jtag_slave_agent_m0_lock,          --                         .lock
			uav_debugaccess        => jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess,   --                         .debugaccess
			av_address             => jtag_uart_0_avalon_jtag_slave_address,                --      avalon_anti_slave_0.address
			av_write               => jtag_uart_0_avalon_jtag_slave_write,                  --                         .write
			av_read                => jtag_uart_0_avalon_jtag_slave_read,                   --                         .read
			av_readdata            => jtag_uart_0_avalon_jtag_slave_readdata,               --                         .readdata
			av_writedata           => jtag_uart_0_avalon_jtag_slave_writedata,              --                         .writedata
			av_waitrequest         => jtag_uart_0_avalon_jtag_slave_waitrequest,            --                         .waitrequest
			av_chipselect          => jtag_uart_0_avalon_jtag_slave_chipselect,             --                         .chipselect
			av_begintransfer       => open,                                                 --              (terminated)
			av_beginbursttransfer  => open,                                                 --              (terminated)
			av_burstcount          => open,                                                 --              (terminated)
			av_byteenable          => open,                                                 --              (terminated)
			av_readdatavalid       => '0',                                                  --              (terminated)
			av_writebyteenable     => open,                                                 --              (terminated)
			av_lock                => open,                                                 --              (terminated)
			av_clken               => open,                                                 --              (terminated)
			uav_clken              => '0',                                                  --              (terminated)
			av_debugaccess         => open,                                                 --              (terminated)
			av_outputenable        => open,                                                 --              (terminated)
			uav_response           => open,                                                 --              (terminated)
			av_response            => "00",                                                 --              (terminated)
			uav_writeresponsevalid => open,                                                 --              (terminated)
			av_writeresponsevalid  => '0'                                                   --              (terminated)
		);

	sysid_qsys_0_control_slave_translator : component lab62soc_mm_interconnect_0_sysid_qsys_0_control_slave_translator
		generic map (
			AV_ADDRESS_W                   => 1,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 4,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                     --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset,    --                    reset.reset
			uav_address            => sysid_qsys_0_control_slave_agent_m0_address,       -- avalon_universal_slave_0.address
			uav_burstcount         => sysid_qsys_0_control_slave_agent_m0_burstcount,    --                         .burstcount
			uav_read               => sysid_qsys_0_control_slave_agent_m0_read,          --                         .read
			uav_write              => sysid_qsys_0_control_slave_agent_m0_write,         --                         .write
			uav_waitrequest        => sysid_qsys_0_control_slave_agent_m0_waitrequest,   --                         .waitrequest
			uav_readdatavalid      => sysid_qsys_0_control_slave_agent_m0_readdatavalid, --                         .readdatavalid
			uav_byteenable         => sysid_qsys_0_control_slave_agent_m0_byteenable,    --                         .byteenable
			uav_readdata           => sysid_qsys_0_control_slave_agent_m0_readdata,      --                         .readdata
			uav_writedata          => sysid_qsys_0_control_slave_agent_m0_writedata,     --                         .writedata
			uav_lock               => sysid_qsys_0_control_slave_agent_m0_lock,          --                         .lock
			uav_debugaccess        => sysid_qsys_0_control_slave_agent_m0_debugaccess,   --                         .debugaccess
			av_address             => sysid_qsys_0_control_slave_address,                --      avalon_anti_slave_0.address
			av_readdata            => sysid_qsys_0_control_slave_readdata,               --                         .readdata
			av_write               => open,                                              --              (terminated)
			av_read                => open,                                              --              (terminated)
			av_writedata           => open,                                              --              (terminated)
			av_begintransfer       => open,                                              --              (terminated)
			av_beginbursttransfer  => open,                                              --              (terminated)
			av_burstcount          => open,                                              --              (terminated)
			av_byteenable          => open,                                              --              (terminated)
			av_readdatavalid       => '0',                                               --              (terminated)
			av_waitrequest         => '0',                                               --              (terminated)
			av_writebyteenable     => open,                                              --              (terminated)
			av_lock                => open,                                              --              (terminated)
			av_chipselect          => open,                                              --              (terminated)
			av_clken               => open,                                              --              (terminated)
			uav_clken              => '0',                                               --              (terminated)
			av_debugaccess         => open,                                              --              (terminated)
			av_outputenable        => open,                                              --              (terminated)
			uav_response           => open,                                              --              (terminated)
			av_response            => "00",                                              --              (terminated)
			uav_writeresponsevalid => open,                                              --              (terminated)
			av_writeresponsevalid  => '0'                                                --              (terminated)
		);

	nios2_gen2_0_debug_mem_slave_translator : component lab62soc_mm_interconnect_0_nios2_gen2_0_debug_mem_slave_translator
		generic map (
			AV_ADDRESS_W                   => 9,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 4,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                       --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset,      --                    reset.reset
			uav_address            => nios2_gen2_0_debug_mem_slave_agent_m0_address,       -- avalon_universal_slave_0.address
			uav_burstcount         => nios2_gen2_0_debug_mem_slave_agent_m0_burstcount,    --                         .burstcount
			uav_read               => nios2_gen2_0_debug_mem_slave_agent_m0_read,          --                         .read
			uav_write              => nios2_gen2_0_debug_mem_slave_agent_m0_write,         --                         .write
			uav_waitrequest        => nios2_gen2_0_debug_mem_slave_agent_m0_waitrequest,   --                         .waitrequest
			uav_readdatavalid      => nios2_gen2_0_debug_mem_slave_agent_m0_readdatavalid, --                         .readdatavalid
			uav_byteenable         => nios2_gen2_0_debug_mem_slave_agent_m0_byteenable,    --                         .byteenable
			uav_readdata           => nios2_gen2_0_debug_mem_slave_agent_m0_readdata,      --                         .readdata
			uav_writedata          => nios2_gen2_0_debug_mem_slave_agent_m0_writedata,     --                         .writedata
			uav_lock               => nios2_gen2_0_debug_mem_slave_agent_m0_lock,          --                         .lock
			uav_debugaccess        => nios2_gen2_0_debug_mem_slave_agent_m0_debugaccess,   --                         .debugaccess
			av_address             => nios2_gen2_0_debug_mem_slave_address,                --      avalon_anti_slave_0.address
			av_write               => nios2_gen2_0_debug_mem_slave_write,                  --                         .write
			av_read                => nios2_gen2_0_debug_mem_slave_read,                   --                         .read
			av_readdata            => nios2_gen2_0_debug_mem_slave_readdata,               --                         .readdata
			av_writedata           => nios2_gen2_0_debug_mem_slave_writedata,              --                         .writedata
			av_byteenable          => nios2_gen2_0_debug_mem_slave_byteenable,             --                         .byteenable
			av_waitrequest         => nios2_gen2_0_debug_mem_slave_waitrequest,            --                         .waitrequest
			av_debugaccess         => nios2_gen2_0_debug_mem_slave_debugaccess,            --                         .debugaccess
			av_begintransfer       => open,                                                --              (terminated)
			av_beginbursttransfer  => open,                                                --              (terminated)
			av_burstcount          => open,                                                --              (terminated)
			av_readdatavalid       => '0',                                                 --              (terminated)
			av_writebyteenable     => open,                                                --              (terminated)
			av_lock                => open,                                                --              (terminated)
			av_chipselect          => open,                                                --              (terminated)
			av_clken               => open,                                                --              (terminated)
			uav_clken              => '0',                                                 --              (terminated)
			av_outputenable        => open,                                                --              (terminated)
			uav_response           => open,                                                --              (terminated)
			av_response            => "00",                                                --              (terminated)
			uav_writeresponsevalid => open,                                                --              (terminated)
			av_writeresponsevalid  => '0'                                                  --              (terminated)
		);

	sdram_pll_pll_slave_translator : component lab62soc_mm_interconnect_0_sdram_pll_pll_slave_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 4,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 0,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => sdram_pll_pll_slave_agent_m0_address,           -- avalon_universal_slave_0.address
			uav_burstcount         => sdram_pll_pll_slave_agent_m0_burstcount,        --                         .burstcount
			uav_read               => sdram_pll_pll_slave_agent_m0_read,              --                         .read
			uav_write              => sdram_pll_pll_slave_agent_m0_write,             --                         .write
			uav_waitrequest        => sdram_pll_pll_slave_agent_m0_waitrequest,       --                         .waitrequest
			uav_readdatavalid      => sdram_pll_pll_slave_agent_m0_readdatavalid,     --                         .readdatavalid
			uav_byteenable         => sdram_pll_pll_slave_agent_m0_byteenable,        --                         .byteenable
			uav_readdata           => sdram_pll_pll_slave_agent_m0_readdata,          --                         .readdata
			uav_writedata          => sdram_pll_pll_slave_agent_m0_writedata,         --                         .writedata
			uav_lock               => sdram_pll_pll_slave_agent_m0_lock,              --                         .lock
			uav_debugaccess        => sdram_pll_pll_slave_agent_m0_debugaccess,       --                         .debugaccess
			av_address             => sdram_pll_pll_slave_address,                    --      avalon_anti_slave_0.address
			av_write               => sdram_pll_pll_slave_write,                      --                         .write
			av_read                => sdram_pll_pll_slave_read,                       --                         .read
			av_readdata            => sdram_pll_pll_slave_readdata,                   --                         .readdata
			av_writedata           => sdram_pll_pll_slave_writedata,                  --                         .writedata
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_chipselect          => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	onchip_memory2_0_s1_translator : component lab62soc_mm_interconnect_0_onchip_memory2_0_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 4,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 1,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 0,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => onchip_memory2_0_s1_agent_m0_address,           -- avalon_universal_slave_0.address
			uav_burstcount         => onchip_memory2_0_s1_agent_m0_burstcount,        --                         .burstcount
			uav_read               => onchip_memory2_0_s1_agent_m0_read,              --                         .read
			uav_write              => onchip_memory2_0_s1_agent_m0_write,             --                         .write
			uav_waitrequest        => onchip_memory2_0_s1_agent_m0_waitrequest,       --                         .waitrequest
			uav_readdatavalid      => onchip_memory2_0_s1_agent_m0_readdatavalid,     --                         .readdatavalid
			uav_byteenable         => onchip_memory2_0_s1_agent_m0_byteenable,        --                         .byteenable
			uav_readdata           => onchip_memory2_0_s1_agent_m0_readdata,          --                         .readdata
			uav_writedata          => onchip_memory2_0_s1_agent_m0_writedata,         --                         .writedata
			uav_lock               => onchip_memory2_0_s1_agent_m0_lock,              --                         .lock
			uav_debugaccess        => onchip_memory2_0_s1_agent_m0_debugaccess,       --                         .debugaccess
			av_address             => onchip_memory2_0_s1_address,                    --      avalon_anti_slave_0.address
			av_write               => onchip_memory2_0_s1_write,                      --                         .write
			av_readdata            => onchip_memory2_0_s1_readdata,                   --                         .readdata
			av_writedata           => onchip_memory2_0_s1_writedata,                  --                         .writedata
			av_byteenable          => onchip_memory2_0_s1_byteenable,                 --                         .byteenable
			av_chipselect          => onchip_memory2_0_s1_chipselect,                 --                         .chipselect
			av_clken               => onchip_memory2_0_s1_clken,                      --                         .clken
			av_read                => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	sdram_s1_translator : component lab62soc_mm_interconnect_0_sdram_s1_translator
		generic map (
			AV_ADDRESS_W                   => 25,
			AV_DATA_W                      => 16,
			UAV_DATA_W                     => 16,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 2,
			UAV_BYTEENABLE_W               => 2,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 2,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 1,
			USE_WAITREQUEST                => 1,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 2,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => sdram_pll_c0_clk,                        --                      clk.clk
			reset                  => sdram_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => sdram_s1_agent_m0_address,               -- avalon_universal_slave_0.address
			uav_burstcount         => sdram_s1_agent_m0_burstcount,            --                         .burstcount
			uav_read               => sdram_s1_agent_m0_read,                  --                         .read
			uav_write              => sdram_s1_agent_m0_write,                 --                         .write
			uav_waitrequest        => sdram_s1_agent_m0_waitrequest,           --                         .waitrequest
			uav_readdatavalid      => sdram_s1_agent_m0_readdatavalid,         --                         .readdatavalid
			uav_byteenable         => sdram_s1_agent_m0_byteenable,            --                         .byteenable
			uav_readdata           => sdram_s1_agent_m0_readdata,              --                         .readdata
			uav_writedata          => sdram_s1_agent_m0_writedata,             --                         .writedata
			uav_lock               => sdram_s1_agent_m0_lock,                  --                         .lock
			uav_debugaccess        => sdram_s1_agent_m0_debugaccess,           --                         .debugaccess
			av_address             => sdram_s1_address,                        --      avalon_anti_slave_0.address
			av_write               => sdram_s1_write,                          --                         .write
			av_read                => sdram_s1_read,                           --                         .read
			av_readdata            => sdram_s1_readdata,                       --                         .readdata
			av_writedata           => sdram_s1_writedata,                      --                         .writedata
			av_byteenable          => sdram_s1_byteenable,                     --                         .byteenable
			av_readdatavalid       => sdram_s1_readdatavalid,                  --                         .readdatavalid
			av_waitrequest         => sdram_s1_waitrequest,                    --                         .waitrequest
			av_chipselect          => sdram_s1_chipselect,                     --                         .chipselect
			av_begintransfer       => open,                                    --              (terminated)
			av_beginbursttransfer  => open,                                    --              (terminated)
			av_burstcount          => open,                                    --              (terminated)
			av_writebyteenable     => open,                                    --              (terminated)
			av_lock                => open,                                    --              (terminated)
			av_clken               => open,                                    --              (terminated)
			uav_clken              => '0',                                     --              (terminated)
			av_debugaccess         => open,                                    --              (terminated)
			av_outputenable        => open,                                    --              (terminated)
			uav_response           => open,                                    --              (terminated)
			av_response            => "00",                                    --              (terminated)
			uav_writeresponsevalid => open,                                    --              (terminated)
			av_writeresponsevalid  => '0'                                      --              (terminated)
		);

	keycode_s1_translator : component lab62soc_mm_interconnect_0_keycode_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => keycode_s1_agent_m0_address,                    -- avalon_universal_slave_0.address
			uav_burstcount         => keycode_s1_agent_m0_burstcount,                 --                         .burstcount
			uav_read               => keycode_s1_agent_m0_read,                       --                         .read
			uav_write              => keycode_s1_agent_m0_write,                      --                         .write
			uav_waitrequest        => keycode_s1_agent_m0_waitrequest,                --                         .waitrequest
			uav_readdatavalid      => keycode_s1_agent_m0_readdatavalid,              --                         .readdatavalid
			uav_byteenable         => keycode_s1_agent_m0_byteenable,                 --                         .byteenable
			uav_readdata           => keycode_s1_agent_m0_readdata,                   --                         .readdata
			uav_writedata          => keycode_s1_agent_m0_writedata,                  --                         .writedata
			uav_lock               => keycode_s1_agent_m0_lock,                       --                         .lock
			uav_debugaccess        => keycode_s1_agent_m0_debugaccess,                --                         .debugaccess
			av_address             => keycode_s1_address,                             --      avalon_anti_slave_0.address
			av_write               => keycode_s1_write,                               --                         .write
			av_readdata            => keycode_s1_readdata,                            --                         .readdata
			av_writedata           => keycode_s1_writedata,                           --                         .writedata
			av_chipselect          => keycode_s1_chipselect,                          --                         .chipselect
			av_read                => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	usb_irq_s1_translator : component lab62soc_mm_interconnect_0_usb_irq_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => usb_irq_s1_agent_m0_address,                    -- avalon_universal_slave_0.address
			uav_burstcount         => usb_irq_s1_agent_m0_burstcount,                 --                         .burstcount
			uav_read               => usb_irq_s1_agent_m0_read,                       --                         .read
			uav_write              => usb_irq_s1_agent_m0_write,                      --                         .write
			uav_waitrequest        => usb_irq_s1_agent_m0_waitrequest,                --                         .waitrequest
			uav_readdatavalid      => usb_irq_s1_agent_m0_readdatavalid,              --                         .readdatavalid
			uav_byteenable         => usb_irq_s1_agent_m0_byteenable,                 --                         .byteenable
			uav_readdata           => usb_irq_s1_agent_m0_readdata,                   --                         .readdata
			uav_writedata          => usb_irq_s1_agent_m0_writedata,                  --                         .writedata
			uav_lock               => usb_irq_s1_agent_m0_lock,                       --                         .lock
			uav_debugaccess        => usb_irq_s1_agent_m0_debugaccess,                --                         .debugaccess
			av_address             => usb_irq_s1_address,                             --      avalon_anti_slave_0.address
			av_readdata            => usb_irq_s1_readdata,                            --                         .readdata
			av_write               => open,                                           --              (terminated)
			av_read                => open,                                           --              (terminated)
			av_writedata           => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_chipselect          => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	usb_gpx_s1_translator : component lab62soc_mm_interconnect_0_usb_irq_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => usb_gpx_s1_agent_m0_address,                    -- avalon_universal_slave_0.address
			uav_burstcount         => usb_gpx_s1_agent_m0_burstcount,                 --                         .burstcount
			uav_read               => usb_gpx_s1_agent_m0_read,                       --                         .read
			uav_write              => usb_gpx_s1_agent_m0_write,                      --                         .write
			uav_waitrequest        => usb_gpx_s1_agent_m0_waitrequest,                --                         .waitrequest
			uav_readdatavalid      => usb_gpx_s1_agent_m0_readdatavalid,              --                         .readdatavalid
			uav_byteenable         => usb_gpx_s1_agent_m0_byteenable,                 --                         .byteenable
			uav_readdata           => usb_gpx_s1_agent_m0_readdata,                   --                         .readdata
			uav_writedata          => usb_gpx_s1_agent_m0_writedata,                  --                         .writedata
			uav_lock               => usb_gpx_s1_agent_m0_lock,                       --                         .lock
			uav_debugaccess        => usb_gpx_s1_agent_m0_debugaccess,                --                         .debugaccess
			av_address             => usb_gpx_s1_address,                             --      avalon_anti_slave_0.address
			av_readdata            => usb_gpx_s1_readdata,                            --                         .readdata
			av_write               => open,                                           --              (terminated)
			av_read                => open,                                           --              (terminated)
			av_writedata           => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_chipselect          => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	usb_rst_s1_translator : component lab62soc_mm_interconnect_0_keycode_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => usb_rst_s1_agent_m0_address,                    -- avalon_universal_slave_0.address
			uav_burstcount         => usb_rst_s1_agent_m0_burstcount,                 --                         .burstcount
			uav_read               => usb_rst_s1_agent_m0_read,                       --                         .read
			uav_write              => usb_rst_s1_agent_m0_write,                      --                         .write
			uav_waitrequest        => usb_rst_s1_agent_m0_waitrequest,                --                         .waitrequest
			uav_readdatavalid      => usb_rst_s1_agent_m0_readdatavalid,              --                         .readdatavalid
			uav_byteenable         => usb_rst_s1_agent_m0_byteenable,                 --                         .byteenable
			uav_readdata           => usb_rst_s1_agent_m0_readdata,                   --                         .readdata
			uav_writedata          => usb_rst_s1_agent_m0_writedata,                  --                         .writedata
			uav_lock               => usb_rst_s1_agent_m0_lock,                       --                         .lock
			uav_debugaccess        => usb_rst_s1_agent_m0_debugaccess,                --                         .debugaccess
			av_address             => usb_rst_s1_address,                             --      avalon_anti_slave_0.address
			av_write               => usb_rst_s1_write,                               --                         .write
			av_readdata            => usb_rst_s1_readdata,                            --                         .readdata
			av_writedata           => usb_rst_s1_writedata,                           --                         .writedata
			av_chipselect          => usb_rst_s1_chipselect,                          --                         .chipselect
			av_read                => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	hex_digits_pio_s1_translator : component lab62soc_mm_interconnect_0_keycode_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => hex_digits_pio_s1_agent_m0_address,             -- avalon_universal_slave_0.address
			uav_burstcount         => hex_digits_pio_s1_agent_m0_burstcount,          --                         .burstcount
			uav_read               => hex_digits_pio_s1_agent_m0_read,                --                         .read
			uav_write              => hex_digits_pio_s1_agent_m0_write,               --                         .write
			uav_waitrequest        => hex_digits_pio_s1_agent_m0_waitrequest,         --                         .waitrequest
			uav_readdatavalid      => hex_digits_pio_s1_agent_m0_readdatavalid,       --                         .readdatavalid
			uav_byteenable         => hex_digits_pio_s1_agent_m0_byteenable,          --                         .byteenable
			uav_readdata           => hex_digits_pio_s1_agent_m0_readdata,            --                         .readdata
			uav_writedata          => hex_digits_pio_s1_agent_m0_writedata,           --                         .writedata
			uav_lock               => hex_digits_pio_s1_agent_m0_lock,                --                         .lock
			uav_debugaccess        => hex_digits_pio_s1_agent_m0_debugaccess,         --                         .debugaccess
			av_address             => hex_digits_pio_s1_address,                      --      avalon_anti_slave_0.address
			av_write               => hex_digits_pio_s1_write,                        --                         .write
			av_readdata            => hex_digits_pio_s1_readdata,                     --                         .readdata
			av_writedata           => hex_digits_pio_s1_writedata,                    --                         .writedata
			av_chipselect          => hex_digits_pio_s1_chipselect,                   --                         .chipselect
			av_read                => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	leds_pio_s1_translator : component lab62soc_mm_interconnect_0_keycode_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => leds_pio_s1_agent_m0_address,                   -- avalon_universal_slave_0.address
			uav_burstcount         => leds_pio_s1_agent_m0_burstcount,                --                         .burstcount
			uav_read               => leds_pio_s1_agent_m0_read,                      --                         .read
			uav_write              => leds_pio_s1_agent_m0_write,                     --                         .write
			uav_waitrequest        => leds_pio_s1_agent_m0_waitrequest,               --                         .waitrequest
			uav_readdatavalid      => leds_pio_s1_agent_m0_readdatavalid,             --                         .readdatavalid
			uav_byteenable         => leds_pio_s1_agent_m0_byteenable,                --                         .byteenable
			uav_readdata           => leds_pio_s1_agent_m0_readdata,                  --                         .readdata
			uav_writedata          => leds_pio_s1_agent_m0_writedata,                 --                         .writedata
			uav_lock               => leds_pio_s1_agent_m0_lock,                      --                         .lock
			uav_debugaccess        => leds_pio_s1_agent_m0_debugaccess,               --                         .debugaccess
			av_address             => leds_pio_s1_address,                            --      avalon_anti_slave_0.address
			av_write               => leds_pio_s1_write,                              --                         .write
			av_readdata            => leds_pio_s1_readdata,                           --                         .readdata
			av_writedata           => leds_pio_s1_writedata,                          --                         .writedata
			av_chipselect          => leds_pio_s1_chipselect,                         --                         .chipselect
			av_read                => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	key_s1_translator : component lab62soc_mm_interconnect_0_usb_irq_s1_translator
		generic map (
			AV_ADDRESS_W                   => 2,
			AV_DATA_W                      => 32,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => key_s1_agent_m0_address,                        -- avalon_universal_slave_0.address
			uav_burstcount         => key_s1_agent_m0_burstcount,                     --                         .burstcount
			uav_read               => key_s1_agent_m0_read,                           --                         .read
			uav_write              => key_s1_agent_m0_write,                          --                         .write
			uav_waitrequest        => key_s1_agent_m0_waitrequest,                    --                         .waitrequest
			uav_readdatavalid      => key_s1_agent_m0_readdatavalid,                  --                         .readdatavalid
			uav_byteenable         => key_s1_agent_m0_byteenable,                     --                         .byteenable
			uav_readdata           => key_s1_agent_m0_readdata,                       --                         .readdata
			uav_writedata          => key_s1_agent_m0_writedata,                      --                         .writedata
			uav_lock               => key_s1_agent_m0_lock,                           --                         .lock
			uav_debugaccess        => key_s1_agent_m0_debugaccess,                    --                         .debugaccess
			av_address             => key_s1_address,                                 --      avalon_anti_slave_0.address
			av_readdata            => key_s1_readdata,                                --                         .readdata
			av_write               => open,                                           --              (terminated)
			av_read                => open,                                           --              (terminated)
			av_writedata           => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_chipselect          => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	timer_0_s1_translator : component lab62soc_mm_interconnect_0_timer_0_s1_translator
		generic map (
			AV_ADDRESS_W                   => 4,
			AV_DATA_W                      => 16,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 0,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => timer_0_s1_agent_m0_address,                    -- avalon_universal_slave_0.address
			uav_burstcount         => timer_0_s1_agent_m0_burstcount,                 --                         .burstcount
			uav_read               => timer_0_s1_agent_m0_read,                       --                         .read
			uav_write              => timer_0_s1_agent_m0_write,                      --                         .write
			uav_waitrequest        => timer_0_s1_agent_m0_waitrequest,                --                         .waitrequest
			uav_readdatavalid      => timer_0_s1_agent_m0_readdatavalid,              --                         .readdatavalid
			uav_byteenable         => timer_0_s1_agent_m0_byteenable,                 --                         .byteenable
			uav_readdata           => timer_0_s1_agent_m0_readdata,                   --                         .readdata
			uav_writedata          => timer_0_s1_agent_m0_writedata,                  --                         .writedata
			uav_lock               => timer_0_s1_agent_m0_lock,                       --                         .lock
			uav_debugaccess        => timer_0_s1_agent_m0_debugaccess,                --                         .debugaccess
			av_address             => timer_0_s1_address,                             --      avalon_anti_slave_0.address
			av_write               => timer_0_s1_write,                               --                         .write
			av_readdata            => timer_0_s1_readdata,                            --                         .readdata
			av_writedata           => timer_0_s1_writedata,                           --                         .writedata
			av_chipselect          => timer_0_s1_chipselect,                          --                         .chipselect
			av_read                => open,                                           --              (terminated)
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	spi_0_spi_control_port_translator : component lab62soc_mm_interconnect_0_spi_0_spi_control_port_translator
		generic map (
			AV_ADDRESS_W                   => 3,
			AV_DATA_W                      => 16,
			UAV_DATA_W                     => 32,
			AV_BURSTCOUNT_W                => 1,
			AV_BYTEENABLE_W                => 1,
			UAV_BYTEENABLE_W               => 4,
			UAV_ADDRESS_W                  => 28,
			UAV_BURSTCOUNT_W               => 3,
			AV_READLATENCY                 => 0,
			USE_READDATAVALID              => 0,
			USE_WAITREQUEST                => 0,
			USE_UAV_CLKEN                  => 0,
			USE_READRESPONSE               => 0,
			USE_WRITERESPONSE              => 0,
			AV_SYMBOLS_PER_WORD            => 4,
			AV_ADDRESS_SYMBOLS             => 0,
			AV_BURSTCOUNT_SYMBOLS          => 0,
			AV_CONSTANT_BURST_BEHAVIOR     => 0,
			UAV_CONSTANT_BURST_BEHAVIOR    => 0,
			AV_REQUIRE_UNALIGNED_ADDRESSES => 0,
			CHIPSELECT_THROUGH_READLATENCY => 0,
			AV_READ_WAIT_CYCLES            => 1,
			AV_WRITE_WAIT_CYCLES           => 1,
			AV_SETUP_WAIT_CYCLES           => 0,
			AV_DATA_HOLD_CYCLES            => 0
		)
		port map (
			clk                    => clk_0_clk_clk,                                  --                      clk.clk
			reset                  => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --                    reset.reset
			uav_address            => spi_0_spi_control_port_agent_m0_address,        -- avalon_universal_slave_0.address
			uav_burstcount         => spi_0_spi_control_port_agent_m0_burstcount,     --                         .burstcount
			uav_read               => spi_0_spi_control_port_agent_m0_read,           --                         .read
			uav_write              => spi_0_spi_control_port_agent_m0_write,          --                         .write
			uav_waitrequest        => spi_0_spi_control_port_agent_m0_waitrequest,    --                         .waitrequest
			uav_readdatavalid      => spi_0_spi_control_port_agent_m0_readdatavalid,  --                         .readdatavalid
			uav_byteenable         => spi_0_spi_control_port_agent_m0_byteenable,     --                         .byteenable
			uav_readdata           => spi_0_spi_control_port_agent_m0_readdata,       --                         .readdata
			uav_writedata          => spi_0_spi_control_port_agent_m0_writedata,      --                         .writedata
			uav_lock               => spi_0_spi_control_port_agent_m0_lock,           --                         .lock
			uav_debugaccess        => spi_0_spi_control_port_agent_m0_debugaccess,    --                         .debugaccess
			av_address             => spi_0_spi_control_port_address,                 --      avalon_anti_slave_0.address
			av_write               => spi_0_spi_control_port_write,                   --                         .write
			av_read                => spi_0_spi_control_port_read,                    --                         .read
			av_readdata            => spi_0_spi_control_port_readdata,                --                         .readdata
			av_writedata           => spi_0_spi_control_port_writedata,               --                         .writedata
			av_chipselect          => spi_0_spi_control_port_chipselect,              --                         .chipselect
			av_begintransfer       => open,                                           --              (terminated)
			av_beginbursttransfer  => open,                                           --              (terminated)
			av_burstcount          => open,                                           --              (terminated)
			av_byteenable          => open,                                           --              (terminated)
			av_readdatavalid       => '0',                                            --              (terminated)
			av_waitrequest         => '0',                                            --              (terminated)
			av_writebyteenable     => open,                                           --              (terminated)
			av_lock                => open,                                           --              (terminated)
			av_clken               => open,                                           --              (terminated)
			uav_clken              => '0',                                            --              (terminated)
			av_debugaccess         => open,                                           --              (terminated)
			av_outputenable        => open,                                           --              (terminated)
			uav_response           => open,                                           --              (terminated)
			av_response            => "00",                                           --              (terminated)
			uav_writeresponsevalid => open,                                           --              (terminated)
			av_writeresponsevalid  => '0'                                             --              (terminated)
		);

	nios2_gen2_0_data_master_agent : component altera_merlin_master_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_QOS_H                 => 84,
			PKT_QOS_L                 => 84,
			PKT_DATA_SIDEBAND_H       => 82,
			PKT_DATA_SIDEBAND_L       => 82,
			PKT_ADDR_SIDEBAND_H       => 81,
			PKT_ADDR_SIDEBAND_L       => 81,
			PKT_BURST_TYPE_H          => 80,
			PKT_BURST_TYPE_L          => 79,
			PKT_CACHE_H               => 100,
			PKT_CACHE_L               => 97,
			PKT_THREAD_ID_H           => 93,
			PKT_THREAD_ID_L           => 93,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_EXCLUSIVE       => 69,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			ST_DATA_W                 => 106,
			ST_CHANNEL_W              => 15,
			AV_BURSTCOUNT_W           => 3,
			SUPPRESS_0_BYTEEN_RSP     => 0,
			ID                        => 0,
			BURSTWRAP_VALUE           => 7,
			CACHE_VALUE               => 0,
			SECURE_ACCESS_BIT         => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0
		)
		port map (
			clk                   => clk_0_clk_clk,                                                               --       clk.clk
			reset                 => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                              -- clk_reset.reset
			av_address            => nios2_gen2_0_data_master_translator_avalon_universal_master_0_address,       --        av.address
			av_write              => nios2_gen2_0_data_master_translator_avalon_universal_master_0_write,         --          .write
			av_read               => nios2_gen2_0_data_master_translator_avalon_universal_master_0_read,          --          .read
			av_writedata          => nios2_gen2_0_data_master_translator_avalon_universal_master_0_writedata,     --          .writedata
			av_readdata           => nios2_gen2_0_data_master_translator_avalon_universal_master_0_readdata,      --          .readdata
			av_waitrequest        => nios2_gen2_0_data_master_translator_avalon_universal_master_0_waitrequest,   --          .waitrequest
			av_readdatavalid      => nios2_gen2_0_data_master_translator_avalon_universal_master_0_readdatavalid, --          .readdatavalid
			av_byteenable         => nios2_gen2_0_data_master_translator_avalon_universal_master_0_byteenable,    --          .byteenable
			av_burstcount         => nios2_gen2_0_data_master_translator_avalon_universal_master_0_burstcount,    --          .burstcount
			av_debugaccess        => nios2_gen2_0_data_master_translator_avalon_universal_master_0_debugaccess,   --          .debugaccess
			av_lock               => nios2_gen2_0_data_master_translator_avalon_universal_master_0_lock,          --          .lock
			cp_valid              => nios2_gen2_0_data_master_agent_cp_valid,                                     --        cp.valid
			cp_data               => nios2_gen2_0_data_master_agent_cp_data,                                      --          .data
			cp_startofpacket      => nios2_gen2_0_data_master_agent_cp_startofpacket,                             --          .startofpacket
			cp_endofpacket        => nios2_gen2_0_data_master_agent_cp_endofpacket,                               --          .endofpacket
			cp_ready              => nios2_gen2_0_data_master_agent_cp_ready,                                     --          .ready
			rp_valid              => rsp_mux_src_valid,                                                           --        rp.valid
			rp_data               => rsp_mux_src_data,                                                            --          .data
			rp_channel            => rsp_mux_src_channel,                                                         --          .channel
			rp_startofpacket      => rsp_mux_src_startofpacket,                                                   --          .startofpacket
			rp_endofpacket        => rsp_mux_src_endofpacket,                                                     --          .endofpacket
			rp_ready              => rsp_mux_src_ready,                                                           --          .ready
			av_response           => open,                                                                        -- (terminated)
			av_writeresponsevalid => open                                                                         -- (terminated)
		);

	nios2_gen2_0_instruction_master_agent : component altera_merlin_master_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_QOS_H                 => 84,
			PKT_QOS_L                 => 84,
			PKT_DATA_SIDEBAND_H       => 82,
			PKT_DATA_SIDEBAND_L       => 82,
			PKT_ADDR_SIDEBAND_H       => 81,
			PKT_ADDR_SIDEBAND_L       => 81,
			PKT_BURST_TYPE_H          => 80,
			PKT_BURST_TYPE_L          => 79,
			PKT_CACHE_H               => 100,
			PKT_CACHE_L               => 97,
			PKT_THREAD_ID_H           => 93,
			PKT_THREAD_ID_L           => 93,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_EXCLUSIVE       => 69,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			ST_DATA_W                 => 106,
			ST_CHANNEL_W              => 15,
			AV_BURSTCOUNT_W           => 3,
			SUPPRESS_0_BYTEEN_RSP     => 0,
			ID                        => 1,
			BURSTWRAP_VALUE           => 3,
			CACHE_VALUE               => 0,
			SECURE_ACCESS_BIT         => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0
		)
		port map (
			clk                   => clk_0_clk_clk,                                                                      --       clk.clk
			reset                 => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                                     -- clk_reset.reset
			av_address            => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_address,       --        av.address
			av_write              => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_write,         --          .write
			av_read               => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_read,          --          .read
			av_writedata          => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_writedata,     --          .writedata
			av_readdata           => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_readdata,      --          .readdata
			av_waitrequest        => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_waitrequest,   --          .waitrequest
			av_readdatavalid      => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_readdatavalid, --          .readdatavalid
			av_byteenable         => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_byteenable,    --          .byteenable
			av_burstcount         => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_burstcount,    --          .burstcount
			av_debugaccess        => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_debugaccess,   --          .debugaccess
			av_lock               => nios2_gen2_0_instruction_master_translator_avalon_universal_master_0_lock,          --          .lock
			cp_valid              => nios2_gen2_0_instruction_master_agent_cp_valid,                                     --        cp.valid
			cp_data               => nios2_gen2_0_instruction_master_agent_cp_data,                                      --          .data
			cp_startofpacket      => nios2_gen2_0_instruction_master_agent_cp_startofpacket,                             --          .startofpacket
			cp_endofpacket        => nios2_gen2_0_instruction_master_agent_cp_endofpacket,                               --          .endofpacket
			cp_ready              => nios2_gen2_0_instruction_master_agent_cp_ready,                                     --          .ready
			rp_valid              => rsp_mux_001_src_valid,                                                              --        rp.valid
			rp_data               => rsp_mux_001_src_data,                                                               --          .data
			rp_channel            => rsp_mux_001_src_channel,                                                            --          .channel
			rp_startofpacket      => rsp_mux_001_src_startofpacket,                                                      --          .startofpacket
			rp_endofpacket        => rsp_mux_001_src_endofpacket,                                                        --          .endofpacket
			rp_ready              => rsp_mux_001_src_ready,                                                              --          .ready
			av_response           => open,                                                                               -- (terminated)
			av_writeresponsevalid => open                                                                                -- (terminated)
		);

	jtag_uart_0_avalon_jtag_slave_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                 --       clk_reset.reset
			m0_address              => jtag_uart_0_avalon_jtag_slave_agent_m0_address,                 --              m0.address
			m0_burstcount           => jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount,              --                .burstcount
			m0_byteenable           => jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable,              --                .byteenable
			m0_debugaccess          => jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess,             --                .debugaccess
			m0_lock                 => jtag_uart_0_avalon_jtag_slave_agent_m0_lock,                    --                .lock
			m0_readdata             => jtag_uart_0_avalon_jtag_slave_agent_m0_readdata,                --                .readdata
			m0_readdatavalid        => jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid,           --                .readdatavalid
			m0_read                 => jtag_uart_0_avalon_jtag_slave_agent_m0_read,                    --                .read
			m0_waitrequest          => jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest,             --                .waitrequest
			m0_writedata            => jtag_uart_0_avalon_jtag_slave_agent_m0_writedata,               --                .writedata
			m0_write                => jtag_uart_0_avalon_jtag_slave_agent_m0_write,                   --                .write
			rp_endofpacket          => jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket,             --              rp.endofpacket
			rp_ready                => jtag_uart_0_avalon_jtag_slave_agent_rp_ready,                   --                .ready
			rp_valid                => jtag_uart_0_avalon_jtag_slave_agent_rp_valid,                   --                .valid
			rp_data                 => jtag_uart_0_avalon_jtag_slave_agent_rp_data,                    --                .data
			rp_startofpacket        => jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket,           --                .startofpacket
			cp_ready                => cmd_mux_src_ready,                                              --              cp.ready
			cp_valid                => cmd_mux_src_valid,                                              --                .valid
			cp_data                 => cmd_mux_src_data,                                               --                .data
			cp_startofpacket        => cmd_mux_src_startofpacket,                                      --                .startofpacket
			cp_endofpacket          => cmd_mux_src_endofpacket,                                        --                .endofpacket
			cp_channel              => cmd_mux_src_channel,                                            --                .channel
			rf_sink_ready           => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready,         --         rf_sink.ready
			rf_sink_valid           => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid,         --                .valid
			rf_sink_startofpacket   => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket, --                .startofpacket
			rf_sink_endofpacket     => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket,   --                .endofpacket
			rf_sink_data            => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data,          --                .data
			rf_source_ready         => jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready,            --       rf_source.ready
			rf_source_valid         => jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid,            --                .valid
			rf_source_startofpacket => jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket,    --                .startofpacket
			rf_source_endofpacket   => jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket,      --                .endofpacket
			rf_source_data          => jtag_uart_0_avalon_jtag_slave_agent_rf_source_data,             --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_out_0_ready,                                  -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_out_0_valid,                                  --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_out_0_data,                                   --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_out_0_error(0),                               --                .error
			rdata_fifo_src_ready    => jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready,       --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid,       --                .valid
			rdata_fifo_src_data     => jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data,        --                .data
			m0_response             => "00",                                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                                             --     (terminated)
		);

	jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                 -- clk_reset.reset
			in_data           => jtag_uart_0_avalon_jtag_slave_agent_rf_source_data,             --        in.data
			in_valid          => jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid,            --          .valid
			in_ready          => jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready,            --          .ready
			in_startofpacket  => jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                                           -- (terminated)
			csr_read          => '0',                                                            -- (terminated)
			csr_write         => '0',                                                            -- (terminated)
			csr_readdata      => open,                                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",                             -- (terminated)
			almost_full_data  => open,                                                           -- (terminated)
			almost_empty_data => open,                                                           -- (terminated)
			in_empty          => "0",                                                            -- (terminated)
			out_empty         => open,                                                           -- (terminated)
			in_error          => "0",                                                            -- (terminated)
			out_error         => open,                                                           -- (terminated)
			in_channel        => "0",                                                            -- (terminated)
			out_channel       => open                                                            -- (terminated)
		);

	sysid_qsys_0_control_slave_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                               --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset,              --       clk_reset.reset
			m0_address              => sysid_qsys_0_control_slave_agent_m0_address,                 --              m0.address
			m0_burstcount           => sysid_qsys_0_control_slave_agent_m0_burstcount,              --                .burstcount
			m0_byteenable           => sysid_qsys_0_control_slave_agent_m0_byteenable,              --                .byteenable
			m0_debugaccess          => sysid_qsys_0_control_slave_agent_m0_debugaccess,             --                .debugaccess
			m0_lock                 => sysid_qsys_0_control_slave_agent_m0_lock,                    --                .lock
			m0_readdata             => sysid_qsys_0_control_slave_agent_m0_readdata,                --                .readdata
			m0_readdatavalid        => sysid_qsys_0_control_slave_agent_m0_readdatavalid,           --                .readdatavalid
			m0_read                 => sysid_qsys_0_control_slave_agent_m0_read,                    --                .read
			m0_waitrequest          => sysid_qsys_0_control_slave_agent_m0_waitrequest,             --                .waitrequest
			m0_writedata            => sysid_qsys_0_control_slave_agent_m0_writedata,               --                .writedata
			m0_write                => sysid_qsys_0_control_slave_agent_m0_write,                   --                .write
			rp_endofpacket          => sysid_qsys_0_control_slave_agent_rp_endofpacket,             --              rp.endofpacket
			rp_ready                => sysid_qsys_0_control_slave_agent_rp_ready,                   --                .ready
			rp_valid                => sysid_qsys_0_control_slave_agent_rp_valid,                   --                .valid
			rp_data                 => sysid_qsys_0_control_slave_agent_rp_data,                    --                .data
			rp_startofpacket        => sysid_qsys_0_control_slave_agent_rp_startofpacket,           --                .startofpacket
			cp_ready                => cmd_mux_001_src_ready,                                       --              cp.ready
			cp_valid                => cmd_mux_001_src_valid,                                       --                .valid
			cp_data                 => cmd_mux_001_src_data,                                        --                .data
			cp_startofpacket        => cmd_mux_001_src_startofpacket,                               --                .startofpacket
			cp_endofpacket          => cmd_mux_001_src_endofpacket,                                 --                .endofpacket
			cp_channel              => cmd_mux_001_src_channel,                                     --                .channel
			rf_sink_ready           => sysid_qsys_0_control_slave_agent_rsp_fifo_out_ready,         --         rf_sink.ready
			rf_sink_valid           => sysid_qsys_0_control_slave_agent_rsp_fifo_out_valid,         --                .valid
			rf_sink_startofpacket   => sysid_qsys_0_control_slave_agent_rsp_fifo_out_startofpacket, --                .startofpacket
			rf_sink_endofpacket     => sysid_qsys_0_control_slave_agent_rsp_fifo_out_endofpacket,   --                .endofpacket
			rf_sink_data            => sysid_qsys_0_control_slave_agent_rsp_fifo_out_data,          --                .data
			rf_source_ready         => sysid_qsys_0_control_slave_agent_rf_source_ready,            --       rf_source.ready
			rf_source_valid         => sysid_qsys_0_control_slave_agent_rf_source_valid,            --                .valid
			rf_source_startofpacket => sysid_qsys_0_control_slave_agent_rf_source_startofpacket,    --                .startofpacket
			rf_source_endofpacket   => sysid_qsys_0_control_slave_agent_rf_source_endofpacket,      --                .endofpacket
			rf_source_data          => sysid_qsys_0_control_slave_agent_rf_source_data,             --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_001_out_0_ready,                           -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_001_out_0_valid,                           --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_001_out_0_data,                            --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_001_out_0_error(0),                        --                .error
			rdata_fifo_src_ready    => sysid_qsys_0_control_slave_agent_rdata_fifo_src_ready,       --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => sysid_qsys_0_control_slave_agent_rdata_fifo_src_valid,       --                .valid
			rdata_fifo_src_data     => sysid_qsys_0_control_slave_agent_rdata_fifo_src_data,        --                .data
			m0_response             => "00",                                                        --     (terminated)
			m0_writeresponsevalid   => '0'                                                          --     (terminated)
		);

	sysid_qsys_0_control_slave_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                               --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset,              -- clk_reset.reset
			in_data           => sysid_qsys_0_control_slave_agent_rf_source_data,             --        in.data
			in_valid          => sysid_qsys_0_control_slave_agent_rf_source_valid,            --          .valid
			in_ready          => sysid_qsys_0_control_slave_agent_rf_source_ready,            --          .ready
			in_startofpacket  => sysid_qsys_0_control_slave_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => sysid_qsys_0_control_slave_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => sysid_qsys_0_control_slave_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => sysid_qsys_0_control_slave_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => sysid_qsys_0_control_slave_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => sysid_qsys_0_control_slave_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => sysid_qsys_0_control_slave_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                                        -- (terminated)
			csr_read          => '0',                                                         -- (terminated)
			csr_write         => '0',                                                         -- (terminated)
			csr_readdata      => open,                                                        -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",                          -- (terminated)
			almost_full_data  => open,                                                        -- (terminated)
			almost_empty_data => open,                                                        -- (terminated)
			in_empty          => "0",                                                         -- (terminated)
			out_empty         => open,                                                        -- (terminated)
			in_error          => "0",                                                         -- (terminated)
			out_error         => open,                                                        -- (terminated)
			in_channel        => "0",                                                         -- (terminated)
			out_channel       => open                                                         -- (terminated)
		);

	nios2_gen2_0_debug_mem_slave_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                                 --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                --       clk_reset.reset
			m0_address              => nios2_gen2_0_debug_mem_slave_agent_m0_address,                 --              m0.address
			m0_burstcount           => nios2_gen2_0_debug_mem_slave_agent_m0_burstcount,              --                .burstcount
			m0_byteenable           => nios2_gen2_0_debug_mem_slave_agent_m0_byteenable,              --                .byteenable
			m0_debugaccess          => nios2_gen2_0_debug_mem_slave_agent_m0_debugaccess,             --                .debugaccess
			m0_lock                 => nios2_gen2_0_debug_mem_slave_agent_m0_lock,                    --                .lock
			m0_readdata             => nios2_gen2_0_debug_mem_slave_agent_m0_readdata,                --                .readdata
			m0_readdatavalid        => nios2_gen2_0_debug_mem_slave_agent_m0_readdatavalid,           --                .readdatavalid
			m0_read                 => nios2_gen2_0_debug_mem_slave_agent_m0_read,                    --                .read
			m0_waitrequest          => nios2_gen2_0_debug_mem_slave_agent_m0_waitrequest,             --                .waitrequest
			m0_writedata            => nios2_gen2_0_debug_mem_slave_agent_m0_writedata,               --                .writedata
			m0_write                => nios2_gen2_0_debug_mem_slave_agent_m0_write,                   --                .write
			rp_endofpacket          => nios2_gen2_0_debug_mem_slave_agent_rp_endofpacket,             --              rp.endofpacket
			rp_ready                => nios2_gen2_0_debug_mem_slave_agent_rp_ready,                   --                .ready
			rp_valid                => nios2_gen2_0_debug_mem_slave_agent_rp_valid,                   --                .valid
			rp_data                 => nios2_gen2_0_debug_mem_slave_agent_rp_data,                    --                .data
			rp_startofpacket        => nios2_gen2_0_debug_mem_slave_agent_rp_startofpacket,           --                .startofpacket
			cp_ready                => cmd_mux_002_src_ready,                                         --              cp.ready
			cp_valid                => cmd_mux_002_src_valid,                                         --                .valid
			cp_data                 => cmd_mux_002_src_data,                                          --                .data
			cp_startofpacket        => cmd_mux_002_src_startofpacket,                                 --                .startofpacket
			cp_endofpacket          => cmd_mux_002_src_endofpacket,                                   --                .endofpacket
			cp_channel              => cmd_mux_002_src_channel,                                       --                .channel
			rf_sink_ready           => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_ready,         --         rf_sink.ready
			rf_sink_valid           => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_valid,         --                .valid
			rf_sink_startofpacket   => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_startofpacket, --                .startofpacket
			rf_sink_endofpacket     => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_endofpacket,   --                .endofpacket
			rf_sink_data            => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_data,          --                .data
			rf_source_ready         => nios2_gen2_0_debug_mem_slave_agent_rf_source_ready,            --       rf_source.ready
			rf_source_valid         => nios2_gen2_0_debug_mem_slave_agent_rf_source_valid,            --                .valid
			rf_source_startofpacket => nios2_gen2_0_debug_mem_slave_agent_rf_source_startofpacket,    --                .startofpacket
			rf_source_endofpacket   => nios2_gen2_0_debug_mem_slave_agent_rf_source_endofpacket,      --                .endofpacket
			rf_source_data          => nios2_gen2_0_debug_mem_slave_agent_rf_source_data,             --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_002_out_0_ready,                             -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_002_out_0_valid,                             --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_002_out_0_data,                              --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_002_out_0_error(0),                          --                .error
			rdata_fifo_src_ready    => nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_ready,       --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_valid,       --                .valid
			rdata_fifo_src_data     => nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_data,        --                .data
			m0_response             => "00",                                                          --     (terminated)
			m0_writeresponsevalid   => '0'                                                            --     (terminated)
		);

	nios2_gen2_0_debug_mem_slave_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                                 --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset,                -- clk_reset.reset
			in_data           => nios2_gen2_0_debug_mem_slave_agent_rf_source_data,             --        in.data
			in_valid          => nios2_gen2_0_debug_mem_slave_agent_rf_source_valid,            --          .valid
			in_ready          => nios2_gen2_0_debug_mem_slave_agent_rf_source_ready,            --          .ready
			in_startofpacket  => nios2_gen2_0_debug_mem_slave_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => nios2_gen2_0_debug_mem_slave_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => nios2_gen2_0_debug_mem_slave_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                                          -- (terminated)
			csr_read          => '0',                                                           -- (terminated)
			csr_write         => '0',                                                           -- (terminated)
			csr_readdata      => open,                                                          -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",                            -- (terminated)
			almost_full_data  => open,                                                          -- (terminated)
			almost_empty_data => open,                                                          -- (terminated)
			in_empty          => "0",                                                           -- (terminated)
			out_empty         => open,                                                          -- (terminated)
			in_error          => "0",                                                           -- (terminated)
			out_error         => open,                                                          -- (terminated)
			in_channel        => "0",                                                           -- (terminated)
			out_channel       => open                                                           -- (terminated)
		);

	sdram_pll_pll_slave_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                        --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset,       --       clk_reset.reset
			m0_address              => sdram_pll_pll_slave_agent_m0_address,                 --              m0.address
			m0_burstcount           => sdram_pll_pll_slave_agent_m0_burstcount,              --                .burstcount
			m0_byteenable           => sdram_pll_pll_slave_agent_m0_byteenable,              --                .byteenable
			m0_debugaccess          => sdram_pll_pll_slave_agent_m0_debugaccess,             --                .debugaccess
			m0_lock                 => sdram_pll_pll_slave_agent_m0_lock,                    --                .lock
			m0_readdata             => sdram_pll_pll_slave_agent_m0_readdata,                --                .readdata
			m0_readdatavalid        => sdram_pll_pll_slave_agent_m0_readdatavalid,           --                .readdatavalid
			m0_read                 => sdram_pll_pll_slave_agent_m0_read,                    --                .read
			m0_waitrequest          => sdram_pll_pll_slave_agent_m0_waitrequest,             --                .waitrequest
			m0_writedata            => sdram_pll_pll_slave_agent_m0_writedata,               --                .writedata
			m0_write                => sdram_pll_pll_slave_agent_m0_write,                   --                .write
			rp_endofpacket          => sdram_pll_pll_slave_agent_rp_endofpacket,             --              rp.endofpacket
			rp_ready                => sdram_pll_pll_slave_agent_rp_ready,                   --                .ready
			rp_valid                => sdram_pll_pll_slave_agent_rp_valid,                   --                .valid
			rp_data                 => sdram_pll_pll_slave_agent_rp_data,                    --                .data
			rp_startofpacket        => sdram_pll_pll_slave_agent_rp_startofpacket,           --                .startofpacket
			cp_ready                => cmd_mux_003_src_ready,                                --              cp.ready
			cp_valid                => cmd_mux_003_src_valid,                                --                .valid
			cp_data                 => cmd_mux_003_src_data,                                 --                .data
			cp_startofpacket        => cmd_mux_003_src_startofpacket,                        --                .startofpacket
			cp_endofpacket          => cmd_mux_003_src_endofpacket,                          --                .endofpacket
			cp_channel              => cmd_mux_003_src_channel,                              --                .channel
			rf_sink_ready           => sdram_pll_pll_slave_agent_rsp_fifo_out_ready,         --         rf_sink.ready
			rf_sink_valid           => sdram_pll_pll_slave_agent_rsp_fifo_out_valid,         --                .valid
			rf_sink_startofpacket   => sdram_pll_pll_slave_agent_rsp_fifo_out_startofpacket, --                .startofpacket
			rf_sink_endofpacket     => sdram_pll_pll_slave_agent_rsp_fifo_out_endofpacket,   --                .endofpacket
			rf_sink_data            => sdram_pll_pll_slave_agent_rsp_fifo_out_data,          --                .data
			rf_source_ready         => sdram_pll_pll_slave_agent_rf_source_ready,            --       rf_source.ready
			rf_source_valid         => sdram_pll_pll_slave_agent_rf_source_valid,            --                .valid
			rf_source_startofpacket => sdram_pll_pll_slave_agent_rf_source_startofpacket,    --                .startofpacket
			rf_source_endofpacket   => sdram_pll_pll_slave_agent_rf_source_endofpacket,      --                .endofpacket
			rf_source_data          => sdram_pll_pll_slave_agent_rf_source_data,             --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_003_out_0_ready,                    -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_003_out_0_valid,                    --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_003_out_0_data,                     --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_003_out_0_error(0),                 --                .error
			rdata_fifo_src_ready    => sdram_pll_pll_slave_agent_rdata_fifo_src_ready,       --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => sdram_pll_pll_slave_agent_rdata_fifo_src_valid,       --                .valid
			rdata_fifo_src_data     => sdram_pll_pll_slave_agent_rdata_fifo_src_data,        --                .data
			m0_response             => "00",                                                 --     (terminated)
			m0_writeresponsevalid   => '0'                                                   --     (terminated)
		);

	sdram_pll_pll_slave_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                        --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset,       -- clk_reset.reset
			in_data           => sdram_pll_pll_slave_agent_rf_source_data,             --        in.data
			in_valid          => sdram_pll_pll_slave_agent_rf_source_valid,            --          .valid
			in_ready          => sdram_pll_pll_slave_agent_rf_source_ready,            --          .ready
			in_startofpacket  => sdram_pll_pll_slave_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => sdram_pll_pll_slave_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => sdram_pll_pll_slave_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => sdram_pll_pll_slave_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => sdram_pll_pll_slave_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => sdram_pll_pll_slave_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => sdram_pll_pll_slave_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                                 -- (terminated)
			csr_read          => '0',                                                  -- (terminated)
			csr_write         => '0',                                                  -- (terminated)
			csr_readdata      => open,                                                 -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",                   -- (terminated)
			almost_full_data  => open,                                                 -- (terminated)
			almost_empty_data => open,                                                 -- (terminated)
			in_empty          => "0",                                                  -- (terminated)
			out_empty         => open,                                                 -- (terminated)
			in_error          => "0",                                                  -- (terminated)
			out_error         => open,                                                 -- (terminated)
			in_channel        => "0",                                                  -- (terminated)
			out_channel       => open                                                  -- (terminated)
		);

	onchip_memory2_0_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                        --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset,       --       clk_reset.reset
			m0_address              => onchip_memory2_0_s1_agent_m0_address,                 --              m0.address
			m0_burstcount           => onchip_memory2_0_s1_agent_m0_burstcount,              --                .burstcount
			m0_byteenable           => onchip_memory2_0_s1_agent_m0_byteenable,              --                .byteenable
			m0_debugaccess          => onchip_memory2_0_s1_agent_m0_debugaccess,             --                .debugaccess
			m0_lock                 => onchip_memory2_0_s1_agent_m0_lock,                    --                .lock
			m0_readdata             => onchip_memory2_0_s1_agent_m0_readdata,                --                .readdata
			m0_readdatavalid        => onchip_memory2_0_s1_agent_m0_readdatavalid,           --                .readdatavalid
			m0_read                 => onchip_memory2_0_s1_agent_m0_read,                    --                .read
			m0_waitrequest          => onchip_memory2_0_s1_agent_m0_waitrequest,             --                .waitrequest
			m0_writedata            => onchip_memory2_0_s1_agent_m0_writedata,               --                .writedata
			m0_write                => onchip_memory2_0_s1_agent_m0_write,                   --                .write
			rp_endofpacket          => onchip_memory2_0_s1_agent_rp_endofpacket,             --              rp.endofpacket
			rp_ready                => onchip_memory2_0_s1_agent_rp_ready,                   --                .ready
			rp_valid                => onchip_memory2_0_s1_agent_rp_valid,                   --                .valid
			rp_data                 => onchip_memory2_0_s1_agent_rp_data,                    --                .data
			rp_startofpacket        => onchip_memory2_0_s1_agent_rp_startofpacket,           --                .startofpacket
			cp_ready                => cmd_mux_004_src_ready,                                --              cp.ready
			cp_valid                => cmd_mux_004_src_valid,                                --                .valid
			cp_data                 => cmd_mux_004_src_data,                                 --                .data
			cp_startofpacket        => cmd_mux_004_src_startofpacket,                        --                .startofpacket
			cp_endofpacket          => cmd_mux_004_src_endofpacket,                          --                .endofpacket
			cp_channel              => cmd_mux_004_src_channel,                              --                .channel
			rf_sink_ready           => onchip_memory2_0_s1_agent_rsp_fifo_out_ready,         --         rf_sink.ready
			rf_sink_valid           => onchip_memory2_0_s1_agent_rsp_fifo_out_valid,         --                .valid
			rf_sink_startofpacket   => onchip_memory2_0_s1_agent_rsp_fifo_out_startofpacket, --                .startofpacket
			rf_sink_endofpacket     => onchip_memory2_0_s1_agent_rsp_fifo_out_endofpacket,   --                .endofpacket
			rf_sink_data            => onchip_memory2_0_s1_agent_rsp_fifo_out_data,          --                .data
			rf_source_ready         => onchip_memory2_0_s1_agent_rf_source_ready,            --       rf_source.ready
			rf_source_valid         => onchip_memory2_0_s1_agent_rf_source_valid,            --                .valid
			rf_source_startofpacket => onchip_memory2_0_s1_agent_rf_source_startofpacket,    --                .startofpacket
			rf_source_endofpacket   => onchip_memory2_0_s1_agent_rf_source_endofpacket,      --                .endofpacket
			rf_source_data          => onchip_memory2_0_s1_agent_rf_source_data,             --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_004_out_0_ready,                    -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_004_out_0_valid,                    --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_004_out_0_data,                     --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_004_out_0_error(0),                 --                .error
			rdata_fifo_src_ready    => onchip_memory2_0_s1_agent_rdata_fifo_src_ready,       --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => onchip_memory2_0_s1_agent_rdata_fifo_src_valid,       --                .valid
			rdata_fifo_src_data     => onchip_memory2_0_s1_agent_rdata_fifo_src_data,        --                .data
			m0_response             => "00",                                                 --     (terminated)
			m0_writeresponsevalid   => '0'                                                   --     (terminated)
		);

	onchip_memory2_0_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                        --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset,       -- clk_reset.reset
			in_data           => onchip_memory2_0_s1_agent_rf_source_data,             --        in.data
			in_valid          => onchip_memory2_0_s1_agent_rf_source_valid,            --          .valid
			in_ready          => onchip_memory2_0_s1_agent_rf_source_ready,            --          .ready
			in_startofpacket  => onchip_memory2_0_s1_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => onchip_memory2_0_s1_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => onchip_memory2_0_s1_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => onchip_memory2_0_s1_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => onchip_memory2_0_s1_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => onchip_memory2_0_s1_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => onchip_memory2_0_s1_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                                 -- (terminated)
			csr_read          => '0',                                                  -- (terminated)
			csr_write         => '0',                                                  -- (terminated)
			csr_readdata      => open,                                                 -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",                   -- (terminated)
			almost_full_data  => open,                                                 -- (terminated)
			almost_empty_data => open,                                                 -- (terminated)
			in_empty          => "0",                                                  -- (terminated)
			out_empty         => open,                                                 -- (terminated)
			in_error          => "0",                                                  -- (terminated)
			out_error         => open,                                                 -- (terminated)
			in_channel        => "0",                                                  -- (terminated)
			out_channel       => open                                                  -- (terminated)
		);

	sdram_s1_agent : component lab62soc_mm_interconnect_0_sdram_s1_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 87,
			PKT_ORI_BURST_SIZE_L      => 85,
			PKT_RESPONSE_STATUS_H     => 84,
			PKT_RESPONSE_STATUS_L     => 83,
			PKT_BURST_SIZE_H          => 60,
			PKT_BURST_SIZE_L          => 58,
			PKT_TRANS_LOCK            => 50,
			PKT_BEGIN_BURST           => 65,
			PKT_PROTECTION_H          => 78,
			PKT_PROTECTION_L          => 76,
			PKT_BURSTWRAP_H           => 57,
			PKT_BURSTWRAP_L           => 55,
			PKT_BYTE_CNT_H            => 54,
			PKT_BYTE_CNT_L            => 52,
			PKT_ADDR_H                => 45,
			PKT_ADDR_L                => 18,
			PKT_TRANS_COMPRESSED_READ => 46,
			PKT_TRANS_POSTED          => 47,
			PKT_TRANS_WRITE           => 48,
			PKT_TRANS_READ            => 49,
			PKT_DATA_H                => 15,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 17,
			PKT_BYTEEN_L              => 16,
			PKT_SRC_ID_H              => 70,
			PKT_SRC_ID_L              => 67,
			PKT_DEST_ID_H             => 74,
			PKT_DEST_ID_L             => 71,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 88,
			AVS_BURSTCOUNT_W          => 2,
			SUPPRESS_0_BYTEEN_CMD     => 1,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => sdram_pll_c0_clk,                             --             clk.clk
			reset                   => sdram_reset_reset_bridge_in_reset_reset,      --       clk_reset.reset
			m0_address              => sdram_s1_agent_m0_address,                    --              m0.address
			m0_burstcount           => sdram_s1_agent_m0_burstcount,                 --                .burstcount
			m0_byteenable           => sdram_s1_agent_m0_byteenable,                 --                .byteenable
			m0_debugaccess          => sdram_s1_agent_m0_debugaccess,                --                .debugaccess
			m0_lock                 => sdram_s1_agent_m0_lock,                       --                .lock
			m0_readdata             => sdram_s1_agent_m0_readdata,                   --                .readdata
			m0_readdatavalid        => sdram_s1_agent_m0_readdatavalid,              --                .readdatavalid
			m0_read                 => sdram_s1_agent_m0_read,                       --                .read
			m0_waitrequest          => sdram_s1_agent_m0_waitrequest,                --                .waitrequest
			m0_writedata            => sdram_s1_agent_m0_writedata,                  --                .writedata
			m0_write                => sdram_s1_agent_m0_write,                      --                .write
			rp_endofpacket          => sdram_s1_agent_rp_endofpacket,                --              rp.endofpacket
			rp_ready                => sdram_s1_agent_rp_ready,                      --                .ready
			rp_valid                => sdram_s1_agent_rp_valid,                      --                .valid
			rp_data                 => sdram_s1_agent_rp_data,                       --                .data
			rp_startofpacket        => sdram_s1_agent_rp_startofpacket,              --                .startofpacket
			cp_ready                => sdram_s1_burst_adapter_source0_ready,         --              cp.ready
			cp_valid                => sdram_s1_burst_adapter_source0_valid,         --                .valid
			cp_data                 => sdram_s1_burst_adapter_source0_data,          --                .data
			cp_startofpacket        => sdram_s1_burst_adapter_source0_startofpacket, --                .startofpacket
			cp_endofpacket          => sdram_s1_burst_adapter_source0_endofpacket,   --                .endofpacket
			cp_channel              => sdram_s1_burst_adapter_source0_channel,       --                .channel
			rf_sink_ready           => sdram_s1_agent_rsp_fifo_out_ready,            --         rf_sink.ready
			rf_sink_valid           => sdram_s1_agent_rsp_fifo_out_valid,            --                .valid
			rf_sink_startofpacket   => sdram_s1_agent_rsp_fifo_out_startofpacket,    --                .startofpacket
			rf_sink_endofpacket     => sdram_s1_agent_rsp_fifo_out_endofpacket,      --                .endofpacket
			rf_sink_data            => sdram_s1_agent_rsp_fifo_out_data,             --                .data
			rf_source_ready         => sdram_s1_agent_rf_source_ready,               --       rf_source.ready
			rf_source_valid         => sdram_s1_agent_rf_source_valid,               --                .valid
			rf_source_startofpacket => sdram_s1_agent_rf_source_startofpacket,       --                .startofpacket
			rf_source_endofpacket   => sdram_s1_agent_rf_source_endofpacket,         --                .endofpacket
			rf_source_data          => sdram_s1_agent_rf_source_data,                --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_005_out_0_ready,            -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_005_out_0_valid,            --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_005_out_0_data,             --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_005_out_0_error(0),         --                .error
			rdata_fifo_src_ready    => sdram_s1_agent_rdata_fifo_src_ready,          --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => sdram_s1_agent_rdata_fifo_src_valid,          --                .valid
			rdata_fifo_src_data     => sdram_s1_agent_rdata_fifo_src_data,           --                .data
			m0_response             => "00",                                         --     (terminated)
			m0_writeresponsevalid   => '0'                                           --     (terminated)
		);

	sdram_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_sdram_s1_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 89,
			FIFO_DEPTH          => 8,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => sdram_pll_c0_clk,                          --       clk.clk
			reset             => sdram_reset_reset_bridge_in_reset_reset,   -- clk_reset.reset
			in_data           => sdram_s1_agent_rf_source_data,             --        in.data
			in_valid          => sdram_s1_agent_rf_source_valid,            --          .valid
			in_ready          => sdram_s1_agent_rf_source_ready,            --          .ready
			in_startofpacket  => sdram_s1_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => sdram_s1_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => sdram_s1_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => sdram_s1_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => sdram_s1_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => sdram_s1_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => sdram_s1_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                      -- (terminated)
			csr_read          => '0',                                       -- (terminated)
			csr_write         => '0',                                       -- (terminated)
			csr_readdata      => open,                                      -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",        -- (terminated)
			almost_full_data  => open,                                      -- (terminated)
			almost_empty_data => open,                                      -- (terminated)
			in_empty          => "0",                                       -- (terminated)
			out_empty         => open,                                      -- (terminated)
			in_error          => "0",                                       -- (terminated)
			out_error         => open,                                      -- (terminated)
			in_channel        => "0",                                       -- (terminated)
			out_channel       => open                                       -- (terminated)
		);

	sdram_s1_agent_rdata_fifo : component lab62soc_mm_interconnect_0_sdram_s1_agent_rdata_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 18,
			FIFO_DEPTH          => 8,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 0,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 3,
			USE_MEMORY_BLOCKS   => 1,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => sdram_pll_c0_clk,                        --       clk.clk
			reset             => sdram_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => sdram_s1_agent_rdata_fifo_src_data,      --        in.data
			in_valid          => sdram_s1_agent_rdata_fifo_src_valid,     --          .valid
			in_ready          => sdram_s1_agent_rdata_fifo_src_ready,     --          .ready
			out_data          => sdram_s1_agent_rdata_fifo_out_data,      --       out.data
			out_valid         => sdram_s1_agent_rdata_fifo_out_valid,     --          .valid
			out_ready         => sdram_s1_agent_rdata_fifo_out_ready,     --          .ready
			csr_address       => "00",                                    -- (terminated)
			csr_read          => '0',                                     -- (terminated)
			csr_write         => '0',                                     -- (terminated)
			csr_readdata      => open,                                    -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",      -- (terminated)
			almost_full_data  => open,                                    -- (terminated)
			almost_empty_data => open,                                    -- (terminated)
			in_startofpacket  => '0',                                     -- (terminated)
			in_endofpacket    => '0',                                     -- (terminated)
			out_startofpacket => open,                                    -- (terminated)
			out_endofpacket   => open,                                    -- (terminated)
			in_empty          => "0",                                     -- (terminated)
			out_empty         => open,                                    -- (terminated)
			in_error          => "0",                                     -- (terminated)
			out_error         => open,                                    -- (terminated)
			in_channel        => "0",                                     -- (terminated)
			out_channel       => open                                     -- (terminated)
		);

	keycode_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => keycode_s1_agent_m0_address,                    --              m0.address
			m0_burstcount           => keycode_s1_agent_m0_burstcount,                 --                .burstcount
			m0_byteenable           => keycode_s1_agent_m0_byteenable,                 --                .byteenable
			m0_debugaccess          => keycode_s1_agent_m0_debugaccess,                --                .debugaccess
			m0_lock                 => keycode_s1_agent_m0_lock,                       --                .lock
			m0_readdata             => keycode_s1_agent_m0_readdata,                   --                .readdata
			m0_readdatavalid        => keycode_s1_agent_m0_readdatavalid,              --                .readdatavalid
			m0_read                 => keycode_s1_agent_m0_read,                       --                .read
			m0_waitrequest          => keycode_s1_agent_m0_waitrequest,                --                .waitrequest
			m0_writedata            => keycode_s1_agent_m0_writedata,                  --                .writedata
			m0_write                => keycode_s1_agent_m0_write,                      --                .write
			rp_endofpacket          => keycode_s1_agent_rp_endofpacket,                --              rp.endofpacket
			rp_ready                => keycode_s1_agent_rp_ready,                      --                .ready
			rp_valid                => keycode_s1_agent_rp_valid,                      --                .valid
			rp_data                 => keycode_s1_agent_rp_data,                       --                .data
			rp_startofpacket        => keycode_s1_agent_rp_startofpacket,              --                .startofpacket
			cp_ready                => cmd_mux_006_src_ready,                          --              cp.ready
			cp_valid                => cmd_mux_006_src_valid,                          --                .valid
			cp_data                 => cmd_mux_006_src_data,                           --                .data
			cp_startofpacket        => cmd_mux_006_src_startofpacket,                  --                .startofpacket
			cp_endofpacket          => cmd_mux_006_src_endofpacket,                    --                .endofpacket
			cp_channel              => cmd_mux_006_src_channel,                        --                .channel
			rf_sink_ready           => keycode_s1_agent_rsp_fifo_out_ready,            --         rf_sink.ready
			rf_sink_valid           => keycode_s1_agent_rsp_fifo_out_valid,            --                .valid
			rf_sink_startofpacket   => keycode_s1_agent_rsp_fifo_out_startofpacket,    --                .startofpacket
			rf_sink_endofpacket     => keycode_s1_agent_rsp_fifo_out_endofpacket,      --                .endofpacket
			rf_sink_data            => keycode_s1_agent_rsp_fifo_out_data,             --                .data
			rf_source_ready         => keycode_s1_agent_rf_source_ready,               --       rf_source.ready
			rf_source_valid         => keycode_s1_agent_rf_source_valid,               --                .valid
			rf_source_startofpacket => keycode_s1_agent_rf_source_startofpacket,       --                .startofpacket
			rf_source_endofpacket   => keycode_s1_agent_rf_source_endofpacket,         --                .endofpacket
			rf_source_data          => keycode_s1_agent_rf_source_data,                --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_006_out_0_ready,              -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_006_out_0_valid,              --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_006_out_0_data,               --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_006_out_0_error(0),           --                .error
			rdata_fifo_src_ready    => keycode_s1_agent_rdata_fifo_src_ready,          --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => keycode_s1_agent_rdata_fifo_src_valid,          --                .valid
			rdata_fifo_src_data     => keycode_s1_agent_rdata_fifo_src_data,           --                .data
			m0_response             => "00",                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                             --     (terminated)
		);

	keycode_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => keycode_s1_agent_rf_source_data,                --        in.data
			in_valid          => keycode_s1_agent_rf_source_valid,               --          .valid
			in_ready          => keycode_s1_agent_rf_source_ready,               --          .ready
			in_startofpacket  => keycode_s1_agent_rf_source_startofpacket,       --          .startofpacket
			in_endofpacket    => keycode_s1_agent_rf_source_endofpacket,         --          .endofpacket
			out_data          => keycode_s1_agent_rsp_fifo_out_data,             --       out.data
			out_valid         => keycode_s1_agent_rsp_fifo_out_valid,            --          .valid
			out_ready         => keycode_s1_agent_rsp_fifo_out_ready,            --          .ready
			out_startofpacket => keycode_s1_agent_rsp_fifo_out_startofpacket,    --          .startofpacket
			out_endofpacket   => keycode_s1_agent_rsp_fifo_out_endofpacket,      --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	usb_irq_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => usb_irq_s1_agent_m0_address,                    --              m0.address
			m0_burstcount           => usb_irq_s1_agent_m0_burstcount,                 --                .burstcount
			m0_byteenable           => usb_irq_s1_agent_m0_byteenable,                 --                .byteenable
			m0_debugaccess          => usb_irq_s1_agent_m0_debugaccess,                --                .debugaccess
			m0_lock                 => usb_irq_s1_agent_m0_lock,                       --                .lock
			m0_readdata             => usb_irq_s1_agent_m0_readdata,                   --                .readdata
			m0_readdatavalid        => usb_irq_s1_agent_m0_readdatavalid,              --                .readdatavalid
			m0_read                 => usb_irq_s1_agent_m0_read,                       --                .read
			m0_waitrequest          => usb_irq_s1_agent_m0_waitrequest,                --                .waitrequest
			m0_writedata            => usb_irq_s1_agent_m0_writedata,                  --                .writedata
			m0_write                => usb_irq_s1_agent_m0_write,                      --                .write
			rp_endofpacket          => usb_irq_s1_agent_rp_endofpacket,                --              rp.endofpacket
			rp_ready                => usb_irq_s1_agent_rp_ready,                      --                .ready
			rp_valid                => usb_irq_s1_agent_rp_valid,                      --                .valid
			rp_data                 => usb_irq_s1_agent_rp_data,                       --                .data
			rp_startofpacket        => usb_irq_s1_agent_rp_startofpacket,              --                .startofpacket
			cp_ready                => cmd_mux_007_src_ready,                          --              cp.ready
			cp_valid                => cmd_mux_007_src_valid,                          --                .valid
			cp_data                 => cmd_mux_007_src_data,                           --                .data
			cp_startofpacket        => cmd_mux_007_src_startofpacket,                  --                .startofpacket
			cp_endofpacket          => cmd_mux_007_src_endofpacket,                    --                .endofpacket
			cp_channel              => cmd_mux_007_src_channel,                        --                .channel
			rf_sink_ready           => usb_irq_s1_agent_rsp_fifo_out_ready,            --         rf_sink.ready
			rf_sink_valid           => usb_irq_s1_agent_rsp_fifo_out_valid,            --                .valid
			rf_sink_startofpacket   => usb_irq_s1_agent_rsp_fifo_out_startofpacket,    --                .startofpacket
			rf_sink_endofpacket     => usb_irq_s1_agent_rsp_fifo_out_endofpacket,      --                .endofpacket
			rf_sink_data            => usb_irq_s1_agent_rsp_fifo_out_data,             --                .data
			rf_source_ready         => usb_irq_s1_agent_rf_source_ready,               --       rf_source.ready
			rf_source_valid         => usb_irq_s1_agent_rf_source_valid,               --                .valid
			rf_source_startofpacket => usb_irq_s1_agent_rf_source_startofpacket,       --                .startofpacket
			rf_source_endofpacket   => usb_irq_s1_agent_rf_source_endofpacket,         --                .endofpacket
			rf_source_data          => usb_irq_s1_agent_rf_source_data,                --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_007_out_0_ready,              -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_007_out_0_valid,              --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_007_out_0_data,               --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_007_out_0_error(0),           --                .error
			rdata_fifo_src_ready    => usb_irq_s1_agent_rdata_fifo_src_ready,          --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => usb_irq_s1_agent_rdata_fifo_src_valid,          --                .valid
			rdata_fifo_src_data     => usb_irq_s1_agent_rdata_fifo_src_data,           --                .data
			m0_response             => "00",                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                             --     (terminated)
		);

	usb_irq_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => usb_irq_s1_agent_rf_source_data,                --        in.data
			in_valid          => usb_irq_s1_agent_rf_source_valid,               --          .valid
			in_ready          => usb_irq_s1_agent_rf_source_ready,               --          .ready
			in_startofpacket  => usb_irq_s1_agent_rf_source_startofpacket,       --          .startofpacket
			in_endofpacket    => usb_irq_s1_agent_rf_source_endofpacket,         --          .endofpacket
			out_data          => usb_irq_s1_agent_rsp_fifo_out_data,             --       out.data
			out_valid         => usb_irq_s1_agent_rsp_fifo_out_valid,            --          .valid
			out_ready         => usb_irq_s1_agent_rsp_fifo_out_ready,            --          .ready
			out_startofpacket => usb_irq_s1_agent_rsp_fifo_out_startofpacket,    --          .startofpacket
			out_endofpacket   => usb_irq_s1_agent_rsp_fifo_out_endofpacket,      --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	usb_gpx_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => usb_gpx_s1_agent_m0_address,                    --              m0.address
			m0_burstcount           => usb_gpx_s1_agent_m0_burstcount,                 --                .burstcount
			m0_byteenable           => usb_gpx_s1_agent_m0_byteenable,                 --                .byteenable
			m0_debugaccess          => usb_gpx_s1_agent_m0_debugaccess,                --                .debugaccess
			m0_lock                 => usb_gpx_s1_agent_m0_lock,                       --                .lock
			m0_readdata             => usb_gpx_s1_agent_m0_readdata,                   --                .readdata
			m0_readdatavalid        => usb_gpx_s1_agent_m0_readdatavalid,              --                .readdatavalid
			m0_read                 => usb_gpx_s1_agent_m0_read,                       --                .read
			m0_waitrequest          => usb_gpx_s1_agent_m0_waitrequest,                --                .waitrequest
			m0_writedata            => usb_gpx_s1_agent_m0_writedata,                  --                .writedata
			m0_write                => usb_gpx_s1_agent_m0_write,                      --                .write
			rp_endofpacket          => usb_gpx_s1_agent_rp_endofpacket,                --              rp.endofpacket
			rp_ready                => usb_gpx_s1_agent_rp_ready,                      --                .ready
			rp_valid                => usb_gpx_s1_agent_rp_valid,                      --                .valid
			rp_data                 => usb_gpx_s1_agent_rp_data,                       --                .data
			rp_startofpacket        => usb_gpx_s1_agent_rp_startofpacket,              --                .startofpacket
			cp_ready                => cmd_mux_008_src_ready,                          --              cp.ready
			cp_valid                => cmd_mux_008_src_valid,                          --                .valid
			cp_data                 => cmd_mux_008_src_data,                           --                .data
			cp_startofpacket        => cmd_mux_008_src_startofpacket,                  --                .startofpacket
			cp_endofpacket          => cmd_mux_008_src_endofpacket,                    --                .endofpacket
			cp_channel              => cmd_mux_008_src_channel,                        --                .channel
			rf_sink_ready           => usb_gpx_s1_agent_rsp_fifo_out_ready,            --         rf_sink.ready
			rf_sink_valid           => usb_gpx_s1_agent_rsp_fifo_out_valid,            --                .valid
			rf_sink_startofpacket   => usb_gpx_s1_agent_rsp_fifo_out_startofpacket,    --                .startofpacket
			rf_sink_endofpacket     => usb_gpx_s1_agent_rsp_fifo_out_endofpacket,      --                .endofpacket
			rf_sink_data            => usb_gpx_s1_agent_rsp_fifo_out_data,             --                .data
			rf_source_ready         => usb_gpx_s1_agent_rf_source_ready,               --       rf_source.ready
			rf_source_valid         => usb_gpx_s1_agent_rf_source_valid,               --                .valid
			rf_source_startofpacket => usb_gpx_s1_agent_rf_source_startofpacket,       --                .startofpacket
			rf_source_endofpacket   => usb_gpx_s1_agent_rf_source_endofpacket,         --                .endofpacket
			rf_source_data          => usb_gpx_s1_agent_rf_source_data,                --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_008_out_0_ready,              -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_008_out_0_valid,              --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_008_out_0_data,               --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_008_out_0_error(0),           --                .error
			rdata_fifo_src_ready    => usb_gpx_s1_agent_rdata_fifo_src_ready,          --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => usb_gpx_s1_agent_rdata_fifo_src_valid,          --                .valid
			rdata_fifo_src_data     => usb_gpx_s1_agent_rdata_fifo_src_data,           --                .data
			m0_response             => "00",                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                             --     (terminated)
		);

	usb_gpx_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => usb_gpx_s1_agent_rf_source_data,                --        in.data
			in_valid          => usb_gpx_s1_agent_rf_source_valid,               --          .valid
			in_ready          => usb_gpx_s1_agent_rf_source_ready,               --          .ready
			in_startofpacket  => usb_gpx_s1_agent_rf_source_startofpacket,       --          .startofpacket
			in_endofpacket    => usb_gpx_s1_agent_rf_source_endofpacket,         --          .endofpacket
			out_data          => usb_gpx_s1_agent_rsp_fifo_out_data,             --       out.data
			out_valid         => usb_gpx_s1_agent_rsp_fifo_out_valid,            --          .valid
			out_ready         => usb_gpx_s1_agent_rsp_fifo_out_ready,            --          .ready
			out_startofpacket => usb_gpx_s1_agent_rsp_fifo_out_startofpacket,    --          .startofpacket
			out_endofpacket   => usb_gpx_s1_agent_rsp_fifo_out_endofpacket,      --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	usb_rst_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => usb_rst_s1_agent_m0_address,                    --              m0.address
			m0_burstcount           => usb_rst_s1_agent_m0_burstcount,                 --                .burstcount
			m0_byteenable           => usb_rst_s1_agent_m0_byteenable,                 --                .byteenable
			m0_debugaccess          => usb_rst_s1_agent_m0_debugaccess,                --                .debugaccess
			m0_lock                 => usb_rst_s1_agent_m0_lock,                       --                .lock
			m0_readdata             => usb_rst_s1_agent_m0_readdata,                   --                .readdata
			m0_readdatavalid        => usb_rst_s1_agent_m0_readdatavalid,              --                .readdatavalid
			m0_read                 => usb_rst_s1_agent_m0_read,                       --                .read
			m0_waitrequest          => usb_rst_s1_agent_m0_waitrequest,                --                .waitrequest
			m0_writedata            => usb_rst_s1_agent_m0_writedata,                  --                .writedata
			m0_write                => usb_rst_s1_agent_m0_write,                      --                .write
			rp_endofpacket          => usb_rst_s1_agent_rp_endofpacket,                --              rp.endofpacket
			rp_ready                => usb_rst_s1_agent_rp_ready,                      --                .ready
			rp_valid                => usb_rst_s1_agent_rp_valid,                      --                .valid
			rp_data                 => usb_rst_s1_agent_rp_data,                       --                .data
			rp_startofpacket        => usb_rst_s1_agent_rp_startofpacket,              --                .startofpacket
			cp_ready                => cmd_mux_009_src_ready,                          --              cp.ready
			cp_valid                => cmd_mux_009_src_valid,                          --                .valid
			cp_data                 => cmd_mux_009_src_data,                           --                .data
			cp_startofpacket        => cmd_mux_009_src_startofpacket,                  --                .startofpacket
			cp_endofpacket          => cmd_mux_009_src_endofpacket,                    --                .endofpacket
			cp_channel              => cmd_mux_009_src_channel,                        --                .channel
			rf_sink_ready           => usb_rst_s1_agent_rsp_fifo_out_ready,            --         rf_sink.ready
			rf_sink_valid           => usb_rst_s1_agent_rsp_fifo_out_valid,            --                .valid
			rf_sink_startofpacket   => usb_rst_s1_agent_rsp_fifo_out_startofpacket,    --                .startofpacket
			rf_sink_endofpacket     => usb_rst_s1_agent_rsp_fifo_out_endofpacket,      --                .endofpacket
			rf_sink_data            => usb_rst_s1_agent_rsp_fifo_out_data,             --                .data
			rf_source_ready         => usb_rst_s1_agent_rf_source_ready,               --       rf_source.ready
			rf_source_valid         => usb_rst_s1_agent_rf_source_valid,               --                .valid
			rf_source_startofpacket => usb_rst_s1_agent_rf_source_startofpacket,       --                .startofpacket
			rf_source_endofpacket   => usb_rst_s1_agent_rf_source_endofpacket,         --                .endofpacket
			rf_source_data          => usb_rst_s1_agent_rf_source_data,                --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_009_out_0_ready,              -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_009_out_0_valid,              --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_009_out_0_data,               --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_009_out_0_error(0),           --                .error
			rdata_fifo_src_ready    => usb_rst_s1_agent_rdata_fifo_src_ready,          --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => usb_rst_s1_agent_rdata_fifo_src_valid,          --                .valid
			rdata_fifo_src_data     => usb_rst_s1_agent_rdata_fifo_src_data,           --                .data
			m0_response             => "00",                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                             --     (terminated)
		);

	usb_rst_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => usb_rst_s1_agent_rf_source_data,                --        in.data
			in_valid          => usb_rst_s1_agent_rf_source_valid,               --          .valid
			in_ready          => usb_rst_s1_agent_rf_source_ready,               --          .ready
			in_startofpacket  => usb_rst_s1_agent_rf_source_startofpacket,       --          .startofpacket
			in_endofpacket    => usb_rst_s1_agent_rf_source_endofpacket,         --          .endofpacket
			out_data          => usb_rst_s1_agent_rsp_fifo_out_data,             --       out.data
			out_valid         => usb_rst_s1_agent_rsp_fifo_out_valid,            --          .valid
			out_ready         => usb_rst_s1_agent_rsp_fifo_out_ready,            --          .ready
			out_startofpacket => usb_rst_s1_agent_rsp_fifo_out_startofpacket,    --          .startofpacket
			out_endofpacket   => usb_rst_s1_agent_rsp_fifo_out_endofpacket,      --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	hex_digits_pio_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                      --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset,     --       clk_reset.reset
			m0_address              => hex_digits_pio_s1_agent_m0_address,                 --              m0.address
			m0_burstcount           => hex_digits_pio_s1_agent_m0_burstcount,              --                .burstcount
			m0_byteenable           => hex_digits_pio_s1_agent_m0_byteenable,              --                .byteenable
			m0_debugaccess          => hex_digits_pio_s1_agent_m0_debugaccess,             --                .debugaccess
			m0_lock                 => hex_digits_pio_s1_agent_m0_lock,                    --                .lock
			m0_readdata             => hex_digits_pio_s1_agent_m0_readdata,                --                .readdata
			m0_readdatavalid        => hex_digits_pio_s1_agent_m0_readdatavalid,           --                .readdatavalid
			m0_read                 => hex_digits_pio_s1_agent_m0_read,                    --                .read
			m0_waitrequest          => hex_digits_pio_s1_agent_m0_waitrequest,             --                .waitrequest
			m0_writedata            => hex_digits_pio_s1_agent_m0_writedata,               --                .writedata
			m0_write                => hex_digits_pio_s1_agent_m0_write,                   --                .write
			rp_endofpacket          => hex_digits_pio_s1_agent_rp_endofpacket,             --              rp.endofpacket
			rp_ready                => hex_digits_pio_s1_agent_rp_ready,                   --                .ready
			rp_valid                => hex_digits_pio_s1_agent_rp_valid,                   --                .valid
			rp_data                 => hex_digits_pio_s1_agent_rp_data,                    --                .data
			rp_startofpacket        => hex_digits_pio_s1_agent_rp_startofpacket,           --                .startofpacket
			cp_ready                => cmd_mux_010_src_ready,                              --              cp.ready
			cp_valid                => cmd_mux_010_src_valid,                              --                .valid
			cp_data                 => cmd_mux_010_src_data,                               --                .data
			cp_startofpacket        => cmd_mux_010_src_startofpacket,                      --                .startofpacket
			cp_endofpacket          => cmd_mux_010_src_endofpacket,                        --                .endofpacket
			cp_channel              => cmd_mux_010_src_channel,                            --                .channel
			rf_sink_ready           => hex_digits_pio_s1_agent_rsp_fifo_out_ready,         --         rf_sink.ready
			rf_sink_valid           => hex_digits_pio_s1_agent_rsp_fifo_out_valid,         --                .valid
			rf_sink_startofpacket   => hex_digits_pio_s1_agent_rsp_fifo_out_startofpacket, --                .startofpacket
			rf_sink_endofpacket     => hex_digits_pio_s1_agent_rsp_fifo_out_endofpacket,   --                .endofpacket
			rf_sink_data            => hex_digits_pio_s1_agent_rsp_fifo_out_data,          --                .data
			rf_source_ready         => hex_digits_pio_s1_agent_rf_source_ready,            --       rf_source.ready
			rf_source_valid         => hex_digits_pio_s1_agent_rf_source_valid,            --                .valid
			rf_source_startofpacket => hex_digits_pio_s1_agent_rf_source_startofpacket,    --                .startofpacket
			rf_source_endofpacket   => hex_digits_pio_s1_agent_rf_source_endofpacket,      --                .endofpacket
			rf_source_data          => hex_digits_pio_s1_agent_rf_source_data,             --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_010_out_0_ready,                  -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_010_out_0_valid,                  --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_010_out_0_data,                   --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_010_out_0_error(0),               --                .error
			rdata_fifo_src_ready    => hex_digits_pio_s1_agent_rdata_fifo_src_ready,       --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => hex_digits_pio_s1_agent_rdata_fifo_src_valid,       --                .valid
			rdata_fifo_src_data     => hex_digits_pio_s1_agent_rdata_fifo_src_data,        --                .data
			m0_response             => "00",                                               --     (terminated)
			m0_writeresponsevalid   => '0'                                                 --     (terminated)
		);

	hex_digits_pio_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                      --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset,     -- clk_reset.reset
			in_data           => hex_digits_pio_s1_agent_rf_source_data,             --        in.data
			in_valid          => hex_digits_pio_s1_agent_rf_source_valid,            --          .valid
			in_ready          => hex_digits_pio_s1_agent_rf_source_ready,            --          .ready
			in_startofpacket  => hex_digits_pio_s1_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => hex_digits_pio_s1_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => hex_digits_pio_s1_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => hex_digits_pio_s1_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => hex_digits_pio_s1_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => hex_digits_pio_s1_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => hex_digits_pio_s1_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                               -- (terminated)
			csr_read          => '0',                                                -- (terminated)
			csr_write         => '0',                                                -- (terminated)
			csr_readdata      => open,                                               -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",                 -- (terminated)
			almost_full_data  => open,                                               -- (terminated)
			almost_empty_data => open,                                               -- (terminated)
			in_empty          => "0",                                                -- (terminated)
			out_empty         => open,                                               -- (terminated)
			in_error          => "0",                                                -- (terminated)
			out_error         => open,                                               -- (terminated)
			in_channel        => "0",                                                -- (terminated)
			out_channel       => open                                                -- (terminated)
		);

	leds_pio_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => leds_pio_s1_agent_m0_address,                   --              m0.address
			m0_burstcount           => leds_pio_s1_agent_m0_burstcount,                --                .burstcount
			m0_byteenable           => leds_pio_s1_agent_m0_byteenable,                --                .byteenable
			m0_debugaccess          => leds_pio_s1_agent_m0_debugaccess,               --                .debugaccess
			m0_lock                 => leds_pio_s1_agent_m0_lock,                      --                .lock
			m0_readdata             => leds_pio_s1_agent_m0_readdata,                  --                .readdata
			m0_readdatavalid        => leds_pio_s1_agent_m0_readdatavalid,             --                .readdatavalid
			m0_read                 => leds_pio_s1_agent_m0_read,                      --                .read
			m0_waitrequest          => leds_pio_s1_agent_m0_waitrequest,               --                .waitrequest
			m0_writedata            => leds_pio_s1_agent_m0_writedata,                 --                .writedata
			m0_write                => leds_pio_s1_agent_m0_write,                     --                .write
			rp_endofpacket          => leds_pio_s1_agent_rp_endofpacket,               --              rp.endofpacket
			rp_ready                => leds_pio_s1_agent_rp_ready,                     --                .ready
			rp_valid                => leds_pio_s1_agent_rp_valid,                     --                .valid
			rp_data                 => leds_pio_s1_agent_rp_data,                      --                .data
			rp_startofpacket        => leds_pio_s1_agent_rp_startofpacket,             --                .startofpacket
			cp_ready                => cmd_mux_011_src_ready,                          --              cp.ready
			cp_valid                => cmd_mux_011_src_valid,                          --                .valid
			cp_data                 => cmd_mux_011_src_data,                           --                .data
			cp_startofpacket        => cmd_mux_011_src_startofpacket,                  --                .startofpacket
			cp_endofpacket          => cmd_mux_011_src_endofpacket,                    --                .endofpacket
			cp_channel              => cmd_mux_011_src_channel,                        --                .channel
			rf_sink_ready           => leds_pio_s1_agent_rsp_fifo_out_ready,           --         rf_sink.ready
			rf_sink_valid           => leds_pio_s1_agent_rsp_fifo_out_valid,           --                .valid
			rf_sink_startofpacket   => leds_pio_s1_agent_rsp_fifo_out_startofpacket,   --                .startofpacket
			rf_sink_endofpacket     => leds_pio_s1_agent_rsp_fifo_out_endofpacket,     --                .endofpacket
			rf_sink_data            => leds_pio_s1_agent_rsp_fifo_out_data,            --                .data
			rf_source_ready         => leds_pio_s1_agent_rf_source_ready,              --       rf_source.ready
			rf_source_valid         => leds_pio_s1_agent_rf_source_valid,              --                .valid
			rf_source_startofpacket => leds_pio_s1_agent_rf_source_startofpacket,      --                .startofpacket
			rf_source_endofpacket   => leds_pio_s1_agent_rf_source_endofpacket,        --                .endofpacket
			rf_source_data          => leds_pio_s1_agent_rf_source_data,               --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_011_out_0_ready,              -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_011_out_0_valid,              --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_011_out_0_data,               --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_011_out_0_error(0),           --                .error
			rdata_fifo_src_ready    => leds_pio_s1_agent_rdata_fifo_src_ready,         --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => leds_pio_s1_agent_rdata_fifo_src_valid,         --                .valid
			rdata_fifo_src_data     => leds_pio_s1_agent_rdata_fifo_src_data,          --                .data
			m0_response             => "00",                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                             --     (terminated)
		);

	leds_pio_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => leds_pio_s1_agent_rf_source_data,               --        in.data
			in_valid          => leds_pio_s1_agent_rf_source_valid,              --          .valid
			in_ready          => leds_pio_s1_agent_rf_source_ready,              --          .ready
			in_startofpacket  => leds_pio_s1_agent_rf_source_startofpacket,      --          .startofpacket
			in_endofpacket    => leds_pio_s1_agent_rf_source_endofpacket,        --          .endofpacket
			out_data          => leds_pio_s1_agent_rsp_fifo_out_data,            --       out.data
			out_valid         => leds_pio_s1_agent_rsp_fifo_out_valid,           --          .valid
			out_ready         => leds_pio_s1_agent_rsp_fifo_out_ready,           --          .ready
			out_startofpacket => leds_pio_s1_agent_rsp_fifo_out_startofpacket,   --          .startofpacket
			out_endofpacket   => leds_pio_s1_agent_rsp_fifo_out_endofpacket,     --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	key_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => key_s1_agent_m0_address,                        --              m0.address
			m0_burstcount           => key_s1_agent_m0_burstcount,                     --                .burstcount
			m0_byteenable           => key_s1_agent_m0_byteenable,                     --                .byteenable
			m0_debugaccess          => key_s1_agent_m0_debugaccess,                    --                .debugaccess
			m0_lock                 => key_s1_agent_m0_lock,                           --                .lock
			m0_readdata             => key_s1_agent_m0_readdata,                       --                .readdata
			m0_readdatavalid        => key_s1_agent_m0_readdatavalid,                  --                .readdatavalid
			m0_read                 => key_s1_agent_m0_read,                           --                .read
			m0_waitrequest          => key_s1_agent_m0_waitrequest,                    --                .waitrequest
			m0_writedata            => key_s1_agent_m0_writedata,                      --                .writedata
			m0_write                => key_s1_agent_m0_write,                          --                .write
			rp_endofpacket          => key_s1_agent_rp_endofpacket,                    --              rp.endofpacket
			rp_ready                => key_s1_agent_rp_ready,                          --                .ready
			rp_valid                => key_s1_agent_rp_valid,                          --                .valid
			rp_data                 => key_s1_agent_rp_data,                           --                .data
			rp_startofpacket        => key_s1_agent_rp_startofpacket,                  --                .startofpacket
			cp_ready                => cmd_mux_012_src_ready,                          --              cp.ready
			cp_valid                => cmd_mux_012_src_valid,                          --                .valid
			cp_data                 => cmd_mux_012_src_data,                           --                .data
			cp_startofpacket        => cmd_mux_012_src_startofpacket,                  --                .startofpacket
			cp_endofpacket          => cmd_mux_012_src_endofpacket,                    --                .endofpacket
			cp_channel              => cmd_mux_012_src_channel,                        --                .channel
			rf_sink_ready           => key_s1_agent_rsp_fifo_out_ready,                --         rf_sink.ready
			rf_sink_valid           => key_s1_agent_rsp_fifo_out_valid,                --                .valid
			rf_sink_startofpacket   => key_s1_agent_rsp_fifo_out_startofpacket,        --                .startofpacket
			rf_sink_endofpacket     => key_s1_agent_rsp_fifo_out_endofpacket,          --                .endofpacket
			rf_sink_data            => key_s1_agent_rsp_fifo_out_data,                 --                .data
			rf_source_ready         => key_s1_agent_rf_source_ready,                   --       rf_source.ready
			rf_source_valid         => key_s1_agent_rf_source_valid,                   --                .valid
			rf_source_startofpacket => key_s1_agent_rf_source_startofpacket,           --                .startofpacket
			rf_source_endofpacket   => key_s1_agent_rf_source_endofpacket,             --                .endofpacket
			rf_source_data          => key_s1_agent_rf_source_data,                    --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_012_out_0_ready,              -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_012_out_0_valid,              --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_012_out_0_data,               --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_012_out_0_error(0),           --                .error
			rdata_fifo_src_ready    => key_s1_agent_rdata_fifo_src_ready,              --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => key_s1_agent_rdata_fifo_src_valid,              --                .valid
			rdata_fifo_src_data     => key_s1_agent_rdata_fifo_src_data,               --                .data
			m0_response             => "00",                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                             --     (terminated)
		);

	key_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => key_s1_agent_rf_source_data,                    --        in.data
			in_valid          => key_s1_agent_rf_source_valid,                   --          .valid
			in_ready          => key_s1_agent_rf_source_ready,                   --          .ready
			in_startofpacket  => key_s1_agent_rf_source_startofpacket,           --          .startofpacket
			in_endofpacket    => key_s1_agent_rf_source_endofpacket,             --          .endofpacket
			out_data          => key_s1_agent_rsp_fifo_out_data,                 --       out.data
			out_valid         => key_s1_agent_rsp_fifo_out_valid,                --          .valid
			out_ready         => key_s1_agent_rsp_fifo_out_ready,                --          .ready
			out_startofpacket => key_s1_agent_rsp_fifo_out_startofpacket,        --          .startofpacket
			out_endofpacket   => key_s1_agent_rsp_fifo_out_endofpacket,          --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	timer_0_s1_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                  --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --       clk_reset.reset
			m0_address              => timer_0_s1_agent_m0_address,                    --              m0.address
			m0_burstcount           => timer_0_s1_agent_m0_burstcount,                 --                .burstcount
			m0_byteenable           => timer_0_s1_agent_m0_byteenable,                 --                .byteenable
			m0_debugaccess          => timer_0_s1_agent_m0_debugaccess,                --                .debugaccess
			m0_lock                 => timer_0_s1_agent_m0_lock,                       --                .lock
			m0_readdata             => timer_0_s1_agent_m0_readdata,                   --                .readdata
			m0_readdatavalid        => timer_0_s1_agent_m0_readdatavalid,              --                .readdatavalid
			m0_read                 => timer_0_s1_agent_m0_read,                       --                .read
			m0_waitrequest          => timer_0_s1_agent_m0_waitrequest,                --                .waitrequest
			m0_writedata            => timer_0_s1_agent_m0_writedata,                  --                .writedata
			m0_write                => timer_0_s1_agent_m0_write,                      --                .write
			rp_endofpacket          => timer_0_s1_agent_rp_endofpacket,                --              rp.endofpacket
			rp_ready                => timer_0_s1_agent_rp_ready,                      --                .ready
			rp_valid                => timer_0_s1_agent_rp_valid,                      --                .valid
			rp_data                 => timer_0_s1_agent_rp_data,                       --                .data
			rp_startofpacket        => timer_0_s1_agent_rp_startofpacket,              --                .startofpacket
			cp_ready                => cmd_mux_013_src_ready,                          --              cp.ready
			cp_valid                => cmd_mux_013_src_valid,                          --                .valid
			cp_data                 => cmd_mux_013_src_data,                           --                .data
			cp_startofpacket        => cmd_mux_013_src_startofpacket,                  --                .startofpacket
			cp_endofpacket          => cmd_mux_013_src_endofpacket,                    --                .endofpacket
			cp_channel              => cmd_mux_013_src_channel,                        --                .channel
			rf_sink_ready           => timer_0_s1_agent_rsp_fifo_out_ready,            --         rf_sink.ready
			rf_sink_valid           => timer_0_s1_agent_rsp_fifo_out_valid,            --                .valid
			rf_sink_startofpacket   => timer_0_s1_agent_rsp_fifo_out_startofpacket,    --                .startofpacket
			rf_sink_endofpacket     => timer_0_s1_agent_rsp_fifo_out_endofpacket,      --                .endofpacket
			rf_sink_data            => timer_0_s1_agent_rsp_fifo_out_data,             --                .data
			rf_source_ready         => timer_0_s1_agent_rf_source_ready,               --       rf_source.ready
			rf_source_valid         => timer_0_s1_agent_rf_source_valid,               --                .valid
			rf_source_startofpacket => timer_0_s1_agent_rf_source_startofpacket,       --                .startofpacket
			rf_source_endofpacket   => timer_0_s1_agent_rf_source_endofpacket,         --                .endofpacket
			rf_source_data          => timer_0_s1_agent_rf_source_data,                --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_013_out_0_ready,              -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_013_out_0_valid,              --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_013_out_0_data,               --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_013_out_0_error(0),           --                .error
			rdata_fifo_src_ready    => timer_0_s1_agent_rdata_fifo_src_ready,          --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => timer_0_s1_agent_rdata_fifo_src_valid,          --                .valid
			rdata_fifo_src_data     => timer_0_s1_agent_rdata_fifo_src_data,           --                .data
			m0_response             => "00",                                           --     (terminated)
			m0_writeresponsevalid   => '0'                                             --     (terminated)
		);

	timer_0_s1_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                  --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			in_data           => timer_0_s1_agent_rf_source_data,                --        in.data
			in_valid          => timer_0_s1_agent_rf_source_valid,               --          .valid
			in_ready          => timer_0_s1_agent_rf_source_ready,               --          .ready
			in_startofpacket  => timer_0_s1_agent_rf_source_startofpacket,       --          .startofpacket
			in_endofpacket    => timer_0_s1_agent_rf_source_endofpacket,         --          .endofpacket
			out_data          => timer_0_s1_agent_rsp_fifo_out_data,             --       out.data
			out_valid         => timer_0_s1_agent_rsp_fifo_out_valid,            --          .valid
			out_ready         => timer_0_s1_agent_rsp_fifo_out_ready,            --          .ready
			out_startofpacket => timer_0_s1_agent_rsp_fifo_out_startofpacket,    --          .startofpacket
			out_endofpacket   => timer_0_s1_agent_rsp_fifo_out_endofpacket,      --          .endofpacket
			csr_address       => "00",                                           -- (terminated)
			csr_read          => '0',                                            -- (terminated)
			csr_write         => '0',                                            -- (terminated)
			csr_readdata      => open,                                           -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",             -- (terminated)
			almost_full_data  => open,                                           -- (terminated)
			almost_empty_data => open,                                           -- (terminated)
			in_empty          => "0",                                            -- (terminated)
			out_empty         => open,                                           -- (terminated)
			in_error          => "0",                                            -- (terminated)
			out_error         => open,                                           -- (terminated)
			in_channel        => "0",                                            -- (terminated)
			out_channel       => open                                            -- (terminated)
		);

	spi_0_spi_control_port_agent : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent
		generic map (
			PKT_ORI_BURST_SIZE_H      => 105,
			PKT_ORI_BURST_SIZE_L      => 103,
			PKT_RESPONSE_STATUS_H     => 102,
			PKT_RESPONSE_STATUS_L     => 101,
			PKT_BURST_SIZE_H          => 78,
			PKT_BURST_SIZE_L          => 76,
			PKT_TRANS_LOCK            => 68,
			PKT_BEGIN_BURST           => 83,
			PKT_PROTECTION_H          => 96,
			PKT_PROTECTION_L          => 94,
			PKT_BURSTWRAP_H           => 75,
			PKT_BURSTWRAP_L           => 73,
			PKT_BYTE_CNT_H            => 72,
			PKT_BYTE_CNT_L            => 70,
			PKT_ADDR_H                => 63,
			PKT_ADDR_L                => 36,
			PKT_TRANS_COMPRESSED_READ => 64,
			PKT_TRANS_POSTED          => 65,
			PKT_TRANS_WRITE           => 66,
			PKT_TRANS_READ            => 67,
			PKT_DATA_H                => 31,
			PKT_DATA_L                => 0,
			PKT_BYTEEN_H              => 35,
			PKT_BYTEEN_L              => 32,
			PKT_SRC_ID_H              => 88,
			PKT_SRC_ID_L              => 85,
			PKT_DEST_ID_H             => 92,
			PKT_DEST_ID_L             => 89,
			PKT_SYMBOL_W              => 8,
			ST_CHANNEL_W              => 15,
			ST_DATA_W                 => 106,
			AVS_BURSTCOUNT_W          => 3,
			SUPPRESS_0_BYTEEN_CMD     => 0,
			PREVENT_FIFO_OVERFLOW     => 1,
			USE_READRESPONSE          => 0,
			USE_WRITERESPONSE         => 0,
			ECC_ENABLE                => 0
		)
		port map (
			clk                     => clk_0_clk_clk,                                           --             clk.clk
			reset                   => nios2_gen2_0_reset_reset_bridge_in_reset_reset,          --       clk_reset.reset
			m0_address              => spi_0_spi_control_port_agent_m0_address,                 --              m0.address
			m0_burstcount           => spi_0_spi_control_port_agent_m0_burstcount,              --                .burstcount
			m0_byteenable           => spi_0_spi_control_port_agent_m0_byteenable,              --                .byteenable
			m0_debugaccess          => spi_0_spi_control_port_agent_m0_debugaccess,             --                .debugaccess
			m0_lock                 => spi_0_spi_control_port_agent_m0_lock,                    --                .lock
			m0_readdata             => spi_0_spi_control_port_agent_m0_readdata,                --                .readdata
			m0_readdatavalid        => spi_0_spi_control_port_agent_m0_readdatavalid,           --                .readdatavalid
			m0_read                 => spi_0_spi_control_port_agent_m0_read,                    --                .read
			m0_waitrequest          => spi_0_spi_control_port_agent_m0_waitrequest,             --                .waitrequest
			m0_writedata            => spi_0_spi_control_port_agent_m0_writedata,               --                .writedata
			m0_write                => spi_0_spi_control_port_agent_m0_write,                   --                .write
			rp_endofpacket          => spi_0_spi_control_port_agent_rp_endofpacket,             --              rp.endofpacket
			rp_ready                => spi_0_spi_control_port_agent_rp_ready,                   --                .ready
			rp_valid                => spi_0_spi_control_port_agent_rp_valid,                   --                .valid
			rp_data                 => spi_0_spi_control_port_agent_rp_data,                    --                .data
			rp_startofpacket        => spi_0_spi_control_port_agent_rp_startofpacket,           --                .startofpacket
			cp_ready                => cmd_mux_014_src_ready,                                   --              cp.ready
			cp_valid                => cmd_mux_014_src_valid,                                   --                .valid
			cp_data                 => cmd_mux_014_src_data,                                    --                .data
			cp_startofpacket        => cmd_mux_014_src_startofpacket,                           --                .startofpacket
			cp_endofpacket          => cmd_mux_014_src_endofpacket,                             --                .endofpacket
			cp_channel              => cmd_mux_014_src_channel,                                 --                .channel
			rf_sink_ready           => spi_0_spi_control_port_agent_rsp_fifo_out_ready,         --         rf_sink.ready
			rf_sink_valid           => spi_0_spi_control_port_agent_rsp_fifo_out_valid,         --                .valid
			rf_sink_startofpacket   => spi_0_spi_control_port_agent_rsp_fifo_out_startofpacket, --                .startofpacket
			rf_sink_endofpacket     => spi_0_spi_control_port_agent_rsp_fifo_out_endofpacket,   --                .endofpacket
			rf_sink_data            => spi_0_spi_control_port_agent_rsp_fifo_out_data,          --                .data
			rf_source_ready         => spi_0_spi_control_port_agent_rf_source_ready,            --       rf_source.ready
			rf_source_valid         => spi_0_spi_control_port_agent_rf_source_valid,            --                .valid
			rf_source_startofpacket => spi_0_spi_control_port_agent_rf_source_startofpacket,    --                .startofpacket
			rf_source_endofpacket   => spi_0_spi_control_port_agent_rf_source_endofpacket,      --                .endofpacket
			rf_source_data          => spi_0_spi_control_port_agent_rf_source_data,             --                .data
			rdata_fifo_sink_ready   => avalon_st_adapter_014_out_0_ready,                       -- rdata_fifo_sink.ready
			rdata_fifo_sink_valid   => avalon_st_adapter_014_out_0_valid,                       --                .valid
			rdata_fifo_sink_data    => avalon_st_adapter_014_out_0_data,                        --                .data
			rdata_fifo_sink_error   => avalon_st_adapter_014_out_0_error(0),                    --                .error
			rdata_fifo_src_ready    => spi_0_spi_control_port_agent_rdata_fifo_src_ready,       --  rdata_fifo_src.ready
			rdata_fifo_src_valid    => spi_0_spi_control_port_agent_rdata_fifo_src_valid,       --                .valid
			rdata_fifo_src_data     => spi_0_spi_control_port_agent_rdata_fifo_src_data,        --                .data
			m0_response             => "00",                                                    --     (terminated)
			m0_writeresponsevalid   => '0'                                                      --     (terminated)
		);

	spi_0_spi_control_port_agent_rsp_fifo : component lab62soc_mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo
		generic map (
			SYMBOLS_PER_BEAT    => 1,
			BITS_PER_SYMBOL     => 107,
			FIFO_DEPTH          => 2,
			CHANNEL_WIDTH       => 0,
			ERROR_WIDTH         => 0,
			USE_PACKETS         => 1,
			USE_FILL_LEVEL      => 0,
			EMPTY_LATENCY       => 1,
			USE_MEMORY_BLOCKS   => 0,
			USE_STORE_FORWARD   => 0,
			USE_ALMOST_FULL_IF  => 0,
			USE_ALMOST_EMPTY_IF => 0
		)
		port map (
			clk               => clk_0_clk_clk,                                           --       clk.clk
			reset             => nios2_gen2_0_reset_reset_bridge_in_reset_reset,          -- clk_reset.reset
			in_data           => spi_0_spi_control_port_agent_rf_source_data,             --        in.data
			in_valid          => spi_0_spi_control_port_agent_rf_source_valid,            --          .valid
			in_ready          => spi_0_spi_control_port_agent_rf_source_ready,            --          .ready
			in_startofpacket  => spi_0_spi_control_port_agent_rf_source_startofpacket,    --          .startofpacket
			in_endofpacket    => spi_0_spi_control_port_agent_rf_source_endofpacket,      --          .endofpacket
			out_data          => spi_0_spi_control_port_agent_rsp_fifo_out_data,          --       out.data
			out_valid         => spi_0_spi_control_port_agent_rsp_fifo_out_valid,         --          .valid
			out_ready         => spi_0_spi_control_port_agent_rsp_fifo_out_ready,         --          .ready
			out_startofpacket => spi_0_spi_control_port_agent_rsp_fifo_out_startofpacket, --          .startofpacket
			out_endofpacket   => spi_0_spi_control_port_agent_rsp_fifo_out_endofpacket,   --          .endofpacket
			csr_address       => "00",                                                    -- (terminated)
			csr_read          => '0',                                                     -- (terminated)
			csr_write         => '0',                                                     -- (terminated)
			csr_readdata      => open,                                                    -- (terminated)
			csr_writedata     => "00000000000000000000000000000000",                      -- (terminated)
			almost_full_data  => open,                                                    -- (terminated)
			almost_empty_data => open,                                                    -- (terminated)
			in_empty          => "0",                                                     -- (terminated)
			out_empty         => open,                                                    -- (terminated)
			in_error          => "0",                                                     -- (terminated)
			out_error         => open,                                                    -- (terminated)
			in_channel        => "0",                                                     -- (terminated)
			out_channel       => open                                                     -- (terminated)
		);

	router : component lab62soc_mm_interconnect_0_router
		port map (
			sink_ready         => nios2_gen2_0_data_master_agent_cp_ready,         --      sink.ready
			sink_valid         => nios2_gen2_0_data_master_agent_cp_valid,         --          .valid
			sink_data          => nios2_gen2_0_data_master_agent_cp_data,          --          .data
			sink_startofpacket => nios2_gen2_0_data_master_agent_cp_startofpacket, --          .startofpacket
			sink_endofpacket   => nios2_gen2_0_data_master_agent_cp_endofpacket,   --          .endofpacket
			clk                => clk_0_clk_clk,                                   --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset,  -- clk_reset.reset
			src_ready          => router_src_ready,                                --       src.ready
			src_valid          => router_src_valid,                                --          .valid
			src_data           => router_src_data,                                 --          .data
			src_channel        => router_src_channel,                              --          .channel
			src_startofpacket  => router_src_startofpacket,                        --          .startofpacket
			src_endofpacket    => router_src_endofpacket                           --          .endofpacket
		);

	router_001 : component lab62soc_mm_interconnect_0_router
		port map (
			sink_ready         => nios2_gen2_0_instruction_master_agent_cp_ready,         --      sink.ready
			sink_valid         => nios2_gen2_0_instruction_master_agent_cp_valid,         --          .valid
			sink_data          => nios2_gen2_0_instruction_master_agent_cp_data,          --          .data
			sink_startofpacket => nios2_gen2_0_instruction_master_agent_cp_startofpacket, --          .startofpacket
			sink_endofpacket   => nios2_gen2_0_instruction_master_agent_cp_endofpacket,   --          .endofpacket
			clk                => clk_0_clk_clk,                                          --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset,         -- clk_reset.reset
			src_ready          => router_001_src_ready,                                   --       src.ready
			src_valid          => router_001_src_valid,                                   --          .valid
			src_data           => router_001_src_data,                                    --          .data
			src_channel        => router_001_src_channel,                                 --          .channel
			src_startofpacket  => router_001_src_startofpacket,                           --          .startofpacket
			src_endofpacket    => router_001_src_endofpacket                              --          .endofpacket
		);

	router_002 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => jtag_uart_0_avalon_jtag_slave_agent_rp_ready,         --      sink.ready
			sink_valid         => jtag_uart_0_avalon_jtag_slave_agent_rp_valid,         --          .valid
			sink_data          => jtag_uart_0_avalon_jtag_slave_agent_rp_data,          --          .data
			sink_startofpacket => jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket, --          .startofpacket
			sink_endofpacket   => jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket,   --          .endofpacket
			clk                => clk_0_clk_clk,                                        --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset,       -- clk_reset.reset
			src_ready          => router_002_src_ready,                                 --       src.ready
			src_valid          => router_002_src_valid,                                 --          .valid
			src_data           => router_002_src_data,                                  --          .data
			src_channel        => router_002_src_channel,                               --          .channel
			src_startofpacket  => router_002_src_startofpacket,                         --          .startofpacket
			src_endofpacket    => router_002_src_endofpacket                            --          .endofpacket
		);

	router_003 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => sysid_qsys_0_control_slave_agent_rp_ready,         --      sink.ready
			sink_valid         => sysid_qsys_0_control_slave_agent_rp_valid,         --          .valid
			sink_data          => sysid_qsys_0_control_slave_agent_rp_data,          --          .data
			sink_startofpacket => sysid_qsys_0_control_slave_agent_rp_startofpacket, --          .startofpacket
			sink_endofpacket   => sysid_qsys_0_control_slave_agent_rp_endofpacket,   --          .endofpacket
			clk                => clk_0_clk_clk,                                     --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset,    -- clk_reset.reset
			src_ready          => router_003_src_ready,                              --       src.ready
			src_valid          => router_003_src_valid,                              --          .valid
			src_data           => router_003_src_data,                               --          .data
			src_channel        => router_003_src_channel,                            --          .channel
			src_startofpacket  => router_003_src_startofpacket,                      --          .startofpacket
			src_endofpacket    => router_003_src_endofpacket                         --          .endofpacket
		);

	router_004 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => nios2_gen2_0_debug_mem_slave_agent_rp_ready,         --      sink.ready
			sink_valid         => nios2_gen2_0_debug_mem_slave_agent_rp_valid,         --          .valid
			sink_data          => nios2_gen2_0_debug_mem_slave_agent_rp_data,          --          .data
			sink_startofpacket => nios2_gen2_0_debug_mem_slave_agent_rp_startofpacket, --          .startofpacket
			sink_endofpacket   => nios2_gen2_0_debug_mem_slave_agent_rp_endofpacket,   --          .endofpacket
			clk                => clk_0_clk_clk,                                       --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset,      -- clk_reset.reset
			src_ready          => router_004_src_ready,                                --       src.ready
			src_valid          => router_004_src_valid,                                --          .valid
			src_data           => router_004_src_data,                                 --          .data
			src_channel        => router_004_src_channel,                              --          .channel
			src_startofpacket  => router_004_src_startofpacket,                        --          .startofpacket
			src_endofpacket    => router_004_src_endofpacket                           --          .endofpacket
		);

	router_005 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => sdram_pll_pll_slave_agent_rp_ready,             --      sink.ready
			sink_valid         => sdram_pll_pll_slave_agent_rp_valid,             --          .valid
			sink_data          => sdram_pll_pll_slave_agent_rp_data,              --          .data
			sink_startofpacket => sdram_pll_pll_slave_agent_rp_startofpacket,     --          .startofpacket
			sink_endofpacket   => sdram_pll_pll_slave_agent_rp_endofpacket,       --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_005_src_ready,                           --       src.ready
			src_valid          => router_005_src_valid,                           --          .valid
			src_data           => router_005_src_data,                            --          .data
			src_channel        => router_005_src_channel,                         --          .channel
			src_startofpacket  => router_005_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_005_src_endofpacket                      --          .endofpacket
		);

	router_006 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => onchip_memory2_0_s1_agent_rp_ready,             --      sink.ready
			sink_valid         => onchip_memory2_0_s1_agent_rp_valid,             --          .valid
			sink_data          => onchip_memory2_0_s1_agent_rp_data,              --          .data
			sink_startofpacket => onchip_memory2_0_s1_agent_rp_startofpacket,     --          .startofpacket
			sink_endofpacket   => onchip_memory2_0_s1_agent_rp_endofpacket,       --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_006_src_ready,                           --       src.ready
			src_valid          => router_006_src_valid,                           --          .valid
			src_data           => router_006_src_data,                            --          .data
			src_channel        => router_006_src_channel,                         --          .channel
			src_startofpacket  => router_006_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_006_src_endofpacket                      --          .endofpacket
		);

	router_007 : component lab62soc_mm_interconnect_0_router_007
		port map (
			sink_ready         => sdram_s1_agent_rp_ready,                 --      sink.ready
			sink_valid         => sdram_s1_agent_rp_valid,                 --          .valid
			sink_data          => sdram_s1_agent_rp_data,                  --          .data
			sink_startofpacket => sdram_s1_agent_rp_startofpacket,         --          .startofpacket
			sink_endofpacket   => sdram_s1_agent_rp_endofpacket,           --          .endofpacket
			clk                => sdram_pll_c0_clk,                        --       clk.clk
			reset              => sdram_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_007_src_ready,                    --       src.ready
			src_valid          => router_007_src_valid,                    --          .valid
			src_data           => router_007_src_data,                     --          .data
			src_channel        => router_007_src_channel,                  --          .channel
			src_startofpacket  => router_007_src_startofpacket,            --          .startofpacket
			src_endofpacket    => router_007_src_endofpacket               --          .endofpacket
		);

	router_008 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => keycode_s1_agent_rp_ready,                      --      sink.ready
			sink_valid         => keycode_s1_agent_rp_valid,                      --          .valid
			sink_data          => keycode_s1_agent_rp_data,                       --          .data
			sink_startofpacket => keycode_s1_agent_rp_startofpacket,              --          .startofpacket
			sink_endofpacket   => keycode_s1_agent_rp_endofpacket,                --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_008_src_ready,                           --       src.ready
			src_valid          => router_008_src_valid,                           --          .valid
			src_data           => router_008_src_data,                            --          .data
			src_channel        => router_008_src_channel,                         --          .channel
			src_startofpacket  => router_008_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_008_src_endofpacket                      --          .endofpacket
		);

	router_009 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => usb_irq_s1_agent_rp_ready,                      --      sink.ready
			sink_valid         => usb_irq_s1_agent_rp_valid,                      --          .valid
			sink_data          => usb_irq_s1_agent_rp_data,                       --          .data
			sink_startofpacket => usb_irq_s1_agent_rp_startofpacket,              --          .startofpacket
			sink_endofpacket   => usb_irq_s1_agent_rp_endofpacket,                --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_009_src_ready,                           --       src.ready
			src_valid          => router_009_src_valid,                           --          .valid
			src_data           => router_009_src_data,                            --          .data
			src_channel        => router_009_src_channel,                         --          .channel
			src_startofpacket  => router_009_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_009_src_endofpacket                      --          .endofpacket
		);

	router_010 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => usb_gpx_s1_agent_rp_ready,                      --      sink.ready
			sink_valid         => usb_gpx_s1_agent_rp_valid,                      --          .valid
			sink_data          => usb_gpx_s1_agent_rp_data,                       --          .data
			sink_startofpacket => usb_gpx_s1_agent_rp_startofpacket,              --          .startofpacket
			sink_endofpacket   => usb_gpx_s1_agent_rp_endofpacket,                --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_010_src_ready,                           --       src.ready
			src_valid          => router_010_src_valid,                           --          .valid
			src_data           => router_010_src_data,                            --          .data
			src_channel        => router_010_src_channel,                         --          .channel
			src_startofpacket  => router_010_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_010_src_endofpacket                      --          .endofpacket
		);

	router_011 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => usb_rst_s1_agent_rp_ready,                      --      sink.ready
			sink_valid         => usb_rst_s1_agent_rp_valid,                      --          .valid
			sink_data          => usb_rst_s1_agent_rp_data,                       --          .data
			sink_startofpacket => usb_rst_s1_agent_rp_startofpacket,              --          .startofpacket
			sink_endofpacket   => usb_rst_s1_agent_rp_endofpacket,                --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_011_src_ready,                           --       src.ready
			src_valid          => router_011_src_valid,                           --          .valid
			src_data           => router_011_src_data,                            --          .data
			src_channel        => router_011_src_channel,                         --          .channel
			src_startofpacket  => router_011_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_011_src_endofpacket                      --          .endofpacket
		);

	router_012 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => hex_digits_pio_s1_agent_rp_ready,               --      sink.ready
			sink_valid         => hex_digits_pio_s1_agent_rp_valid,               --          .valid
			sink_data          => hex_digits_pio_s1_agent_rp_data,                --          .data
			sink_startofpacket => hex_digits_pio_s1_agent_rp_startofpacket,       --          .startofpacket
			sink_endofpacket   => hex_digits_pio_s1_agent_rp_endofpacket,         --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_012_src_ready,                           --       src.ready
			src_valid          => router_012_src_valid,                           --          .valid
			src_data           => router_012_src_data,                            --          .data
			src_channel        => router_012_src_channel,                         --          .channel
			src_startofpacket  => router_012_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_012_src_endofpacket                      --          .endofpacket
		);

	router_013 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => leds_pio_s1_agent_rp_ready,                     --      sink.ready
			sink_valid         => leds_pio_s1_agent_rp_valid,                     --          .valid
			sink_data          => leds_pio_s1_agent_rp_data,                      --          .data
			sink_startofpacket => leds_pio_s1_agent_rp_startofpacket,             --          .startofpacket
			sink_endofpacket   => leds_pio_s1_agent_rp_endofpacket,               --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_013_src_ready,                           --       src.ready
			src_valid          => router_013_src_valid,                           --          .valid
			src_data           => router_013_src_data,                            --          .data
			src_channel        => router_013_src_channel,                         --          .channel
			src_startofpacket  => router_013_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_013_src_endofpacket                      --          .endofpacket
		);

	router_014 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => key_s1_agent_rp_ready,                          --      sink.ready
			sink_valid         => key_s1_agent_rp_valid,                          --          .valid
			sink_data          => key_s1_agent_rp_data,                           --          .data
			sink_startofpacket => key_s1_agent_rp_startofpacket,                  --          .startofpacket
			sink_endofpacket   => key_s1_agent_rp_endofpacket,                    --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_014_src_ready,                           --       src.ready
			src_valid          => router_014_src_valid,                           --          .valid
			src_data           => router_014_src_data,                            --          .data
			src_channel        => router_014_src_channel,                         --          .channel
			src_startofpacket  => router_014_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_014_src_endofpacket                      --          .endofpacket
		);

	router_015 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => timer_0_s1_agent_rp_ready,                      --      sink.ready
			sink_valid         => timer_0_s1_agent_rp_valid,                      --          .valid
			sink_data          => timer_0_s1_agent_rp_data,                       --          .data
			sink_startofpacket => timer_0_s1_agent_rp_startofpacket,              --          .startofpacket
			sink_endofpacket   => timer_0_s1_agent_rp_endofpacket,                --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_015_src_ready,                           --       src.ready
			src_valid          => router_015_src_valid,                           --          .valid
			src_data           => router_015_src_data,                            --          .data
			src_channel        => router_015_src_channel,                         --          .channel
			src_startofpacket  => router_015_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_015_src_endofpacket                      --          .endofpacket
		);

	router_016 : component lab62soc_mm_interconnect_0_router_002
		port map (
			sink_ready         => spi_0_spi_control_port_agent_rp_ready,          --      sink.ready
			sink_valid         => spi_0_spi_control_port_agent_rp_valid,          --          .valid
			sink_data          => spi_0_spi_control_port_agent_rp_data,           --          .data
			sink_startofpacket => spi_0_spi_control_port_agent_rp_startofpacket,  --          .startofpacket
			sink_endofpacket   => spi_0_spi_control_port_agent_rp_endofpacket,    --          .endofpacket
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready          => router_016_src_ready,                           --       src.ready
			src_valid          => router_016_src_valid,                           --          .valid
			src_data           => router_016_src_data,                            --          .data
			src_channel        => router_016_src_channel,                         --          .channel
			src_startofpacket  => router_016_src_startofpacket,                   --          .startofpacket
			src_endofpacket    => router_016_src_endofpacket                      --          .endofpacket
		);

	sdram_s1_burst_adapter : component altera_merlin_burst_adapter
		generic map (
			PKT_ADDR_H                => 45,
			PKT_ADDR_L                => 18,
			PKT_BEGIN_BURST           => 65,
			PKT_BYTE_CNT_H            => 54,
			PKT_BYTE_CNT_L            => 52,
			PKT_BYTEEN_H              => 17,
			PKT_BYTEEN_L              => 16,
			PKT_BURST_SIZE_H          => 60,
			PKT_BURST_SIZE_L          => 58,
			PKT_BURST_TYPE_H          => 62,
			PKT_BURST_TYPE_L          => 61,
			PKT_BURSTWRAP_H           => 57,
			PKT_BURSTWRAP_L           => 55,
			PKT_TRANS_COMPRESSED_READ => 46,
			PKT_TRANS_WRITE           => 48,
			PKT_TRANS_READ            => 49,
			OUT_NARROW_SIZE           => 0,
			IN_NARROW_SIZE            => 0,
			OUT_FIXED                 => 0,
			OUT_COMPLETE_WRAP         => 0,
			ST_DATA_W                 => 88,
			ST_CHANNEL_W              => 15,
			OUT_BYTE_CNT_H            => 53,
			OUT_BURSTWRAP_H           => 57,
			COMPRESSED_READ_SUPPORT   => 0,
			BYTEENABLE_SYNTHESIS      => 1,
			PIPE_INPUTS               => 0,
			NO_WRAP_SUPPORT           => 0,
			INCOMPLETE_WRAP_SUPPORT   => 0,
			BURSTWRAP_CONST_MASK      => 3,
			BURSTWRAP_CONST_VALUE     => 3,
			ADAPTER_VERSION           => "13.1"
		)
		port map (
			clk                   => sdram_pll_c0_clk,                             --       cr0.clk
			reset                 => sdram_reset_reset_bridge_in_reset_reset,      -- cr0_reset.reset
			sink0_valid           => sdram_s1_cmd_width_adapter_src_valid,         --     sink0.valid
			sink0_data            => sdram_s1_cmd_width_adapter_src_data,          --          .data
			sink0_channel         => sdram_s1_cmd_width_adapter_src_channel,       --          .channel
			sink0_startofpacket   => sdram_s1_cmd_width_adapter_src_startofpacket, --          .startofpacket
			sink0_endofpacket     => sdram_s1_cmd_width_adapter_src_endofpacket,   --          .endofpacket
			sink0_ready           => sdram_s1_cmd_width_adapter_src_ready,         --          .ready
			source0_valid         => sdram_s1_burst_adapter_source0_valid,         --   source0.valid
			source0_data          => sdram_s1_burst_adapter_source0_data,          --          .data
			source0_channel       => sdram_s1_burst_adapter_source0_channel,       --          .channel
			source0_startofpacket => sdram_s1_burst_adapter_source0_startofpacket, --          .startofpacket
			source0_endofpacket   => sdram_s1_burst_adapter_source0_endofpacket,   --          .endofpacket
			source0_ready         => sdram_s1_burst_adapter_source0_ready          --          .ready
		);

	cmd_demux : component lab62soc_mm_interconnect_0_cmd_demux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready          => router_src_ready,                               --      sink.ready
			sink_channel        => router_src_channel,                             --          .channel
			sink_data           => router_src_data,                                --          .data
			sink_startofpacket  => router_src_startofpacket,                       --          .startofpacket
			sink_endofpacket    => router_src_endofpacket,                         --          .endofpacket
			sink_valid(0)       => router_src_valid,                               --          .valid
			src0_ready          => cmd_demux_src0_ready,                           --      src0.ready
			src0_valid          => cmd_demux_src0_valid,                           --          .valid
			src0_data           => cmd_demux_src0_data,                            --          .data
			src0_channel        => cmd_demux_src0_channel,                         --          .channel
			src0_startofpacket  => cmd_demux_src0_startofpacket,                   --          .startofpacket
			src0_endofpacket    => cmd_demux_src0_endofpacket,                     --          .endofpacket
			src1_ready          => cmd_demux_src1_ready,                           --      src1.ready
			src1_valid          => cmd_demux_src1_valid,                           --          .valid
			src1_data           => cmd_demux_src1_data,                            --          .data
			src1_channel        => cmd_demux_src1_channel,                         --          .channel
			src1_startofpacket  => cmd_demux_src1_startofpacket,                   --          .startofpacket
			src1_endofpacket    => cmd_demux_src1_endofpacket,                     --          .endofpacket
			src2_ready          => cmd_demux_src2_ready,                           --      src2.ready
			src2_valid          => cmd_demux_src2_valid,                           --          .valid
			src2_data           => cmd_demux_src2_data,                            --          .data
			src2_channel        => cmd_demux_src2_channel,                         --          .channel
			src2_startofpacket  => cmd_demux_src2_startofpacket,                   --          .startofpacket
			src2_endofpacket    => cmd_demux_src2_endofpacket,                     --          .endofpacket
			src3_ready          => cmd_demux_src3_ready,                           --      src3.ready
			src3_valid          => cmd_demux_src3_valid,                           --          .valid
			src3_data           => cmd_demux_src3_data,                            --          .data
			src3_channel        => cmd_demux_src3_channel,                         --          .channel
			src3_startofpacket  => cmd_demux_src3_startofpacket,                   --          .startofpacket
			src3_endofpacket    => cmd_demux_src3_endofpacket,                     --          .endofpacket
			src4_ready          => cmd_demux_src4_ready,                           --      src4.ready
			src4_valid          => cmd_demux_src4_valid,                           --          .valid
			src4_data           => cmd_demux_src4_data,                            --          .data
			src4_channel        => cmd_demux_src4_channel,                         --          .channel
			src4_startofpacket  => cmd_demux_src4_startofpacket,                   --          .startofpacket
			src4_endofpacket    => cmd_demux_src4_endofpacket,                     --          .endofpacket
			src5_ready          => cmd_demux_src5_ready,                           --      src5.ready
			src5_valid          => cmd_demux_src5_valid,                           --          .valid
			src5_data           => cmd_demux_src5_data,                            --          .data
			src5_channel        => cmd_demux_src5_channel,                         --          .channel
			src5_startofpacket  => cmd_demux_src5_startofpacket,                   --          .startofpacket
			src5_endofpacket    => cmd_demux_src5_endofpacket,                     --          .endofpacket
			src6_ready          => cmd_demux_src6_ready,                           --      src6.ready
			src6_valid          => cmd_demux_src6_valid,                           --          .valid
			src6_data           => cmd_demux_src6_data,                            --          .data
			src6_channel        => cmd_demux_src6_channel,                         --          .channel
			src6_startofpacket  => cmd_demux_src6_startofpacket,                   --          .startofpacket
			src6_endofpacket    => cmd_demux_src6_endofpacket,                     --          .endofpacket
			src7_ready          => cmd_demux_src7_ready,                           --      src7.ready
			src7_valid          => cmd_demux_src7_valid,                           --          .valid
			src7_data           => cmd_demux_src7_data,                            --          .data
			src7_channel        => cmd_demux_src7_channel,                         --          .channel
			src7_startofpacket  => cmd_demux_src7_startofpacket,                   --          .startofpacket
			src7_endofpacket    => cmd_demux_src7_endofpacket,                     --          .endofpacket
			src8_ready          => cmd_demux_src8_ready,                           --      src8.ready
			src8_valid          => cmd_demux_src8_valid,                           --          .valid
			src8_data           => cmd_demux_src8_data,                            --          .data
			src8_channel        => cmd_demux_src8_channel,                         --          .channel
			src8_startofpacket  => cmd_demux_src8_startofpacket,                   --          .startofpacket
			src8_endofpacket    => cmd_demux_src8_endofpacket,                     --          .endofpacket
			src9_ready          => cmd_demux_src9_ready,                           --      src9.ready
			src9_valid          => cmd_demux_src9_valid,                           --          .valid
			src9_data           => cmd_demux_src9_data,                            --          .data
			src9_channel        => cmd_demux_src9_channel,                         --          .channel
			src9_startofpacket  => cmd_demux_src9_startofpacket,                   --          .startofpacket
			src9_endofpacket    => cmd_demux_src9_endofpacket,                     --          .endofpacket
			src10_ready         => cmd_demux_src10_ready,                          --     src10.ready
			src10_valid         => cmd_demux_src10_valid,                          --          .valid
			src10_data          => cmd_demux_src10_data,                           --          .data
			src10_channel       => cmd_demux_src10_channel,                        --          .channel
			src10_startofpacket => cmd_demux_src10_startofpacket,                  --          .startofpacket
			src10_endofpacket   => cmd_demux_src10_endofpacket,                    --          .endofpacket
			src11_ready         => cmd_demux_src11_ready,                          --     src11.ready
			src11_valid         => cmd_demux_src11_valid,                          --          .valid
			src11_data          => cmd_demux_src11_data,                           --          .data
			src11_channel       => cmd_demux_src11_channel,                        --          .channel
			src11_startofpacket => cmd_demux_src11_startofpacket,                  --          .startofpacket
			src11_endofpacket   => cmd_demux_src11_endofpacket,                    --          .endofpacket
			src12_ready         => cmd_demux_src12_ready,                          --     src12.ready
			src12_valid         => cmd_demux_src12_valid,                          --          .valid
			src12_data          => cmd_demux_src12_data,                           --          .data
			src12_channel       => cmd_demux_src12_channel,                        --          .channel
			src12_startofpacket => cmd_demux_src12_startofpacket,                  --          .startofpacket
			src12_endofpacket   => cmd_demux_src12_endofpacket,                    --          .endofpacket
			src13_ready         => cmd_demux_src13_ready,                          --     src13.ready
			src13_valid         => cmd_demux_src13_valid,                          --          .valid
			src13_data          => cmd_demux_src13_data,                           --          .data
			src13_channel       => cmd_demux_src13_channel,                        --          .channel
			src13_startofpacket => cmd_demux_src13_startofpacket,                  --          .startofpacket
			src13_endofpacket   => cmd_demux_src13_endofpacket,                    --          .endofpacket
			src14_ready         => cmd_demux_src14_ready,                          --     src14.ready
			src14_valid         => cmd_demux_src14_valid,                          --          .valid
			src14_data          => cmd_demux_src14_data,                           --          .data
			src14_channel       => cmd_demux_src14_channel,                        --          .channel
			src14_startofpacket => cmd_demux_src14_startofpacket,                  --          .startofpacket
			src14_endofpacket   => cmd_demux_src14_endofpacket                     --          .endofpacket
		);

	cmd_demux_001 : component lab62soc_mm_interconnect_0_cmd_demux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready          => router_001_src_ready,                           --      sink.ready
			sink_channel        => router_001_src_channel,                         --          .channel
			sink_data           => router_001_src_data,                            --          .data
			sink_startofpacket  => router_001_src_startofpacket,                   --          .startofpacket
			sink_endofpacket    => router_001_src_endofpacket,                     --          .endofpacket
			sink_valid(0)       => router_001_src_valid,                           --          .valid
			src0_ready          => cmd_demux_001_src0_ready,                       --      src0.ready
			src0_valid          => cmd_demux_001_src0_valid,                       --          .valid
			src0_data           => cmd_demux_001_src0_data,                        --          .data
			src0_channel        => cmd_demux_001_src0_channel,                     --          .channel
			src0_startofpacket  => cmd_demux_001_src0_startofpacket,               --          .startofpacket
			src0_endofpacket    => cmd_demux_001_src0_endofpacket,                 --          .endofpacket
			src1_ready          => cmd_demux_001_src1_ready,                       --      src1.ready
			src1_valid          => cmd_demux_001_src1_valid,                       --          .valid
			src1_data           => cmd_demux_001_src1_data,                        --          .data
			src1_channel        => cmd_demux_001_src1_channel,                     --          .channel
			src1_startofpacket  => cmd_demux_001_src1_startofpacket,               --          .startofpacket
			src1_endofpacket    => cmd_demux_001_src1_endofpacket,                 --          .endofpacket
			src2_ready          => cmd_demux_001_src2_ready,                       --      src2.ready
			src2_valid          => cmd_demux_001_src2_valid,                       --          .valid
			src2_data           => cmd_demux_001_src2_data,                        --          .data
			src2_channel        => cmd_demux_001_src2_channel,                     --          .channel
			src2_startofpacket  => cmd_demux_001_src2_startofpacket,               --          .startofpacket
			src2_endofpacket    => cmd_demux_001_src2_endofpacket,                 --          .endofpacket
			src3_ready          => cmd_demux_001_src3_ready,                       --      src3.ready
			src3_valid          => cmd_demux_001_src3_valid,                       --          .valid
			src3_data           => cmd_demux_001_src3_data,                        --          .data
			src3_channel        => cmd_demux_001_src3_channel,                     --          .channel
			src3_startofpacket  => cmd_demux_001_src3_startofpacket,               --          .startofpacket
			src3_endofpacket    => cmd_demux_001_src3_endofpacket,                 --          .endofpacket
			src4_ready          => cmd_demux_001_src4_ready,                       --      src4.ready
			src4_valid          => cmd_demux_001_src4_valid,                       --          .valid
			src4_data           => cmd_demux_001_src4_data,                        --          .data
			src4_channel        => cmd_demux_001_src4_channel,                     --          .channel
			src4_startofpacket  => cmd_demux_001_src4_startofpacket,               --          .startofpacket
			src4_endofpacket    => cmd_demux_001_src4_endofpacket,                 --          .endofpacket
			src5_ready          => cmd_demux_001_src5_ready,                       --      src5.ready
			src5_valid          => cmd_demux_001_src5_valid,                       --          .valid
			src5_data           => cmd_demux_001_src5_data,                        --          .data
			src5_channel        => cmd_demux_001_src5_channel,                     --          .channel
			src5_startofpacket  => cmd_demux_001_src5_startofpacket,               --          .startofpacket
			src5_endofpacket    => cmd_demux_001_src5_endofpacket,                 --          .endofpacket
			src6_ready          => cmd_demux_001_src6_ready,                       --      src6.ready
			src6_valid          => cmd_demux_001_src6_valid,                       --          .valid
			src6_data           => cmd_demux_001_src6_data,                        --          .data
			src6_channel        => cmd_demux_001_src6_channel,                     --          .channel
			src6_startofpacket  => cmd_demux_001_src6_startofpacket,               --          .startofpacket
			src6_endofpacket    => cmd_demux_001_src6_endofpacket,                 --          .endofpacket
			src7_ready          => cmd_demux_001_src7_ready,                       --      src7.ready
			src7_valid          => cmd_demux_001_src7_valid,                       --          .valid
			src7_data           => cmd_demux_001_src7_data,                        --          .data
			src7_channel        => cmd_demux_001_src7_channel,                     --          .channel
			src7_startofpacket  => cmd_demux_001_src7_startofpacket,               --          .startofpacket
			src7_endofpacket    => cmd_demux_001_src7_endofpacket,                 --          .endofpacket
			src8_ready          => cmd_demux_001_src8_ready,                       --      src8.ready
			src8_valid          => cmd_demux_001_src8_valid,                       --          .valid
			src8_data           => cmd_demux_001_src8_data,                        --          .data
			src8_channel        => cmd_demux_001_src8_channel,                     --          .channel
			src8_startofpacket  => cmd_demux_001_src8_startofpacket,               --          .startofpacket
			src8_endofpacket    => cmd_demux_001_src8_endofpacket,                 --          .endofpacket
			src9_ready          => cmd_demux_001_src9_ready,                       --      src9.ready
			src9_valid          => cmd_demux_001_src9_valid,                       --          .valid
			src9_data           => cmd_demux_001_src9_data,                        --          .data
			src9_channel        => cmd_demux_001_src9_channel,                     --          .channel
			src9_startofpacket  => cmd_demux_001_src9_startofpacket,               --          .startofpacket
			src9_endofpacket    => cmd_demux_001_src9_endofpacket,                 --          .endofpacket
			src10_ready         => cmd_demux_001_src10_ready,                      --     src10.ready
			src10_valid         => cmd_demux_001_src10_valid,                      --          .valid
			src10_data          => cmd_demux_001_src10_data,                       --          .data
			src10_channel       => cmd_demux_001_src10_channel,                    --          .channel
			src10_startofpacket => cmd_demux_001_src10_startofpacket,              --          .startofpacket
			src10_endofpacket   => cmd_demux_001_src10_endofpacket,                --          .endofpacket
			src11_ready         => cmd_demux_001_src11_ready,                      --     src11.ready
			src11_valid         => cmd_demux_001_src11_valid,                      --          .valid
			src11_data          => cmd_demux_001_src11_data,                       --          .data
			src11_channel       => cmd_demux_001_src11_channel,                    --          .channel
			src11_startofpacket => cmd_demux_001_src11_startofpacket,              --          .startofpacket
			src11_endofpacket   => cmd_demux_001_src11_endofpacket,                --          .endofpacket
			src12_ready         => cmd_demux_001_src12_ready,                      --     src12.ready
			src12_valid         => cmd_demux_001_src12_valid,                      --          .valid
			src12_data          => cmd_demux_001_src12_data,                       --          .data
			src12_channel       => cmd_demux_001_src12_channel,                    --          .channel
			src12_startofpacket => cmd_demux_001_src12_startofpacket,              --          .startofpacket
			src12_endofpacket   => cmd_demux_001_src12_endofpacket,                --          .endofpacket
			src13_ready         => cmd_demux_001_src13_ready,                      --     src13.ready
			src13_valid         => cmd_demux_001_src13_valid,                      --          .valid
			src13_data          => cmd_demux_001_src13_data,                       --          .data
			src13_channel       => cmd_demux_001_src13_channel,                    --          .channel
			src13_startofpacket => cmd_demux_001_src13_startofpacket,              --          .startofpacket
			src13_endofpacket   => cmd_demux_001_src13_endofpacket,                --          .endofpacket
			src14_ready         => cmd_demux_001_src14_ready,                      --     src14.ready
			src14_valid         => cmd_demux_001_src14_valid,                      --          .valid
			src14_data          => cmd_demux_001_src14_data,                       --          .data
			src14_channel       => cmd_demux_001_src14_channel,                    --          .channel
			src14_startofpacket => cmd_demux_001_src14_startofpacket,              --          .startofpacket
			src14_endofpacket   => cmd_demux_001_src14_endofpacket                 --          .endofpacket
		);

	cmd_mux : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_src_ready,                              --       src.ready
			src_valid           => cmd_mux_src_valid,                              --          .valid
			src_data            => cmd_mux_src_data,                               --          .data
			src_channel         => cmd_mux_src_channel,                            --          .channel
			src_startofpacket   => cmd_mux_src_startofpacket,                      --          .startofpacket
			src_endofpacket     => cmd_mux_src_endofpacket,                        --          .endofpacket
			sink0_ready         => cmd_demux_src0_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src0_valid,                           --          .valid
			sink0_channel       => cmd_demux_src0_channel,                         --          .channel
			sink0_data          => cmd_demux_src0_data,                            --          .data
			sink0_startofpacket => cmd_demux_src0_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src0_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src0_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src0_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src0_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src0_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src0_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src0_endofpacket                  --          .endofpacket
		);

	cmd_mux_001 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_001_src_ready,                          --       src.ready
			src_valid           => cmd_mux_001_src_valid,                          --          .valid
			src_data            => cmd_mux_001_src_data,                           --          .data
			src_channel         => cmd_mux_001_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_001_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_001_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src1_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src1_valid,                           --          .valid
			sink0_channel       => cmd_demux_src1_channel,                         --          .channel
			sink0_data          => cmd_demux_src1_data,                            --          .data
			sink0_startofpacket => cmd_demux_src1_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src1_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src1_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src1_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src1_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src1_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src1_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src1_endofpacket                  --          .endofpacket
		);

	cmd_mux_002 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_002_src_ready,                          --       src.ready
			src_valid           => cmd_mux_002_src_valid,                          --          .valid
			src_data            => cmd_mux_002_src_data,                           --          .data
			src_channel         => cmd_mux_002_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_002_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_002_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src2_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src2_valid,                           --          .valid
			sink0_channel       => cmd_demux_src2_channel,                         --          .channel
			sink0_data          => cmd_demux_src2_data,                            --          .data
			sink0_startofpacket => cmd_demux_src2_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src2_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src2_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src2_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src2_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src2_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src2_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src2_endofpacket                  --          .endofpacket
		);

	cmd_mux_003 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_003_src_ready,                          --       src.ready
			src_valid           => cmd_mux_003_src_valid,                          --          .valid
			src_data            => cmd_mux_003_src_data,                           --          .data
			src_channel         => cmd_mux_003_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_003_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_003_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src3_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src3_valid,                           --          .valid
			sink0_channel       => cmd_demux_src3_channel,                         --          .channel
			sink0_data          => cmd_demux_src3_data,                            --          .data
			sink0_startofpacket => cmd_demux_src3_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src3_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src3_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src3_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src3_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src3_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src3_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src3_endofpacket                  --          .endofpacket
		);

	cmd_mux_004 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_004_src_ready,                          --       src.ready
			src_valid           => cmd_mux_004_src_valid,                          --          .valid
			src_data            => cmd_mux_004_src_data,                           --          .data
			src_channel         => cmd_mux_004_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_004_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_004_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src4_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src4_valid,                           --          .valid
			sink0_channel       => cmd_demux_src4_channel,                         --          .channel
			sink0_data          => cmd_demux_src4_data,                            --          .data
			sink0_startofpacket => cmd_demux_src4_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src4_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src4_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src4_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src4_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src4_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src4_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src4_endofpacket                  --          .endofpacket
		);

	cmd_mux_005 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => sdram_pll_c0_clk,                        --       clk.clk
			reset               => sdram_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_005_src_ready,                   --       src.ready
			src_valid           => cmd_mux_005_src_valid,                   --          .valid
			src_data            => cmd_mux_005_src_data,                    --          .data
			src_channel         => cmd_mux_005_src_channel,                 --          .channel
			src_startofpacket   => cmd_mux_005_src_startofpacket,           --          .startofpacket
			src_endofpacket     => cmd_mux_005_src_endofpacket,             --          .endofpacket
			sink0_ready         => crosser_out_ready,                       --     sink0.ready
			sink0_valid         => crosser_out_valid,                       --          .valid
			sink0_channel       => crosser_out_channel,                     --          .channel
			sink0_data          => crosser_out_data,                        --          .data
			sink0_startofpacket => crosser_out_startofpacket,               --          .startofpacket
			sink0_endofpacket   => crosser_out_endofpacket,                 --          .endofpacket
			sink1_ready         => crosser_001_out_ready,                   --     sink1.ready
			sink1_valid         => crosser_001_out_valid,                   --          .valid
			sink1_channel       => crosser_001_out_channel,                 --          .channel
			sink1_data          => crosser_001_out_data,                    --          .data
			sink1_startofpacket => crosser_001_out_startofpacket,           --          .startofpacket
			sink1_endofpacket   => crosser_001_out_endofpacket              --          .endofpacket
		);

	cmd_mux_006 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_006_src_ready,                          --       src.ready
			src_valid           => cmd_mux_006_src_valid,                          --          .valid
			src_data            => cmd_mux_006_src_data,                           --          .data
			src_channel         => cmd_mux_006_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_006_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_006_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src6_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src6_valid,                           --          .valid
			sink0_channel       => cmd_demux_src6_channel,                         --          .channel
			sink0_data          => cmd_demux_src6_data,                            --          .data
			sink0_startofpacket => cmd_demux_src6_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src6_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src6_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src6_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src6_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src6_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src6_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src6_endofpacket                  --          .endofpacket
		);

	cmd_mux_007 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_007_src_ready,                          --       src.ready
			src_valid           => cmd_mux_007_src_valid,                          --          .valid
			src_data            => cmd_mux_007_src_data,                           --          .data
			src_channel         => cmd_mux_007_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_007_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_007_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src7_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src7_valid,                           --          .valid
			sink0_channel       => cmd_demux_src7_channel,                         --          .channel
			sink0_data          => cmd_demux_src7_data,                            --          .data
			sink0_startofpacket => cmd_demux_src7_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src7_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src7_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src7_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src7_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src7_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src7_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src7_endofpacket                  --          .endofpacket
		);

	cmd_mux_008 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_008_src_ready,                          --       src.ready
			src_valid           => cmd_mux_008_src_valid,                          --          .valid
			src_data            => cmd_mux_008_src_data,                           --          .data
			src_channel         => cmd_mux_008_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_008_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_008_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src8_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src8_valid,                           --          .valid
			sink0_channel       => cmd_demux_src8_channel,                         --          .channel
			sink0_data          => cmd_demux_src8_data,                            --          .data
			sink0_startofpacket => cmd_demux_src8_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src8_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src8_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src8_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src8_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src8_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src8_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src8_endofpacket                  --          .endofpacket
		);

	cmd_mux_009 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_009_src_ready,                          --       src.ready
			src_valid           => cmd_mux_009_src_valid,                          --          .valid
			src_data            => cmd_mux_009_src_data,                           --          .data
			src_channel         => cmd_mux_009_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_009_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_009_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src9_ready,                           --     sink0.ready
			sink0_valid         => cmd_demux_src9_valid,                           --          .valid
			sink0_channel       => cmd_demux_src9_channel,                         --          .channel
			sink0_data          => cmd_demux_src9_data,                            --          .data
			sink0_startofpacket => cmd_demux_src9_startofpacket,                   --          .startofpacket
			sink0_endofpacket   => cmd_demux_src9_endofpacket,                     --          .endofpacket
			sink1_ready         => cmd_demux_001_src9_ready,                       --     sink1.ready
			sink1_valid         => cmd_demux_001_src9_valid,                       --          .valid
			sink1_channel       => cmd_demux_001_src9_channel,                     --          .channel
			sink1_data          => cmd_demux_001_src9_data,                        --          .data
			sink1_startofpacket => cmd_demux_001_src9_startofpacket,               --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src9_endofpacket                  --          .endofpacket
		);

	cmd_mux_010 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_010_src_ready,                          --       src.ready
			src_valid           => cmd_mux_010_src_valid,                          --          .valid
			src_data            => cmd_mux_010_src_data,                           --          .data
			src_channel         => cmd_mux_010_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_010_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_010_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src10_ready,                          --     sink0.ready
			sink0_valid         => cmd_demux_src10_valid,                          --          .valid
			sink0_channel       => cmd_demux_src10_channel,                        --          .channel
			sink0_data          => cmd_demux_src10_data,                           --          .data
			sink0_startofpacket => cmd_demux_src10_startofpacket,                  --          .startofpacket
			sink0_endofpacket   => cmd_demux_src10_endofpacket,                    --          .endofpacket
			sink1_ready         => cmd_demux_001_src10_ready,                      --     sink1.ready
			sink1_valid         => cmd_demux_001_src10_valid,                      --          .valid
			sink1_channel       => cmd_demux_001_src10_channel,                    --          .channel
			sink1_data          => cmd_demux_001_src10_data,                       --          .data
			sink1_startofpacket => cmd_demux_001_src10_startofpacket,              --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src10_endofpacket                 --          .endofpacket
		);

	cmd_mux_011 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_011_src_ready,                          --       src.ready
			src_valid           => cmd_mux_011_src_valid,                          --          .valid
			src_data            => cmd_mux_011_src_data,                           --          .data
			src_channel         => cmd_mux_011_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_011_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_011_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src11_ready,                          --     sink0.ready
			sink0_valid         => cmd_demux_src11_valid,                          --          .valid
			sink0_channel       => cmd_demux_src11_channel,                        --          .channel
			sink0_data          => cmd_demux_src11_data,                           --          .data
			sink0_startofpacket => cmd_demux_src11_startofpacket,                  --          .startofpacket
			sink0_endofpacket   => cmd_demux_src11_endofpacket,                    --          .endofpacket
			sink1_ready         => cmd_demux_001_src11_ready,                      --     sink1.ready
			sink1_valid         => cmd_demux_001_src11_valid,                      --          .valid
			sink1_channel       => cmd_demux_001_src11_channel,                    --          .channel
			sink1_data          => cmd_demux_001_src11_data,                       --          .data
			sink1_startofpacket => cmd_demux_001_src11_startofpacket,              --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src11_endofpacket                 --          .endofpacket
		);

	cmd_mux_012 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_012_src_ready,                          --       src.ready
			src_valid           => cmd_mux_012_src_valid,                          --          .valid
			src_data            => cmd_mux_012_src_data,                           --          .data
			src_channel         => cmd_mux_012_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_012_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_012_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src12_ready,                          --     sink0.ready
			sink0_valid         => cmd_demux_src12_valid,                          --          .valid
			sink0_channel       => cmd_demux_src12_channel,                        --          .channel
			sink0_data          => cmd_demux_src12_data,                           --          .data
			sink0_startofpacket => cmd_demux_src12_startofpacket,                  --          .startofpacket
			sink0_endofpacket   => cmd_demux_src12_endofpacket,                    --          .endofpacket
			sink1_ready         => cmd_demux_001_src12_ready,                      --     sink1.ready
			sink1_valid         => cmd_demux_001_src12_valid,                      --          .valid
			sink1_channel       => cmd_demux_001_src12_channel,                    --          .channel
			sink1_data          => cmd_demux_001_src12_data,                       --          .data
			sink1_startofpacket => cmd_demux_001_src12_startofpacket,              --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src12_endofpacket                 --          .endofpacket
		);

	cmd_mux_013 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_013_src_ready,                          --       src.ready
			src_valid           => cmd_mux_013_src_valid,                          --          .valid
			src_data            => cmd_mux_013_src_data,                           --          .data
			src_channel         => cmd_mux_013_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_013_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_013_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src13_ready,                          --     sink0.ready
			sink0_valid         => cmd_demux_src13_valid,                          --          .valid
			sink0_channel       => cmd_demux_src13_channel,                        --          .channel
			sink0_data          => cmd_demux_src13_data,                           --          .data
			sink0_startofpacket => cmd_demux_src13_startofpacket,                  --          .startofpacket
			sink0_endofpacket   => cmd_demux_src13_endofpacket,                    --          .endofpacket
			sink1_ready         => cmd_demux_001_src13_ready,                      --     sink1.ready
			sink1_valid         => cmd_demux_001_src13_valid,                      --          .valid
			sink1_channel       => cmd_demux_001_src13_channel,                    --          .channel
			sink1_data          => cmd_demux_001_src13_data,                       --          .data
			sink1_startofpacket => cmd_demux_001_src13_startofpacket,              --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src13_endofpacket                 --          .endofpacket
		);

	cmd_mux_014 : component lab62soc_mm_interconnect_0_cmd_mux
		port map (
			clk                 => clk_0_clk_clk,                                  --       clk.clk
			reset               => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready           => cmd_mux_014_src_ready,                          --       src.ready
			src_valid           => cmd_mux_014_src_valid,                          --          .valid
			src_data            => cmd_mux_014_src_data,                           --          .data
			src_channel         => cmd_mux_014_src_channel,                        --          .channel
			src_startofpacket   => cmd_mux_014_src_startofpacket,                  --          .startofpacket
			src_endofpacket     => cmd_mux_014_src_endofpacket,                    --          .endofpacket
			sink0_ready         => cmd_demux_src14_ready,                          --     sink0.ready
			sink0_valid         => cmd_demux_src14_valid,                          --          .valid
			sink0_channel       => cmd_demux_src14_channel,                        --          .channel
			sink0_data          => cmd_demux_src14_data,                           --          .data
			sink0_startofpacket => cmd_demux_src14_startofpacket,                  --          .startofpacket
			sink0_endofpacket   => cmd_demux_src14_endofpacket,                    --          .endofpacket
			sink1_ready         => cmd_demux_001_src14_ready,                      --     sink1.ready
			sink1_valid         => cmd_demux_001_src14_valid,                      --          .valid
			sink1_channel       => cmd_demux_001_src14_channel,                    --          .channel
			sink1_data          => cmd_demux_001_src14_data,                       --          .data
			sink1_startofpacket => cmd_demux_001_src14_startofpacket,              --          .startofpacket
			sink1_endofpacket   => cmd_demux_001_src14_endofpacket                 --          .endofpacket
		);

	rsp_demux : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_002_src_ready,                           --      sink.ready
			sink_channel       => router_002_src_channel,                         --          .channel
			sink_data          => router_002_src_data,                            --          .data
			sink_startofpacket => router_002_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_002_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_002_src_valid,                           --          .valid
			src0_ready         => rsp_demux_src0_ready,                           --      src0.ready
			src0_valid         => rsp_demux_src0_valid,                           --          .valid
			src0_data          => rsp_demux_src0_data,                            --          .data
			src0_channel       => rsp_demux_src0_channel,                         --          .channel
			src0_startofpacket => rsp_demux_src0_startofpacket,                   --          .startofpacket
			src0_endofpacket   => rsp_demux_src0_endofpacket,                     --          .endofpacket
			src1_ready         => rsp_demux_src1_ready,                           --      src1.ready
			src1_valid         => rsp_demux_src1_valid,                           --          .valid
			src1_data          => rsp_demux_src1_data,                            --          .data
			src1_channel       => rsp_demux_src1_channel,                         --          .channel
			src1_startofpacket => rsp_demux_src1_startofpacket,                   --          .startofpacket
			src1_endofpacket   => rsp_demux_src1_endofpacket                      --          .endofpacket
		);

	rsp_demux_001 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_003_src_ready,                           --      sink.ready
			sink_channel       => router_003_src_channel,                         --          .channel
			sink_data          => router_003_src_data,                            --          .data
			sink_startofpacket => router_003_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_003_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_003_src_valid,                           --          .valid
			src0_ready         => rsp_demux_001_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_001_src0_valid,                       --          .valid
			src0_data          => rsp_demux_001_src0_data,                        --          .data
			src0_channel       => rsp_demux_001_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_001_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_001_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_001_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_001_src1_valid,                       --          .valid
			src1_data          => rsp_demux_001_src1_data,                        --          .data
			src1_channel       => rsp_demux_001_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_001_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_001_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_002 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_004_src_ready,                           --      sink.ready
			sink_channel       => router_004_src_channel,                         --          .channel
			sink_data          => router_004_src_data,                            --          .data
			sink_startofpacket => router_004_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_004_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_004_src_valid,                           --          .valid
			src0_ready         => rsp_demux_002_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_002_src0_valid,                       --          .valid
			src0_data          => rsp_demux_002_src0_data,                        --          .data
			src0_channel       => rsp_demux_002_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_002_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_002_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_002_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_002_src1_valid,                       --          .valid
			src1_data          => rsp_demux_002_src1_data,                        --          .data
			src1_channel       => rsp_demux_002_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_002_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_002_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_003 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_005_src_ready,                           --      sink.ready
			sink_channel       => router_005_src_channel,                         --          .channel
			sink_data          => router_005_src_data,                            --          .data
			sink_startofpacket => router_005_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_005_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_005_src_valid,                           --          .valid
			src0_ready         => rsp_demux_003_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_003_src0_valid,                       --          .valid
			src0_data          => rsp_demux_003_src0_data,                        --          .data
			src0_channel       => rsp_demux_003_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_003_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_003_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_003_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_003_src1_valid,                       --          .valid
			src1_data          => rsp_demux_003_src1_data,                        --          .data
			src1_channel       => rsp_demux_003_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_003_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_003_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_004 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_006_src_ready,                           --      sink.ready
			sink_channel       => router_006_src_channel,                         --          .channel
			sink_data          => router_006_src_data,                            --          .data
			sink_startofpacket => router_006_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_006_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_006_src_valid,                           --          .valid
			src0_ready         => rsp_demux_004_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_004_src0_valid,                       --          .valid
			src0_data          => rsp_demux_004_src0_data,                        --          .data
			src0_channel       => rsp_demux_004_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_004_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_004_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_004_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_004_src1_valid,                       --          .valid
			src1_data          => rsp_demux_004_src1_data,                        --          .data
			src1_channel       => rsp_demux_004_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_004_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_004_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_005 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => sdram_pll_c0_clk,                             --       clk.clk
			reset              => sdram_reset_reset_bridge_in_reset_reset,      -- clk_reset.reset
			sink_ready         => sdram_s1_rsp_width_adapter_src_ready,         --      sink.ready
			sink_channel       => sdram_s1_rsp_width_adapter_src_channel,       --          .channel
			sink_data          => sdram_s1_rsp_width_adapter_src_data,          --          .data
			sink_startofpacket => sdram_s1_rsp_width_adapter_src_startofpacket, --          .startofpacket
			sink_endofpacket   => sdram_s1_rsp_width_adapter_src_endofpacket,   --          .endofpacket
			sink_valid(0)      => sdram_s1_rsp_width_adapter_src_valid,         --          .valid
			src0_ready         => rsp_demux_005_src0_ready,                     --      src0.ready
			src0_valid         => rsp_demux_005_src0_valid,                     --          .valid
			src0_data          => rsp_demux_005_src0_data,                      --          .data
			src0_channel       => rsp_demux_005_src0_channel,                   --          .channel
			src0_startofpacket => rsp_demux_005_src0_startofpacket,             --          .startofpacket
			src0_endofpacket   => rsp_demux_005_src0_endofpacket,               --          .endofpacket
			src1_ready         => rsp_demux_005_src1_ready,                     --      src1.ready
			src1_valid         => rsp_demux_005_src1_valid,                     --          .valid
			src1_data          => rsp_demux_005_src1_data,                      --          .data
			src1_channel       => rsp_demux_005_src1_channel,                   --          .channel
			src1_startofpacket => rsp_demux_005_src1_startofpacket,             --          .startofpacket
			src1_endofpacket   => rsp_demux_005_src1_endofpacket                --          .endofpacket
		);

	rsp_demux_006 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_008_src_ready,                           --      sink.ready
			sink_channel       => router_008_src_channel,                         --          .channel
			sink_data          => router_008_src_data,                            --          .data
			sink_startofpacket => router_008_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_008_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_008_src_valid,                           --          .valid
			src0_ready         => rsp_demux_006_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_006_src0_valid,                       --          .valid
			src0_data          => rsp_demux_006_src0_data,                        --          .data
			src0_channel       => rsp_demux_006_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_006_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_006_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_006_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_006_src1_valid,                       --          .valid
			src1_data          => rsp_demux_006_src1_data,                        --          .data
			src1_channel       => rsp_demux_006_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_006_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_006_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_007 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_009_src_ready,                           --      sink.ready
			sink_channel       => router_009_src_channel,                         --          .channel
			sink_data          => router_009_src_data,                            --          .data
			sink_startofpacket => router_009_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_009_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_009_src_valid,                           --          .valid
			src0_ready         => rsp_demux_007_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_007_src0_valid,                       --          .valid
			src0_data          => rsp_demux_007_src0_data,                        --          .data
			src0_channel       => rsp_demux_007_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_007_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_007_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_007_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_007_src1_valid,                       --          .valid
			src1_data          => rsp_demux_007_src1_data,                        --          .data
			src1_channel       => rsp_demux_007_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_007_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_007_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_008 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_010_src_ready,                           --      sink.ready
			sink_channel       => router_010_src_channel,                         --          .channel
			sink_data          => router_010_src_data,                            --          .data
			sink_startofpacket => router_010_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_010_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_010_src_valid,                           --          .valid
			src0_ready         => rsp_demux_008_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_008_src0_valid,                       --          .valid
			src0_data          => rsp_demux_008_src0_data,                        --          .data
			src0_channel       => rsp_demux_008_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_008_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_008_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_008_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_008_src1_valid,                       --          .valid
			src1_data          => rsp_demux_008_src1_data,                        --          .data
			src1_channel       => rsp_demux_008_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_008_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_008_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_009 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_011_src_ready,                           --      sink.ready
			sink_channel       => router_011_src_channel,                         --          .channel
			sink_data          => router_011_src_data,                            --          .data
			sink_startofpacket => router_011_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_011_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_011_src_valid,                           --          .valid
			src0_ready         => rsp_demux_009_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_009_src0_valid,                       --          .valid
			src0_data          => rsp_demux_009_src0_data,                        --          .data
			src0_channel       => rsp_demux_009_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_009_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_009_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_009_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_009_src1_valid,                       --          .valid
			src1_data          => rsp_demux_009_src1_data,                        --          .data
			src1_channel       => rsp_demux_009_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_009_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_009_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_010 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_012_src_ready,                           --      sink.ready
			sink_channel       => router_012_src_channel,                         --          .channel
			sink_data          => router_012_src_data,                            --          .data
			sink_startofpacket => router_012_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_012_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_012_src_valid,                           --          .valid
			src0_ready         => rsp_demux_010_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_010_src0_valid,                       --          .valid
			src0_data          => rsp_demux_010_src0_data,                        --          .data
			src0_channel       => rsp_demux_010_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_010_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_010_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_010_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_010_src1_valid,                       --          .valid
			src1_data          => rsp_demux_010_src1_data,                        --          .data
			src1_channel       => rsp_demux_010_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_010_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_010_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_011 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_013_src_ready,                           --      sink.ready
			sink_channel       => router_013_src_channel,                         --          .channel
			sink_data          => router_013_src_data,                            --          .data
			sink_startofpacket => router_013_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_013_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_013_src_valid,                           --          .valid
			src0_ready         => rsp_demux_011_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_011_src0_valid,                       --          .valid
			src0_data          => rsp_demux_011_src0_data,                        --          .data
			src0_channel       => rsp_demux_011_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_011_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_011_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_011_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_011_src1_valid,                       --          .valid
			src1_data          => rsp_demux_011_src1_data,                        --          .data
			src1_channel       => rsp_demux_011_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_011_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_011_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_012 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_014_src_ready,                           --      sink.ready
			sink_channel       => router_014_src_channel,                         --          .channel
			sink_data          => router_014_src_data,                            --          .data
			sink_startofpacket => router_014_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_014_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_014_src_valid,                           --          .valid
			src0_ready         => rsp_demux_012_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_012_src0_valid,                       --          .valid
			src0_data          => rsp_demux_012_src0_data,                        --          .data
			src0_channel       => rsp_demux_012_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_012_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_012_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_012_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_012_src1_valid,                       --          .valid
			src1_data          => rsp_demux_012_src1_data,                        --          .data
			src1_channel       => rsp_demux_012_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_012_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_012_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_013 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_015_src_ready,                           --      sink.ready
			sink_channel       => router_015_src_channel,                         --          .channel
			sink_data          => router_015_src_data,                            --          .data
			sink_startofpacket => router_015_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_015_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_015_src_valid,                           --          .valid
			src0_ready         => rsp_demux_013_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_013_src0_valid,                       --          .valid
			src0_data          => rsp_demux_013_src0_data,                        --          .data
			src0_channel       => rsp_demux_013_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_013_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_013_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_013_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_013_src1_valid,                       --          .valid
			src1_data          => rsp_demux_013_src1_data,                        --          .data
			src1_channel       => rsp_demux_013_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_013_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_013_src1_endofpacket                  --          .endofpacket
		);

	rsp_demux_014 : component lab62soc_mm_interconnect_0_rsp_demux
		port map (
			clk                => clk_0_clk_clk,                                  --       clk.clk
			reset              => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			sink_ready         => router_016_src_ready,                           --      sink.ready
			sink_channel       => router_016_src_channel,                         --          .channel
			sink_data          => router_016_src_data,                            --          .data
			sink_startofpacket => router_016_src_startofpacket,                   --          .startofpacket
			sink_endofpacket   => router_016_src_endofpacket,                     --          .endofpacket
			sink_valid(0)      => router_016_src_valid,                           --          .valid
			src0_ready         => rsp_demux_014_src0_ready,                       --      src0.ready
			src0_valid         => rsp_demux_014_src0_valid,                       --          .valid
			src0_data          => rsp_demux_014_src0_data,                        --          .data
			src0_channel       => rsp_demux_014_src0_channel,                     --          .channel
			src0_startofpacket => rsp_demux_014_src0_startofpacket,               --          .startofpacket
			src0_endofpacket   => rsp_demux_014_src0_endofpacket,                 --          .endofpacket
			src1_ready         => rsp_demux_014_src1_ready,                       --      src1.ready
			src1_valid         => rsp_demux_014_src1_valid,                       --          .valid
			src1_data          => rsp_demux_014_src1_data,                        --          .data
			src1_channel       => rsp_demux_014_src1_channel,                     --          .channel
			src1_startofpacket => rsp_demux_014_src1_startofpacket,               --          .startofpacket
			src1_endofpacket   => rsp_demux_014_src1_endofpacket                  --          .endofpacket
		);

	rsp_mux : component lab62soc_mm_interconnect_0_rsp_mux
		port map (
			clk                  => clk_0_clk_clk,                                  --       clk.clk
			reset                => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready            => rsp_mux_src_ready,                              --       src.ready
			src_valid            => rsp_mux_src_valid,                              --          .valid
			src_data             => rsp_mux_src_data,                               --          .data
			src_channel          => rsp_mux_src_channel,                            --          .channel
			src_startofpacket    => rsp_mux_src_startofpacket,                      --          .startofpacket
			src_endofpacket      => rsp_mux_src_endofpacket,                        --          .endofpacket
			sink0_ready          => rsp_demux_src0_ready,                           --     sink0.ready
			sink0_valid          => rsp_demux_src0_valid,                           --          .valid
			sink0_channel        => rsp_demux_src0_channel,                         --          .channel
			sink0_data           => rsp_demux_src0_data,                            --          .data
			sink0_startofpacket  => rsp_demux_src0_startofpacket,                   --          .startofpacket
			sink0_endofpacket    => rsp_demux_src0_endofpacket,                     --          .endofpacket
			sink1_ready          => rsp_demux_001_src0_ready,                       --     sink1.ready
			sink1_valid          => rsp_demux_001_src0_valid,                       --          .valid
			sink1_channel        => rsp_demux_001_src0_channel,                     --          .channel
			sink1_data           => rsp_demux_001_src0_data,                        --          .data
			sink1_startofpacket  => rsp_demux_001_src0_startofpacket,               --          .startofpacket
			sink1_endofpacket    => rsp_demux_001_src0_endofpacket,                 --          .endofpacket
			sink2_ready          => rsp_demux_002_src0_ready,                       --     sink2.ready
			sink2_valid          => rsp_demux_002_src0_valid,                       --          .valid
			sink2_channel        => rsp_demux_002_src0_channel,                     --          .channel
			sink2_data           => rsp_demux_002_src0_data,                        --          .data
			sink2_startofpacket  => rsp_demux_002_src0_startofpacket,               --          .startofpacket
			sink2_endofpacket    => rsp_demux_002_src0_endofpacket,                 --          .endofpacket
			sink3_ready          => rsp_demux_003_src0_ready,                       --     sink3.ready
			sink3_valid          => rsp_demux_003_src0_valid,                       --          .valid
			sink3_channel        => rsp_demux_003_src0_channel,                     --          .channel
			sink3_data           => rsp_demux_003_src0_data,                        --          .data
			sink3_startofpacket  => rsp_demux_003_src0_startofpacket,               --          .startofpacket
			sink3_endofpacket    => rsp_demux_003_src0_endofpacket,                 --          .endofpacket
			sink4_ready          => rsp_demux_004_src0_ready,                       --     sink4.ready
			sink4_valid          => rsp_demux_004_src0_valid,                       --          .valid
			sink4_channel        => rsp_demux_004_src0_channel,                     --          .channel
			sink4_data           => rsp_demux_004_src0_data,                        --          .data
			sink4_startofpacket  => rsp_demux_004_src0_startofpacket,               --          .startofpacket
			sink4_endofpacket    => rsp_demux_004_src0_endofpacket,                 --          .endofpacket
			sink5_ready          => crosser_002_out_ready,                          --     sink5.ready
			sink5_valid          => crosser_002_out_valid,                          --          .valid
			sink5_channel        => crosser_002_out_channel,                        --          .channel
			sink5_data           => crosser_002_out_data,                           --          .data
			sink5_startofpacket  => crosser_002_out_startofpacket,                  --          .startofpacket
			sink5_endofpacket    => crosser_002_out_endofpacket,                    --          .endofpacket
			sink6_ready          => rsp_demux_006_src0_ready,                       --     sink6.ready
			sink6_valid          => rsp_demux_006_src0_valid,                       --          .valid
			sink6_channel        => rsp_demux_006_src0_channel,                     --          .channel
			sink6_data           => rsp_demux_006_src0_data,                        --          .data
			sink6_startofpacket  => rsp_demux_006_src0_startofpacket,               --          .startofpacket
			sink6_endofpacket    => rsp_demux_006_src0_endofpacket,                 --          .endofpacket
			sink7_ready          => rsp_demux_007_src0_ready,                       --     sink7.ready
			sink7_valid          => rsp_demux_007_src0_valid,                       --          .valid
			sink7_channel        => rsp_demux_007_src0_channel,                     --          .channel
			sink7_data           => rsp_demux_007_src0_data,                        --          .data
			sink7_startofpacket  => rsp_demux_007_src0_startofpacket,               --          .startofpacket
			sink7_endofpacket    => rsp_demux_007_src0_endofpacket,                 --          .endofpacket
			sink8_ready          => rsp_demux_008_src0_ready,                       --     sink8.ready
			sink8_valid          => rsp_demux_008_src0_valid,                       --          .valid
			sink8_channel        => rsp_demux_008_src0_channel,                     --          .channel
			sink8_data           => rsp_demux_008_src0_data,                        --          .data
			sink8_startofpacket  => rsp_demux_008_src0_startofpacket,               --          .startofpacket
			sink8_endofpacket    => rsp_demux_008_src0_endofpacket,                 --          .endofpacket
			sink9_ready          => rsp_demux_009_src0_ready,                       --     sink9.ready
			sink9_valid          => rsp_demux_009_src0_valid,                       --          .valid
			sink9_channel        => rsp_demux_009_src0_channel,                     --          .channel
			sink9_data           => rsp_demux_009_src0_data,                        --          .data
			sink9_startofpacket  => rsp_demux_009_src0_startofpacket,               --          .startofpacket
			sink9_endofpacket    => rsp_demux_009_src0_endofpacket,                 --          .endofpacket
			sink10_ready         => rsp_demux_010_src0_ready,                       --    sink10.ready
			sink10_valid         => rsp_demux_010_src0_valid,                       --          .valid
			sink10_channel       => rsp_demux_010_src0_channel,                     --          .channel
			sink10_data          => rsp_demux_010_src0_data,                        --          .data
			sink10_startofpacket => rsp_demux_010_src0_startofpacket,               --          .startofpacket
			sink10_endofpacket   => rsp_demux_010_src0_endofpacket,                 --          .endofpacket
			sink11_ready         => rsp_demux_011_src0_ready,                       --    sink11.ready
			sink11_valid         => rsp_demux_011_src0_valid,                       --          .valid
			sink11_channel       => rsp_demux_011_src0_channel,                     --          .channel
			sink11_data          => rsp_demux_011_src0_data,                        --          .data
			sink11_startofpacket => rsp_demux_011_src0_startofpacket,               --          .startofpacket
			sink11_endofpacket   => rsp_demux_011_src0_endofpacket,                 --          .endofpacket
			sink12_ready         => rsp_demux_012_src0_ready,                       --    sink12.ready
			sink12_valid         => rsp_demux_012_src0_valid,                       --          .valid
			sink12_channel       => rsp_demux_012_src0_channel,                     --          .channel
			sink12_data          => rsp_demux_012_src0_data,                        --          .data
			sink12_startofpacket => rsp_demux_012_src0_startofpacket,               --          .startofpacket
			sink12_endofpacket   => rsp_demux_012_src0_endofpacket,                 --          .endofpacket
			sink13_ready         => rsp_demux_013_src0_ready,                       --    sink13.ready
			sink13_valid         => rsp_demux_013_src0_valid,                       --          .valid
			sink13_channel       => rsp_demux_013_src0_channel,                     --          .channel
			sink13_data          => rsp_demux_013_src0_data,                        --          .data
			sink13_startofpacket => rsp_demux_013_src0_startofpacket,               --          .startofpacket
			sink13_endofpacket   => rsp_demux_013_src0_endofpacket,                 --          .endofpacket
			sink14_ready         => rsp_demux_014_src0_ready,                       --    sink14.ready
			sink14_valid         => rsp_demux_014_src0_valid,                       --          .valid
			sink14_channel       => rsp_demux_014_src0_channel,                     --          .channel
			sink14_data          => rsp_demux_014_src0_data,                        --          .data
			sink14_startofpacket => rsp_demux_014_src0_startofpacket,               --          .startofpacket
			sink14_endofpacket   => rsp_demux_014_src0_endofpacket                  --          .endofpacket
		);

	rsp_mux_001 : component lab62soc_mm_interconnect_0_rsp_mux
		port map (
			clk                  => clk_0_clk_clk,                                  --       clk.clk
			reset                => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- clk_reset.reset
			src_ready            => rsp_mux_001_src_ready,                          --       src.ready
			src_valid            => rsp_mux_001_src_valid,                          --          .valid
			src_data             => rsp_mux_001_src_data,                           --          .data
			src_channel          => rsp_mux_001_src_channel,                        --          .channel
			src_startofpacket    => rsp_mux_001_src_startofpacket,                  --          .startofpacket
			src_endofpacket      => rsp_mux_001_src_endofpacket,                    --          .endofpacket
			sink0_ready          => rsp_demux_src1_ready,                           --     sink0.ready
			sink0_valid          => rsp_demux_src1_valid,                           --          .valid
			sink0_channel        => rsp_demux_src1_channel,                         --          .channel
			sink0_data           => rsp_demux_src1_data,                            --          .data
			sink0_startofpacket  => rsp_demux_src1_startofpacket,                   --          .startofpacket
			sink0_endofpacket    => rsp_demux_src1_endofpacket,                     --          .endofpacket
			sink1_ready          => rsp_demux_001_src1_ready,                       --     sink1.ready
			sink1_valid          => rsp_demux_001_src1_valid,                       --          .valid
			sink1_channel        => rsp_demux_001_src1_channel,                     --          .channel
			sink1_data           => rsp_demux_001_src1_data,                        --          .data
			sink1_startofpacket  => rsp_demux_001_src1_startofpacket,               --          .startofpacket
			sink1_endofpacket    => rsp_demux_001_src1_endofpacket,                 --          .endofpacket
			sink2_ready          => rsp_demux_002_src1_ready,                       --     sink2.ready
			sink2_valid          => rsp_demux_002_src1_valid,                       --          .valid
			sink2_channel        => rsp_demux_002_src1_channel,                     --          .channel
			sink2_data           => rsp_demux_002_src1_data,                        --          .data
			sink2_startofpacket  => rsp_demux_002_src1_startofpacket,               --          .startofpacket
			sink2_endofpacket    => rsp_demux_002_src1_endofpacket,                 --          .endofpacket
			sink3_ready          => rsp_demux_003_src1_ready,                       --     sink3.ready
			sink3_valid          => rsp_demux_003_src1_valid,                       --          .valid
			sink3_channel        => rsp_demux_003_src1_channel,                     --          .channel
			sink3_data           => rsp_demux_003_src1_data,                        --          .data
			sink3_startofpacket  => rsp_demux_003_src1_startofpacket,               --          .startofpacket
			sink3_endofpacket    => rsp_demux_003_src1_endofpacket,                 --          .endofpacket
			sink4_ready          => rsp_demux_004_src1_ready,                       --     sink4.ready
			sink4_valid          => rsp_demux_004_src1_valid,                       --          .valid
			sink4_channel        => rsp_demux_004_src1_channel,                     --          .channel
			sink4_data           => rsp_demux_004_src1_data,                        --          .data
			sink4_startofpacket  => rsp_demux_004_src1_startofpacket,               --          .startofpacket
			sink4_endofpacket    => rsp_demux_004_src1_endofpacket,                 --          .endofpacket
			sink5_ready          => crosser_003_out_ready,                          --     sink5.ready
			sink5_valid          => crosser_003_out_valid,                          --          .valid
			sink5_channel        => crosser_003_out_channel,                        --          .channel
			sink5_data           => crosser_003_out_data,                           --          .data
			sink5_startofpacket  => crosser_003_out_startofpacket,                  --          .startofpacket
			sink5_endofpacket    => crosser_003_out_endofpacket,                    --          .endofpacket
			sink6_ready          => rsp_demux_006_src1_ready,                       --     sink6.ready
			sink6_valid          => rsp_demux_006_src1_valid,                       --          .valid
			sink6_channel        => rsp_demux_006_src1_channel,                     --          .channel
			sink6_data           => rsp_demux_006_src1_data,                        --          .data
			sink6_startofpacket  => rsp_demux_006_src1_startofpacket,               --          .startofpacket
			sink6_endofpacket    => rsp_demux_006_src1_endofpacket,                 --          .endofpacket
			sink7_ready          => rsp_demux_007_src1_ready,                       --     sink7.ready
			sink7_valid          => rsp_demux_007_src1_valid,                       --          .valid
			sink7_channel        => rsp_demux_007_src1_channel,                     --          .channel
			sink7_data           => rsp_demux_007_src1_data,                        --          .data
			sink7_startofpacket  => rsp_demux_007_src1_startofpacket,               --          .startofpacket
			sink7_endofpacket    => rsp_demux_007_src1_endofpacket,                 --          .endofpacket
			sink8_ready          => rsp_demux_008_src1_ready,                       --     sink8.ready
			sink8_valid          => rsp_demux_008_src1_valid,                       --          .valid
			sink8_channel        => rsp_demux_008_src1_channel,                     --          .channel
			sink8_data           => rsp_demux_008_src1_data,                        --          .data
			sink8_startofpacket  => rsp_demux_008_src1_startofpacket,               --          .startofpacket
			sink8_endofpacket    => rsp_demux_008_src1_endofpacket,                 --          .endofpacket
			sink9_ready          => rsp_demux_009_src1_ready,                       --     sink9.ready
			sink9_valid          => rsp_demux_009_src1_valid,                       --          .valid
			sink9_channel        => rsp_demux_009_src1_channel,                     --          .channel
			sink9_data           => rsp_demux_009_src1_data,                        --          .data
			sink9_startofpacket  => rsp_demux_009_src1_startofpacket,               --          .startofpacket
			sink9_endofpacket    => rsp_demux_009_src1_endofpacket,                 --          .endofpacket
			sink10_ready         => rsp_demux_010_src1_ready,                       --    sink10.ready
			sink10_valid         => rsp_demux_010_src1_valid,                       --          .valid
			sink10_channel       => rsp_demux_010_src1_channel,                     --          .channel
			sink10_data          => rsp_demux_010_src1_data,                        --          .data
			sink10_startofpacket => rsp_demux_010_src1_startofpacket,               --          .startofpacket
			sink10_endofpacket   => rsp_demux_010_src1_endofpacket,                 --          .endofpacket
			sink11_ready         => rsp_demux_011_src1_ready,                       --    sink11.ready
			sink11_valid         => rsp_demux_011_src1_valid,                       --          .valid
			sink11_channel       => rsp_demux_011_src1_channel,                     --          .channel
			sink11_data          => rsp_demux_011_src1_data,                        --          .data
			sink11_startofpacket => rsp_demux_011_src1_startofpacket,               --          .startofpacket
			sink11_endofpacket   => rsp_demux_011_src1_endofpacket,                 --          .endofpacket
			sink12_ready         => rsp_demux_012_src1_ready,                       --    sink12.ready
			sink12_valid         => rsp_demux_012_src1_valid,                       --          .valid
			sink12_channel       => rsp_demux_012_src1_channel,                     --          .channel
			sink12_data          => rsp_demux_012_src1_data,                        --          .data
			sink12_startofpacket => rsp_demux_012_src1_startofpacket,               --          .startofpacket
			sink12_endofpacket   => rsp_demux_012_src1_endofpacket,                 --          .endofpacket
			sink13_ready         => rsp_demux_013_src1_ready,                       --    sink13.ready
			sink13_valid         => rsp_demux_013_src1_valid,                       --          .valid
			sink13_channel       => rsp_demux_013_src1_channel,                     --          .channel
			sink13_data          => rsp_demux_013_src1_data,                        --          .data
			sink13_startofpacket => rsp_demux_013_src1_startofpacket,               --          .startofpacket
			sink13_endofpacket   => rsp_demux_013_src1_endofpacket,                 --          .endofpacket
			sink14_ready         => rsp_demux_014_src1_ready,                       --    sink14.ready
			sink14_valid         => rsp_demux_014_src1_valid,                       --          .valid
			sink14_channel       => rsp_demux_014_src1_channel,                     --          .channel
			sink14_data          => rsp_demux_014_src1_data,                        --          .data
			sink14_startofpacket => rsp_demux_014_src1_startofpacket,               --          .startofpacket
			sink14_endofpacket   => rsp_demux_014_src1_endofpacket                  --          .endofpacket
		);

	sdram_s1_rsp_width_adapter : component lab62soc_mm_interconnect_0_sdram_s1_rsp_width_adapter
		generic map (
			IN_PKT_ADDR_H                 => 45,
			IN_PKT_ADDR_L                 => 18,
			IN_PKT_DATA_H                 => 15,
			IN_PKT_DATA_L                 => 0,
			IN_PKT_BYTEEN_H               => 17,
			IN_PKT_BYTEEN_L               => 16,
			IN_PKT_BYTE_CNT_H             => 54,
			IN_PKT_BYTE_CNT_L             => 52,
			IN_PKT_TRANS_COMPRESSED_READ  => 46,
			IN_PKT_TRANS_WRITE            => 48,
			IN_PKT_BURSTWRAP_H            => 57,
			IN_PKT_BURSTWRAP_L            => 55,
			IN_PKT_BURST_SIZE_H           => 60,
			IN_PKT_BURST_SIZE_L           => 58,
			IN_PKT_RESPONSE_STATUS_H      => 84,
			IN_PKT_RESPONSE_STATUS_L      => 83,
			IN_PKT_TRANS_EXCLUSIVE        => 51,
			IN_PKT_BURST_TYPE_H           => 62,
			IN_PKT_BURST_TYPE_L           => 61,
			IN_PKT_ORI_BURST_SIZE_L       => 85,
			IN_PKT_ORI_BURST_SIZE_H       => 87,
			IN_ST_DATA_W                  => 88,
			OUT_PKT_ADDR_H                => 63,
			OUT_PKT_ADDR_L                => 36,
			OUT_PKT_DATA_H                => 31,
			OUT_PKT_DATA_L                => 0,
			OUT_PKT_BYTEEN_H              => 35,
			OUT_PKT_BYTEEN_L              => 32,
			OUT_PKT_BYTE_CNT_H            => 72,
			OUT_PKT_BYTE_CNT_L            => 70,
			OUT_PKT_TRANS_COMPRESSED_READ => 64,
			OUT_PKT_BURST_SIZE_H          => 78,
			OUT_PKT_BURST_SIZE_L          => 76,
			OUT_PKT_RESPONSE_STATUS_H     => 102,
			OUT_PKT_RESPONSE_STATUS_L     => 101,
			OUT_PKT_TRANS_EXCLUSIVE       => 69,
			OUT_PKT_BURST_TYPE_H          => 80,
			OUT_PKT_BURST_TYPE_L          => 79,
			OUT_PKT_ORI_BURST_SIZE_L      => 103,
			OUT_PKT_ORI_BURST_SIZE_H      => 105,
			OUT_ST_DATA_W                 => 106,
			ST_CHANNEL_W                  => 15,
			OPTIMIZE_FOR_RSP              => 1,
			RESPONSE_PATH                 => 1,
			CONSTANT_BURST_SIZE           => 1,
			PACKING                       => 1,
			ENABLE_ADDRESS_ALIGNMENT      => 0
		)
		port map (
			clk                  => sdram_pll_c0_clk,                             --       clk.clk
			reset                => sdram_reset_reset_bridge_in_reset_reset,      -- clk_reset.reset
			in_valid             => router_007_src_valid,                         --      sink.valid
			in_channel           => router_007_src_channel,                       --          .channel
			in_startofpacket     => router_007_src_startofpacket,                 --          .startofpacket
			in_endofpacket       => router_007_src_endofpacket,                   --          .endofpacket
			in_ready             => router_007_src_ready,                         --          .ready
			in_data              => router_007_src_data,                          --          .data
			out_endofpacket      => sdram_s1_rsp_width_adapter_src_endofpacket,   --       src.endofpacket
			out_data             => sdram_s1_rsp_width_adapter_src_data,          --          .data
			out_channel          => sdram_s1_rsp_width_adapter_src_channel,       --          .channel
			out_valid            => sdram_s1_rsp_width_adapter_src_valid,         --          .valid
			out_ready            => sdram_s1_rsp_width_adapter_src_ready,         --          .ready
			out_startofpacket    => sdram_s1_rsp_width_adapter_src_startofpacket, --          .startofpacket
			in_command_size_data => "000"                                         -- (terminated)
		);

	sdram_s1_cmd_width_adapter : component lab62soc_mm_interconnect_0_sdram_s1_cmd_width_adapter
		generic map (
			IN_PKT_ADDR_H                 => 63,
			IN_PKT_ADDR_L                 => 36,
			IN_PKT_DATA_H                 => 31,
			IN_PKT_DATA_L                 => 0,
			IN_PKT_BYTEEN_H               => 35,
			IN_PKT_BYTEEN_L               => 32,
			IN_PKT_BYTE_CNT_H             => 72,
			IN_PKT_BYTE_CNT_L             => 70,
			IN_PKT_TRANS_COMPRESSED_READ  => 64,
			IN_PKT_TRANS_WRITE            => 66,
			IN_PKT_BURSTWRAP_H            => 75,
			IN_PKT_BURSTWRAP_L            => 73,
			IN_PKT_BURST_SIZE_H           => 78,
			IN_PKT_BURST_SIZE_L           => 76,
			IN_PKT_RESPONSE_STATUS_H      => 102,
			IN_PKT_RESPONSE_STATUS_L      => 101,
			IN_PKT_TRANS_EXCLUSIVE        => 69,
			IN_PKT_BURST_TYPE_H           => 80,
			IN_PKT_BURST_TYPE_L           => 79,
			IN_PKT_ORI_BURST_SIZE_L       => 103,
			IN_PKT_ORI_BURST_SIZE_H       => 105,
			IN_ST_DATA_W                  => 106,
			OUT_PKT_ADDR_H                => 45,
			OUT_PKT_ADDR_L                => 18,
			OUT_PKT_DATA_H                => 15,
			OUT_PKT_DATA_L                => 0,
			OUT_PKT_BYTEEN_H              => 17,
			OUT_PKT_BYTEEN_L              => 16,
			OUT_PKT_BYTE_CNT_H            => 54,
			OUT_PKT_BYTE_CNT_L            => 52,
			OUT_PKT_TRANS_COMPRESSED_READ => 46,
			OUT_PKT_BURST_SIZE_H          => 60,
			OUT_PKT_BURST_SIZE_L          => 58,
			OUT_PKT_RESPONSE_STATUS_H     => 84,
			OUT_PKT_RESPONSE_STATUS_L     => 83,
			OUT_PKT_TRANS_EXCLUSIVE       => 51,
			OUT_PKT_BURST_TYPE_H          => 62,
			OUT_PKT_BURST_TYPE_L          => 61,
			OUT_PKT_ORI_BURST_SIZE_L      => 85,
			OUT_PKT_ORI_BURST_SIZE_H      => 87,
			OUT_ST_DATA_W                 => 88,
			ST_CHANNEL_W                  => 15,
			OPTIMIZE_FOR_RSP              => 0,
			RESPONSE_PATH                 => 0,
			CONSTANT_BURST_SIZE           => 1,
			PACKING                       => 1,
			ENABLE_ADDRESS_ALIGNMENT      => 0
		)
		port map (
			clk                  => sdram_pll_c0_clk,                             --       clk.clk
			reset                => sdram_reset_reset_bridge_in_reset_reset,      -- clk_reset.reset
			in_valid             => cmd_mux_005_src_valid,                        --      sink.valid
			in_channel           => cmd_mux_005_src_channel,                      --          .channel
			in_startofpacket     => cmd_mux_005_src_startofpacket,                --          .startofpacket
			in_endofpacket       => cmd_mux_005_src_endofpacket,                  --          .endofpacket
			in_ready             => cmd_mux_005_src_ready,                        --          .ready
			in_data              => cmd_mux_005_src_data,                         --          .data
			out_endofpacket      => sdram_s1_cmd_width_adapter_src_endofpacket,   --       src.endofpacket
			out_data             => sdram_s1_cmd_width_adapter_src_data,          --          .data
			out_channel          => sdram_s1_cmd_width_adapter_src_channel,       --          .channel
			out_valid            => sdram_s1_cmd_width_adapter_src_valid,         --          .valid
			out_ready            => sdram_s1_cmd_width_adapter_src_ready,         --          .ready
			out_startofpacket    => sdram_s1_cmd_width_adapter_src_startofpacket, --          .startofpacket
			in_command_size_data => "000"                                         -- (terminated)
		);

	crosser : component altera_avalon_st_handshake_clock_crosser
		generic map (
			DATA_WIDTH          => 106,
			BITS_PER_SYMBOL     => 106,
			USE_PACKETS         => 1,
			USE_CHANNEL         => 1,
			CHANNEL_WIDTH       => 15,
			USE_ERROR           => 0,
			ERROR_WIDTH         => 1,
			VALID_SYNC_DEPTH    => 2,
			READY_SYNC_DEPTH    => 2,
			USE_OUTPUT_PIPELINE => 0
		)
		port map (
			in_clk            => clk_0_clk_clk,                                  --        in_clk.clk
			in_reset          => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --  in_clk_reset.reset
			out_clk           => sdram_pll_c0_clk,                               --       out_clk.clk
			out_reset         => sdram_reset_reset_bridge_in_reset_reset,        -- out_clk_reset.reset
			in_ready          => cmd_demux_src5_ready,                           --            in.ready
			in_valid          => cmd_demux_src5_valid,                           --              .valid
			in_startofpacket  => cmd_demux_src5_startofpacket,                   --              .startofpacket
			in_endofpacket    => cmd_demux_src5_endofpacket,                     --              .endofpacket
			in_channel        => cmd_demux_src5_channel,                         --              .channel
			in_data           => cmd_demux_src5_data,                            --              .data
			out_ready         => crosser_out_ready,                              --           out.ready
			out_valid         => crosser_out_valid,                              --              .valid
			out_startofpacket => crosser_out_startofpacket,                      --              .startofpacket
			out_endofpacket   => crosser_out_endofpacket,                        --              .endofpacket
			out_channel       => crosser_out_channel,                            --              .channel
			out_data          => crosser_out_data,                               --              .data
			in_empty          => "0",                                            --   (terminated)
			in_error          => "0",                                            --   (terminated)
			out_empty         => open,                                           --   (terminated)
			out_error         => open                                            --   (terminated)
		);

	crosser_001 : component altera_avalon_st_handshake_clock_crosser
		generic map (
			DATA_WIDTH          => 106,
			BITS_PER_SYMBOL     => 106,
			USE_PACKETS         => 1,
			USE_CHANNEL         => 1,
			CHANNEL_WIDTH       => 15,
			USE_ERROR           => 0,
			ERROR_WIDTH         => 1,
			VALID_SYNC_DEPTH    => 2,
			READY_SYNC_DEPTH    => 2,
			USE_OUTPUT_PIPELINE => 0
		)
		port map (
			in_clk            => clk_0_clk_clk,                                  --        in_clk.clk
			in_reset          => nios2_gen2_0_reset_reset_bridge_in_reset_reset, --  in_clk_reset.reset
			out_clk           => sdram_pll_c0_clk,                               --       out_clk.clk
			out_reset         => sdram_reset_reset_bridge_in_reset_reset,        -- out_clk_reset.reset
			in_ready          => cmd_demux_001_src5_ready,                       --            in.ready
			in_valid          => cmd_demux_001_src5_valid,                       --              .valid
			in_startofpacket  => cmd_demux_001_src5_startofpacket,               --              .startofpacket
			in_endofpacket    => cmd_demux_001_src5_endofpacket,                 --              .endofpacket
			in_channel        => cmd_demux_001_src5_channel,                     --              .channel
			in_data           => cmd_demux_001_src5_data,                        --              .data
			out_ready         => crosser_001_out_ready,                          --           out.ready
			out_valid         => crosser_001_out_valid,                          --              .valid
			out_startofpacket => crosser_001_out_startofpacket,                  --              .startofpacket
			out_endofpacket   => crosser_001_out_endofpacket,                    --              .endofpacket
			out_channel       => crosser_001_out_channel,                        --              .channel
			out_data          => crosser_001_out_data,                           --              .data
			in_empty          => "0",                                            --   (terminated)
			in_error          => "0",                                            --   (terminated)
			out_empty         => open,                                           --   (terminated)
			out_error         => open                                            --   (terminated)
		);

	crosser_002 : component altera_avalon_st_handshake_clock_crosser
		generic map (
			DATA_WIDTH          => 106,
			BITS_PER_SYMBOL     => 106,
			USE_PACKETS         => 1,
			USE_CHANNEL         => 1,
			CHANNEL_WIDTH       => 15,
			USE_ERROR           => 0,
			ERROR_WIDTH         => 1,
			VALID_SYNC_DEPTH    => 2,
			READY_SYNC_DEPTH    => 2,
			USE_OUTPUT_PIPELINE => 0
		)
		port map (
			in_clk            => sdram_pll_c0_clk,                               --        in_clk.clk
			in_reset          => sdram_reset_reset_bridge_in_reset_reset,        --  in_clk_reset.reset
			out_clk           => clk_0_clk_clk,                                  --       out_clk.clk
			out_reset         => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- out_clk_reset.reset
			in_ready          => rsp_demux_005_src0_ready,                       --            in.ready
			in_valid          => rsp_demux_005_src0_valid,                       --              .valid
			in_startofpacket  => rsp_demux_005_src0_startofpacket,               --              .startofpacket
			in_endofpacket    => rsp_demux_005_src0_endofpacket,                 --              .endofpacket
			in_channel        => rsp_demux_005_src0_channel,                     --              .channel
			in_data           => rsp_demux_005_src0_data,                        --              .data
			out_ready         => crosser_002_out_ready,                          --           out.ready
			out_valid         => crosser_002_out_valid,                          --              .valid
			out_startofpacket => crosser_002_out_startofpacket,                  --              .startofpacket
			out_endofpacket   => crosser_002_out_endofpacket,                    --              .endofpacket
			out_channel       => crosser_002_out_channel,                        --              .channel
			out_data          => crosser_002_out_data,                           --              .data
			in_empty          => "0",                                            --   (terminated)
			in_error          => "0",                                            --   (terminated)
			out_empty         => open,                                           --   (terminated)
			out_error         => open                                            --   (terminated)
		);

	crosser_003 : component altera_avalon_st_handshake_clock_crosser
		generic map (
			DATA_WIDTH          => 106,
			BITS_PER_SYMBOL     => 106,
			USE_PACKETS         => 1,
			USE_CHANNEL         => 1,
			CHANNEL_WIDTH       => 15,
			USE_ERROR           => 0,
			ERROR_WIDTH         => 1,
			VALID_SYNC_DEPTH    => 2,
			READY_SYNC_DEPTH    => 2,
			USE_OUTPUT_PIPELINE => 0
		)
		port map (
			in_clk            => sdram_pll_c0_clk,                               --        in_clk.clk
			in_reset          => sdram_reset_reset_bridge_in_reset_reset,        --  in_clk_reset.reset
			out_clk           => clk_0_clk_clk,                                  --       out_clk.clk
			out_reset         => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- out_clk_reset.reset
			in_ready          => rsp_demux_005_src1_ready,                       --            in.ready
			in_valid          => rsp_demux_005_src1_valid,                       --              .valid
			in_startofpacket  => rsp_demux_005_src1_startofpacket,               --              .startofpacket
			in_endofpacket    => rsp_demux_005_src1_endofpacket,                 --              .endofpacket
			in_channel        => rsp_demux_005_src1_channel,                     --              .channel
			in_data           => rsp_demux_005_src1_data,                        --              .data
			out_ready         => crosser_003_out_ready,                          --           out.ready
			out_valid         => crosser_003_out_valid,                          --              .valid
			out_startofpacket => crosser_003_out_startofpacket,                  --              .startofpacket
			out_endofpacket   => crosser_003_out_endofpacket,                    --              .endofpacket
			out_channel       => crosser_003_out_channel,                        --              .channel
			out_data          => crosser_003_out_data,                           --              .data
			in_empty          => "0",                                            --   (terminated)
			in_error          => "0",                                            --   (terminated)
			out_empty         => open,                                           --   (terminated)
			out_error         => open                                            --   (terminated)
		);

	avalon_st_adapter : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                            -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset,           -- in_rst_0.reset
			in_0_data      => jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data,  --     in_0.data
			in_0_valid     => jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid, --         .valid
			in_0_ready     => jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready, --         .ready
			out_0_data     => avalon_st_adapter_out_0_data,                             --    out_0.data
			out_0_valid    => avalon_st_adapter_out_0_valid,                            --         .valid
			out_0_ready    => avalon_st_adapter_out_0_ready,                            --         .ready
			out_0_error    => avalon_st_adapter_out_0_error                             --         .error
		);

	avalon_st_adapter_001 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                         -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset,        -- in_rst_0.reset
			in_0_data      => sysid_qsys_0_control_slave_agent_rdata_fifo_src_data,  --     in_0.data
			in_0_valid     => sysid_qsys_0_control_slave_agent_rdata_fifo_src_valid, --         .valid
			in_0_ready     => sysid_qsys_0_control_slave_agent_rdata_fifo_src_ready, --         .ready
			out_0_data     => avalon_st_adapter_001_out_0_data,                      --    out_0.data
			out_0_valid    => avalon_st_adapter_001_out_0_valid,                     --         .valid
			out_0_ready    => avalon_st_adapter_001_out_0_ready,                     --         .ready
			out_0_error    => avalon_st_adapter_001_out_0_error                      --         .error
		);

	avalon_st_adapter_002 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                           -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset,          -- in_rst_0.reset
			in_0_data      => nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_data,  --     in_0.data
			in_0_valid     => nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_valid, --         .valid
			in_0_ready     => nios2_gen2_0_debug_mem_slave_agent_rdata_fifo_src_ready, --         .ready
			out_0_data     => avalon_st_adapter_002_out_0_data,                        --    out_0.data
			out_0_valid    => avalon_st_adapter_002_out_0_valid,                       --         .valid
			out_0_ready    => avalon_st_adapter_002_out_0_ready,                       --         .ready
			out_0_error    => avalon_st_adapter_002_out_0_error                        --         .error
		);

	avalon_st_adapter_003 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => sdram_pll_pll_slave_agent_rdata_fifo_src_data,  --     in_0.data
			in_0_valid     => sdram_pll_pll_slave_agent_rdata_fifo_src_valid, --         .valid
			in_0_ready     => sdram_pll_pll_slave_agent_rdata_fifo_src_ready, --         .ready
			out_0_data     => avalon_st_adapter_003_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_003_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_003_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_003_out_0_error               --         .error
		);

	avalon_st_adapter_004 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => onchip_memory2_0_s1_agent_rdata_fifo_src_data,  --     in_0.data
			in_0_valid     => onchip_memory2_0_s1_agent_rdata_fifo_src_valid, --         .valid
			in_0_ready     => onchip_memory2_0_s1_agent_rdata_fifo_src_ready, --         .ready
			out_0_data     => avalon_st_adapter_004_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_004_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_004_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_004_out_0_error               --         .error
		);

	avalon_st_adapter_005 : component lab62soc_mm_interconnect_0_avalon_st_adapter_005
		generic map (
			inBitsPerSymbol => 18,
			inUsePackets    => 0,
			inDataWidth     => 18,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 18,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => sdram_pll_c0_clk,                        -- in_clk_0.clk
			in_rst_0_reset => sdram_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => sdram_s1_agent_rdata_fifo_out_data,      --     in_0.data
			in_0_valid     => sdram_s1_agent_rdata_fifo_out_valid,     --         .valid
			in_0_ready     => sdram_s1_agent_rdata_fifo_out_ready,     --         .ready
			out_0_data     => avalon_st_adapter_005_out_0_data,        --    out_0.data
			out_0_valid    => avalon_st_adapter_005_out_0_valid,       --         .valid
			out_0_ready    => avalon_st_adapter_005_out_0_ready,       --         .ready
			out_0_error    => avalon_st_adapter_005_out_0_error        --         .error
		);

	avalon_st_adapter_006 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => keycode_s1_agent_rdata_fifo_src_data,           --     in_0.data
			in_0_valid     => keycode_s1_agent_rdata_fifo_src_valid,          --         .valid
			in_0_ready     => keycode_s1_agent_rdata_fifo_src_ready,          --         .ready
			out_0_data     => avalon_st_adapter_006_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_006_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_006_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_006_out_0_error               --         .error
		);

	avalon_st_adapter_007 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => usb_irq_s1_agent_rdata_fifo_src_data,           --     in_0.data
			in_0_valid     => usb_irq_s1_agent_rdata_fifo_src_valid,          --         .valid
			in_0_ready     => usb_irq_s1_agent_rdata_fifo_src_ready,          --         .ready
			out_0_data     => avalon_st_adapter_007_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_007_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_007_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_007_out_0_error               --         .error
		);

	avalon_st_adapter_008 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => usb_gpx_s1_agent_rdata_fifo_src_data,           --     in_0.data
			in_0_valid     => usb_gpx_s1_agent_rdata_fifo_src_valid,          --         .valid
			in_0_ready     => usb_gpx_s1_agent_rdata_fifo_src_ready,          --         .ready
			out_0_data     => avalon_st_adapter_008_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_008_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_008_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_008_out_0_error               --         .error
		);

	avalon_st_adapter_009 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => usb_rst_s1_agent_rdata_fifo_src_data,           --     in_0.data
			in_0_valid     => usb_rst_s1_agent_rdata_fifo_src_valid,          --         .valid
			in_0_ready     => usb_rst_s1_agent_rdata_fifo_src_ready,          --         .ready
			out_0_data     => avalon_st_adapter_009_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_009_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_009_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_009_out_0_error               --         .error
		);

	avalon_st_adapter_010 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => hex_digits_pio_s1_agent_rdata_fifo_src_data,    --     in_0.data
			in_0_valid     => hex_digits_pio_s1_agent_rdata_fifo_src_valid,   --         .valid
			in_0_ready     => hex_digits_pio_s1_agent_rdata_fifo_src_ready,   --         .ready
			out_0_data     => avalon_st_adapter_010_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_010_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_010_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_010_out_0_error               --         .error
		);

	avalon_st_adapter_011 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => leds_pio_s1_agent_rdata_fifo_src_data,          --     in_0.data
			in_0_valid     => leds_pio_s1_agent_rdata_fifo_src_valid,         --         .valid
			in_0_ready     => leds_pio_s1_agent_rdata_fifo_src_ready,         --         .ready
			out_0_data     => avalon_st_adapter_011_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_011_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_011_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_011_out_0_error               --         .error
		);

	avalon_st_adapter_012 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => key_s1_agent_rdata_fifo_src_data,               --     in_0.data
			in_0_valid     => key_s1_agent_rdata_fifo_src_valid,              --         .valid
			in_0_ready     => key_s1_agent_rdata_fifo_src_ready,              --         .ready
			out_0_data     => avalon_st_adapter_012_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_012_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_012_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_012_out_0_error               --         .error
		);

	avalon_st_adapter_013 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                  -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset, -- in_rst_0.reset
			in_0_data      => timer_0_s1_agent_rdata_fifo_src_data,           --     in_0.data
			in_0_valid     => timer_0_s1_agent_rdata_fifo_src_valid,          --         .valid
			in_0_ready     => timer_0_s1_agent_rdata_fifo_src_ready,          --         .ready
			out_0_data     => avalon_st_adapter_013_out_0_data,               --    out_0.data
			out_0_valid    => avalon_st_adapter_013_out_0_valid,              --         .valid
			out_0_ready    => avalon_st_adapter_013_out_0_ready,              --         .ready
			out_0_error    => avalon_st_adapter_013_out_0_error               --         .error
		);

	avalon_st_adapter_014 : component lab62soc_mm_interconnect_0_avalon_st_adapter
		generic map (
			inBitsPerSymbol => 34,
			inUsePackets    => 0,
			inDataWidth     => 34,
			inChannelWidth  => 0,
			inErrorWidth    => 0,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 1,
			inReadyLatency  => 0,
			outDataWidth    => 34,
			outChannelWidth => 0,
			outErrorWidth   => 1,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 1,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => clk_0_clk_clk,                                     -- in_clk_0.clk
			in_rst_0_reset => nios2_gen2_0_reset_reset_bridge_in_reset_reset,    -- in_rst_0.reset
			in_0_data      => spi_0_spi_control_port_agent_rdata_fifo_src_data,  --     in_0.data
			in_0_valid     => spi_0_spi_control_port_agent_rdata_fifo_src_valid, --         .valid
			in_0_ready     => spi_0_spi_control_port_agent_rdata_fifo_src_ready, --         .ready
			out_0_data     => avalon_st_adapter_014_out_0_data,                  --    out_0.data
			out_0_valid    => avalon_st_adapter_014_out_0_valid,                 --         .valid
			out_0_ready    => avalon_st_adapter_014_out_0_ready,                 --         .ready
			out_0_error    => avalon_st_adapter_014_out_0_error                  --         .error
		);

end architecture rtl; -- of lab62soc_mm_interconnect_0
